{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\GroupDetail\\\\modals\\\\RoomAssignmentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomAssignmentModal = ({\n  show,\n  onHide,\n  initialData,\n  onSave,\n  availableHotels\n}) => {\n  _s();\n  // Los campos fijos vienen en initialData: nombre, edad, etc.\n  // Los campos editables son: hotel, room type, room number, notas.\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\n  const [roomType, setRoomType] = useState(initialData.type || '');\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\n  const [notes, setNotes] = useState(initialData.comments || '');\n  const [validationMsg, setValidationMsg] = useState('');\n\n  // Opciones para tipo de habitación se actualizarán al seleccionar un hotel.\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\n  // Opciones para el número de habitación, obtenidas del endpoint pendiente.\n  const [roomNumberOptions, setRoomNumberOptions] = useState([]);\n\n  // Cuando se selecciona un hotel, se debe actualizar el desplegable de tipos.\n  useEffect(() => {\n    if (hotelId) {\n      // Llamar al endpoint (o usar datos ya disponibles) para obtener los tipos de habitación\n      // Por ahora, simulamos:\n      const simulatedTypes = hotelId === '5' ? ['Doble', 'Individual'] : ['Doble'];\n      setRoomTypeOptions(simulatedTypes);\n      // También se puede obtener la lista de habitaciones disponibles para llenar roomNumberOptions.\n      // Simulamos con un arreglo:\n      const simulatedRooms = hotelId === '5' ? ['101', '102', '103'] : ['201', '202'];\n      setRoomNumberOptions(simulatedRooms);\n    }\n  }, [hotelId]);\n\n  // Función para guardar la asignación\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Validar que se seleccione un hotel y que los campos obligatorios estén completos.\n    if (!hotelId) {\n      setValidationMsg('Debe seleccionar un hotel.');\n      return;\n    }\n    if (!roomType) {\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\n      return;\n    }\n    if (!roomNumber) {\n      setValidationMsg('Debe seleccionar o ingresar el número de habitación.');\n      return;\n    }\n    // Construir el payload a enviar\n    const payload = {\n      id: initialData.id,\n      // id de la asignación, si es edición\n      id_group: initialData.id_group,\n      client_id: initialData.id_clients,\n      // id del cliente\n      date: initialData.date,\n      // La fecha de asignación no se modifica\n      city: initialData.city,\n      hotel_id: parseInt(hotelId, 10),\n      room_type: roomType,\n      room_number: roomNumber,\n      comments: notes\n      // Otros campos fijos no se modifican.\n    };\n    onSave(payload).then(() => {\n      onHide();\n    }).catch(err => {\n      setValidationMsg(err.message || 'Error al guardar la asignación.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    size: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cliente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), \" \", `${initialData.first_name} ${initialData.second_name} ${initialData.paternal_surname} ${initialData.mother_surname}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Edad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), \" \", initialData.age || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sexo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), \" \", initialData.sex || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pasaporte:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), \" \", initialData.passport || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), \" \", initialData.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ciudad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), \" \", initialData.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editHotel\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: hotelId,\n            onChange: e => {\n              setHotelId(e.target.value);\n              // Al seleccionar un hotel, actualizar automáticamente Ciudad, Check-in y Check-out.\n              // Suponiendo que availableHotels incluye estos datos:\n              const selectedHotel = availableHotels.find(h => h.id_hotel.toString() === e.target.value);\n              if (selectedHotel) {\n                // Ejemplo: la ciudad, check_in_date y departure_date vienen del hotel asignado\n                // Nota: estos valores se ponen en campos de solo lectura.\n                setCity(selectedHotel.city);\n                setCheckIn(selectedHotel.check_in_date ? selectedHotel.check_in_date.split('T')[0] : '');\n                setCheckOut(selectedHotel.departure_date ? selectedHotel.departure_date.split('T')[0] : '');\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), availableHotels.map(h => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: h.id_hotel,\n              children: h.hotel_name\n            }, h.id_hotel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Ciudad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: city,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckIn\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkIn,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckOut\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkOut,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editRoomType\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Tipo de Habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: roomType,\n            onChange: e => setRoomType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un tipo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), roomTypeOptions.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editRoomNumber\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"N\\xFAmero de Habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: roomNumber,\n            onChange: e => setRoomNumber(e.target.value),\n            placeholder: \"Ingrese el n\\xFAmero de habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editNotes\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Notas / Comentarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: notes,\n            onChange: e => setNotes(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), validationMsg && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: validationMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onHide,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomAssignmentModal, \"F43VfueKuQ0k3HMemQJ0JN66wZo=\");\n_c = RoomAssignmentModal;\nRoomAssignmentModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  initialData: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  availableHotels: PropTypes.array.isRequired\n};\nexport default RoomAssignmentModal;\nvar _c;\n$RefreshReg$(_c, \"RoomAssignmentModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Modal","Button","Form","Row","Col","Alert","jsxDEV","_jsxDEV","RoomAssignmentModal","show","onHide","initialData","onSave","availableHotels","_s","hotelId","setHotelId","id_hotel","roomType","setRoomType","type","roomNumber","setRoomNumber","room_number","notes","setNotes","comments","validationMsg","setValidationMsg","roomTypeOptions","setRoomTypeOptions","roomNumberOptions","setRoomNumberOptions","simulatedTypes","simulatedRooms","handleSubmit","e","preventDefault","payload","id","id_group","client_id","id_clients","date","city","hotel_id","parseInt","room_type","then","catch","err","message","centered","size","children","onSubmit","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","first_name","second_name","paternal_surname","mother_surname","age","sex","passport","Group","controlId","Label","Select","value","onChange","target","selectedHotel","find","h","toString","setCity","setCheckIn","check_in_date","split","setCheckOut","departure_date","map","hotel_name","md","Control","readOnly","checkIn","checkOut","placeholder","as","rows","variant","Footer","onClick","_c","propTypes","bool","isRequired","func","object","array","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/GroupDetail/modals/RoomAssignmentModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\n\r\nconst RoomAssignmentModal = ({ show, onHide, initialData, onSave, availableHotels }) => {\r\n  // Los campos fijos vienen en initialData: nombre, edad, etc.\r\n  // Los campos editables son: hotel, room type, room number, notas.\r\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\r\n  const [roomType, setRoomType] = useState(initialData.type || '');\r\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\r\n  const [notes, setNotes] = useState(initialData.comments || '');\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n\r\n  // Opciones para tipo de habitación se actualizarán al seleccionar un hotel.\r\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\r\n  // Opciones para el número de habitación, obtenidas del endpoint pendiente.\r\n  const [roomNumberOptions, setRoomNumberOptions] = useState([]);\r\n\r\n  // Cuando se selecciona un hotel, se debe actualizar el desplegable de tipos.\r\n  useEffect(() => {\r\n    if (hotelId) {\r\n      // Llamar al endpoint (o usar datos ya disponibles) para obtener los tipos de habitación\r\n      // Por ahora, simulamos:\r\n      const simulatedTypes = hotelId === '5'\r\n        ? ['Doble', 'Individual']\r\n        : ['Doble'];\r\n      setRoomTypeOptions(simulatedTypes);\r\n      // También se puede obtener la lista de habitaciones disponibles para llenar roomNumberOptions.\r\n      // Simulamos con un arreglo:\r\n      const simulatedRooms = hotelId === '5' ? ['101', '102', '103'] : ['201', '202'];\r\n      setRoomNumberOptions(simulatedRooms);\r\n    }\r\n  }, [hotelId]);\r\n\r\n  // Función para guardar la asignación\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validar que se seleccione un hotel y que los campos obligatorios estén completos.\r\n    if (!hotelId) {\r\n      setValidationMsg('Debe seleccionar un hotel.');\r\n      return;\r\n    }\r\n    if (!roomType) {\r\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\r\n      return;\r\n    }\r\n    if (!roomNumber) {\r\n      setValidationMsg('Debe seleccionar o ingresar el número de habitación.');\r\n      return;\r\n    }\r\n    // Construir el payload a enviar\r\n    const payload = {\r\n      id: initialData.id, // id de la asignación, si es edición\r\n      id_group: initialData.id_group,\r\n      client_id: initialData.id_clients, // id del cliente\r\n      date: initialData.date, // La fecha de asignación no se modifica\r\n      city: initialData.city,\r\n      hotel_id: parseInt(hotelId, 10),\r\n      room_type: roomType,\r\n      room_number: roomNumber,\r\n      comments: notes,\r\n      // Otros campos fijos no se modifican.\r\n    };\r\n    onSave(payload)\r\n      .then(() => {\r\n        onHide();\r\n      })\r\n      .catch((err) => {\r\n        setValidationMsg(err.message || 'Error al guardar la asignación.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered size=\"lg\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Información no editable (por ejemplo, datos del cliente) */}\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <strong>Cliente:</strong> {`${initialData.first_name} ${initialData.second_name} ${initialData.paternal_surname} ${initialData.mother_surname}`}\r\n            </Col>\r\n            <Col>\r\n              <strong>Edad:</strong> {initialData.age || '-'}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <strong>Sexo:</strong> {initialData.sex || '-'}\r\n            </Col>\r\n            <Col>\r\n              <strong>Pasaporte:</strong> {initialData.passport || '-'}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <strong>Fecha:</strong> {initialData.date}\r\n            </Col>\r\n            <Col>\r\n              <strong>Ciudad:</strong> {initialData.city}\r\n            </Col>\r\n          </Row>\r\n          {/* Campo para Hotel */}\r\n        <Form.Group controlId=\"editHotel\" className=\"mb-3\">\r\n          <Form.Label>Hotel</Form.Label>\r\n          <Form.Select value={hotelId} onChange={(e) => {\r\n            setHotelId(e.target.value);\r\n            // Al seleccionar un hotel, actualizar automáticamente Ciudad, Check-in y Check-out.\r\n            // Suponiendo que availableHotels incluye estos datos:\r\n            const selectedHotel = availableHotels.find(h => h.id_hotel.toString() === e.target.value);\r\n            if (selectedHotel) {\r\n              // Ejemplo: la ciudad, check_in_date y departure_date vienen del hotel asignado\r\n              // Nota: estos valores se ponen en campos de solo lectura.\r\n              setCity(selectedHotel.city);\r\n              setCheckIn(selectedHotel.check_in_date ? selectedHotel.check_in_date.split('T')[0] : '');\r\n              setCheckOut(selectedHotel.departure_date ? selectedHotel.departure_date.split('T')[0] : '');\r\n            }\r\n          }}>\r\n            <option value=\"\">Seleccione un hotel</option>\r\n            {availableHotels.map((h) => (\r\n              <option key={h.id_hotel} value={h.id_hotel}>{h.hotel_name}</option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        {/* Mostrar Ciudad y Fechas (solo lectura) */}\r\n        <Row className=\"mb-3\">\r\n          <Col md={4}>\r\n            <Form.Group controlId=\"displayCity\">\r\n              <Form.Label>Ciudad</Form.Label>\r\n              <Form.Control type=\"text\" value={city} readOnly />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Form.Group controlId=\"displayCheckIn\">\r\n              <Form.Label>Check-in</Form.Label>\r\n              <Form.Control type=\"date\" value={checkIn} readOnly />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Form.Group controlId=\"displayCheckOut\">\r\n              <Form.Label>Check-out</Form.Label>\r\n              <Form.Control type=\"date\" value={checkOut} readOnly />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* Resto de campos: Tipo de habitación, Número de habitación, Notas */}\r\n        <Form.Group controlId=\"editRoomType\" className=\"mb-3\">\r\n          <Form.Label>Tipo de Habitación</Form.Label>\r\n          <Form.Select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\r\n            <option value=\"\">Seleccione un tipo</option>\r\n            {roomTypeOptions.map((type) => (\r\n              <option key={type} value={type}>{type}</option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"editRoomNumber\" className=\"mb-3\">\r\n          <Form.Label>Número de Habitación</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={roomNumber}\r\n            onChange={(e) => setRoomNumber(e.target.value)}\r\n            placeholder=\"Ingrese el número de habitación\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"editNotes\" className=\"mb-3\">\r\n          <Form.Label>Notas / Comentarios</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={notes}\r\n            onChange={(e) => setNotes(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        {validationMsg && <Alert variant=\"danger\">{validationMsg}</Alert>}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onHide}>Cancelar</Button>\r\n          <Button variant=\"primary\" type=\"submit\">Guardar Cambios</Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nRoomAssignmentModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  initialData: PropTypes.object.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  availableHotels: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default RoomAssignmentModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}