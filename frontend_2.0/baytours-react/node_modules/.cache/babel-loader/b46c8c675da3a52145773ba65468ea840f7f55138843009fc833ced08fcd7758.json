{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\OptionalsSection.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport OptionalRow from './OptionalRow';\nimport '../styles/_grupo_detalle.scss';\n\n/**\r\n * OptionalsSection Component\r\n * \r\n * Este componente muestra la sección de opcionales en la vista de detalle del grupo.\r\n * Renderiza una tabla con la información de cada cliente y sus opcionales, utilizando\r\n * datos del itinerario para generar las columnas correspondientes.\r\n * \r\n * Props:\r\n *  - data: Array de clientes con opcionales (table_data).\r\n *  - itinerary: Información del itinerario (array de ciudades y días).\r\n *  - idGroup: ID del grupo (string o número).\r\n *  - currentDate: Timestamp o fecha actual para comparaciones.\r\n *  - onAddOptional: Callback para agregar un opcional.\r\n *  - onEditOptional: Callback para editar un opcional.\r\n *  - onOptionModal: Callback para abrir el modal de opciones (para editar, agregar o borrar).\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionalsSection = ({\n  data,\n  itinerary = [],\n  idGroup,\n  currentDate = Date.now(),\n  onAddOptional,\n  onEditOptional,\n  onOptionModal\n}) => {\n  // Genera las columnas del header a partir del itinerario\n  const headerColumns = [];\n  itinerary.forEach(cityInfo => {\n    cityInfo.days.forEach(day => {\n      let dayClass = '';\n      // Convierte la fecha de formato \"dd-mm-yyyy\" a un objeto Date\n      const dayDate = new Date(day.date.split('-').reverse().join('-'));\n      const current = new Date(currentDate);\n      if (dayDate.toDateString() === current.toDateString()) {\n        dayClass = 'current-city';\n      } else if (dayDate < current) {\n        dayClass = 'past-city';\n      }\n      headerColumns.push({\n        city: cityInfo.city,\n        date: day.date,\n        dayId: day.id,\n        className: dayClass\n      });\n    });\n  });\n\n  // Calcula el total global de \"Total Opcionales\" para todos los clientes\n  const globalTotal = data.reduce((total, client) => {\n    const clientTotal = Object.values(client.day_optionals || {}).reduce((sum, optionals) => {\n      return sum + optionals.reduce((s, opt) => s + (opt.total || 0), 0);\n    }, 0);\n    return total + clientTotal;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      hover: true,\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-custom\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Nombre Completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Edad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Sexo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), headerColumns.map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: col.className,\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: [col.city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: col.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Total Opcionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data && data.length > 0 ? data.map(client => /*#__PURE__*/_jsxDEV(OptionalRow, {\n          client: client,\n          itinerary: itinerary,\n          idGroup: idGroup,\n          currentDate: currentDate,\n          onAddOptional: onAddOptional,\n          onEditOptional: onEditOptional,\n          onOptionModal: onOptionModal\n        }, client.id_clients, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 3 + headerColumns.length + 1,\n            children: \"No se encontraron opcionales.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 3 + headerColumns.length + 1,\n            style: {\n              textAlign: 'right',\n              fontWeight: 'bold'\n            },\n            children: [\"Total General: \", globalTotal.toFixed(2), \" \\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = OptionalsSection;\nOptionalsSection.propTypes = {\n  data: PropTypes.array.isRequired,\n  itinerary: PropTypes.array,\n  idGroup: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  currentDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onAddOptional: PropTypes.func.isRequired,\n  onEditOptional: PropTypes.func.isRequired,\n  onOptionModal: PropTypes.func.isRequired\n};\nexport default _c2 = /*#__PURE__*/React.memo(OptionalsSection);\nvar _c, _c2;\n$RefreshReg$(_c, \"OptionalsSection\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","Table","OptionalRow","jsxDEV","_jsxDEV","OptionalsSection","data","itinerary","idGroup","currentDate","Date","now","onAddOptional","onEditOptional","onOptionModal","headerColumns","forEach","cityInfo","days","day","dayClass","dayDate","date","split","reverse","join","current","toDateString","push","city","dayId","id","className","globalTotal","reduce","total","client","clientTotal","Object","values","day_optionals","sum","optionals","s","opt","children","responsive","hover","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","map","col","idx","length","id_clients","colSpan","textAlign","fontWeight","toFixed","_c","propTypes","array","isRequired","oneOfType","string","number","func","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/OptionalsSection.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport OptionalRow from './OptionalRow';\r\nimport '../styles/_grupo_detalle.scss';\r\n\r\n/**\r\n * OptionalsSection Component\r\n * \r\n * Este componente muestra la sección de opcionales en la vista de detalle del grupo.\r\n * Renderiza una tabla con la información de cada cliente y sus opcionales, utilizando\r\n * datos del itinerario para generar las columnas correspondientes.\r\n * \r\n * Props:\r\n *  - data: Array de clientes con opcionales (table_data).\r\n *  - itinerary: Información del itinerario (array de ciudades y días).\r\n *  - idGroup: ID del grupo (string o número).\r\n *  - currentDate: Timestamp o fecha actual para comparaciones.\r\n *  - onAddOptional: Callback para agregar un opcional.\r\n *  - onEditOptional: Callback para editar un opcional.\r\n *  - onOptionModal: Callback para abrir el modal de opciones (para editar, agregar o borrar).\r\n */\r\nconst OptionalsSection = ({\r\n  data,\r\n  itinerary = [],\r\n  idGroup,\r\n  currentDate = Date.now(),\r\n  onAddOptional,\r\n  onEditOptional,\r\n  onOptionModal,\r\n}) => {\r\n\r\n  // Genera las columnas del header a partir del itinerario\r\n  const headerColumns = [];\r\n  itinerary.forEach(cityInfo => {\r\n    cityInfo.days.forEach(day => {\r\n      let dayClass = '';\r\n      // Convierte la fecha de formato \"dd-mm-yyyy\" a un objeto Date\r\n      const dayDate = new Date(day.date.split('-').reverse().join('-'));\r\n      const current = new Date(currentDate);\r\n      if (dayDate.toDateString() === current.toDateString()) {\r\n        dayClass = 'current-city';\r\n      } else if (dayDate < current) {\r\n        dayClass = 'past-city';\r\n      }\r\n      headerColumns.push({\r\n        city: cityInfo.city,\r\n        date: day.date,\r\n        dayId: day.id,\r\n        className: dayClass,\r\n      });\r\n    });\r\n  });\r\n\r\n  // Calcula el total global de \"Total Opcionales\" para todos los clientes\r\n  const globalTotal = data.reduce((total, client) => {\r\n    const clientTotal = Object.values(client.day_optionals || {}).reduce((sum, optionals) => {\r\n      return sum + optionals.reduce((s, opt) => s + (opt.total || 0), 0);\r\n    }, 0);\r\n    return total + clientTotal;\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <Table responsive hover className=\"table\">\r\n        <thead className=\"thead-custom\">\r\n          <tr>\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Nombre Completo</th>\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Edad</th>\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Sexo</th>\r\n            {headerColumns.map((col, idx) => (\r\n              <th key={idx} className={col.className} style={{ backgroundColor: '#BDD8F1' }}>\r\n                {col.city}\r\n                <br />\r\n                <small>{col.date}</small>\r\n              </th>\r\n            ))}\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Total Opcionales</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data && data.length > 0 ? (\r\n            data.map(client => (\r\n              <OptionalRow\r\n                key={client.id_clients}\r\n                client={client}\r\n                itinerary={itinerary}\r\n                idGroup={idGroup}\r\n                currentDate={currentDate}\r\n                onAddOptional={onAddOptional}\r\n                onEditOptional={onEditOptional}\r\n                onOptionModal={onOptionModal}\r\n              />\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={3 + headerColumns.length + 1}>No se encontraron opcionales.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td\r\n              colSpan={3 + headerColumns.length + 1}\r\n              style={{ textAlign: 'right', fontWeight: 'bold' }}\r\n            >\r\n              Total General: {globalTotal.toFixed(2)} €\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nOptionalsSection.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  itinerary: PropTypes.array,\r\n  idGroup: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  currentDate: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  onAddOptional: PropTypes.func.isRequired,\r\n  onEditOptional: PropTypes.func.isRequired,\r\n  onOptionModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(OptionalsSection);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}