{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\GroupDetail\\\\modals\\\\HotelAddAnotherModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\n\n/**\r\n * Extrae el año de una fecha en formato \"DD/MM/YYYY\" o \"DD-MM-YYYY\".\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getYearFromDate = dateStr => {\n  if (!dateStr) return '';\n  const parts = dateStr.includes('/') ? dateStr.split('/') : dateStr.split('-');\n  return parts.length === 3 ? parts[2] : '';\n};\n\n/**\r\n * Función auxiliar para formatear una fecha al formato \"YYYY-MM-DD\".\r\n * Soporta:\r\n * - \"DD/MM/YYYY\" o \"DD-MM-YYYY\"\r\n * - \"DD/MM\" o \"DD-MM\", usando defaultYear si se proporciona.\r\n * - Cadenas en formato ISO u otro, usando Date.\r\n */\nconst formatDateForInput = (dateString, defaultYear = '') => {\n  if (!dateString) return '';\n  if (dateString.includes('/')) {\n    const parts = dateString.split('/');\n    if (parts.length === 3) {\n      return `${parts[2]}-${parts[1]}-${parts[0]}`;\n    }\n    if (parts.length === 2 && defaultYear) {\n      return `${defaultYear}-${parts[1]}-${parts[0]}`;\n    }\n  }\n  if (dateString.includes('-')) {\n    const parts = dateString.split('-');\n    if (parts.length === 3 && parts[0].length === 2) {\n      return `${parts[2]}-${parts[1]}-${parts[0]}`;\n    }\n    if (parts.length === 2 && defaultYear) {\n      return `${defaultYear}-${parts[1]}-${parts[0]}`;\n    }\n  }\n  const dateObj = new Date(dateString);\n  if (isNaN(dateObj.getTime())) return '';\n  return dateObj.toISOString().split('T')[0];\n};\n\n/**\r\n * HotelAddAnotherModal permite agregar una nueva asignación de hotel para el mismo día.\r\n *\r\n * Props:\r\n * - show: Booleano que indica si el modal se muestra.\r\n * - onHide: Callback para ocultar el modal.\r\n * - initialData: Objeto que debe contener al menos { city, date, id_group, paxAssigned }.\r\n *                (La ciudad, fecha y PAX asignados se muestran en solo lectura.)\r\n * - onSave: Callback que recibe el payload con los datos ingresados; el componente padre se encargará\r\n *           de llamar al endpoint POST /asign_hotel_same_day. Debe retornar una promesa.\r\n * - groupPax: Número total de pasajeros del grupo (para validar el número de PAX asignados).\r\n * - assignedPaxTotal: Número total de PAX ya asignados.\r\n * - onAddAnother: Callback para abrir el flujo de agregar otro hotel.\r\n */\nconst HotelAddAnotherModal = ({\n  show,\n  onHide,\n  initialData = {},\n  onSave,\n  groupPax,\n  assignedPaxTotal = 0,\n  onAddAnother\n}) => {\n  _s();\n  // Estados para campos editables y mostrados\n  const [city, setCity] = useState('');\n  const [date, setDate] = useState('');\n  const [hotelId, setHotelId] = useState('');\n  const [hotelsList, setHotelsList] = useState([]);\n  const [checkIn, setCheckIn] = useState('');\n  const [checkOut, setCheckOut] = useState('');\n  const [roomingList, setRoomingList] = useState(false);\n  const [proForma, setProForma] = useState(false);\n  const [currency, setCurrency] = useState('EUR');\n  const [totalToPay, setTotalToPay] = useState(0);\n  const [paymentDate, setPaymentDate] = useState('');\n  const [paymentDoneDate, setPaymentDoneDate] = useState('');\n  const [factura, setFactura] = useState(false);\n  const [iga, setIga] = useState(false);\n  const [paxAssigned, setPaxAssigned] = useState(0);\n  const [comment, setComment] = useState('');\n  const [validationMsg, setValidationMsg] = useState('');\n\n  // Estado local para acumular los PAX ya asignados en esta sesión\n  const [localAssignedPax, setLocalAssignedPax] = useState(() => Number(assignedPaxTotal) || 0);\n  const groupPaxNum = parseInt(groupPax, 10) || 0;\n  const availablePax = groupPaxNum - localAssignedPax;\n  useEffect(() => {\n    console.log('groupPax:', groupPaxNum, 'localAssignedPax:', localAssignedPax, 'availablePax:', availablePax);\n  }, [groupPaxNum, localAssignedPax, availablePax]);\n\n  // Extraer el año de la fecha principal para usar en el formateo\n  const defaultYear = getYearFromDate(initialData.date);\n\n  // Cuando cambia initialData, actualizamos los estados correspondientes (sin reiniciar city ni date)\n  useEffect(() => {\n    setCity(initialData.city || '');\n    setDate(formatDateForInput(initialData.date, defaultYear));\n    setPaxAssigned(initialData.paxAssigned || 0);\n    // Reiniciamos campos que deben estar vacíos al iniciar una nueva asignación\n    setHotelId('');\n    setHotelsList([]);\n    setCheckIn('');\n    setCheckOut('');\n    setRoomingList(false);\n    setProForma(false);\n    setCurrency('EUR');\n    setTotalToPay(0);\n    setPaymentDate('');\n    setPaymentDoneDate('');\n    setFactura(false);\n    setIga(false);\n    setComment('');\n    setValidationMsg('');\n    // Reinicializamos localAssignedPax a partir de la prop actual\n    setLocalAssignedPax(Number(assignedPaxTotal) || 0);\n  }, [initialData, assignedPaxTotal, defaultYear]);\n\n  // Al abrir el modal, reiniciamos solo los campos editables (sin tocar city, date ni localAssignedPax)\n  useEffect(() => {\n    if (show) {\n      setHotelId('');\n      setHotelsList([]);\n      setCheckIn('');\n      setCheckOut('');\n      setRoomingList(false);\n      setProForma(false);\n      setTotalToPay(0);\n      setPaymentDate('');\n      setPaymentDoneDate('');\n      setFactura(false);\n      setIga(false);\n      setComment('');\n      setValidationMsg('');\n      // Forzamos recargar la lista de hoteles si hay ciudad definida\n      if (city) {\n        fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(city)}`).then(res => res.json()).then(data => {\n          setHotelsList(data);\n          console.log('Recargados hoteles para', city, data);\n        }).catch(err => console.error('Error al obtener hoteles:', err));\n      }\n    }\n  }, [show, city]);\n\n  // Cuando la fecha esté disponible, calcular checkIn y checkOut automáticamente\n  useEffect(() => {\n    if (date) {\n      setCheckIn(date);\n      const dt = new Date(date);\n      dt.setDate(dt.getDate() + 1);\n      const computedCheckOut = dt.toISOString().split('T')[0];\n      setCheckOut(computedCheckOut);\n      console.log('Calculado checkIn:', date, 'checkOut:', computedCheckOut);\n    }\n  }, [date]);\n\n  // Al tener la ciudad y si el modal está abierto, hacemos GET para obtener la lista de hoteles disponibles\n  useEffect(() => {\n    if (city && show) {\n      fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(city)}`).then(res => res.json()).then(data => {\n        setHotelsList(data);\n        console.log('Hoteles disponibles para', city, data);\n      }).catch(err => console.error('Error al obtener hoteles:', err));\n    }\n  }, [city, show]);\n\n  // Función para manejar el envío del formulario (guardado)\n  const handleSubmit = () => {\n    const paxVal = parseInt(paxAssigned, 10);\n    console.log('handleSubmit: paxAssigned:', paxAssigned, 'paxVal:', paxVal, 'availablePax:', availablePax);\n    if (paxVal === 0) {\n      setValidationMsg('El número de PAX asignados debe ser mayor que 0.');\n      return;\n    }\n    if (paxVal > availablePax) {\n      setValidationMsg(`El número de PAX asignados no puede superar los disponibles (${availablePax}).`);\n      return;\n    }\n    // Construir el payload\n    const payload = {\n      id_hotel: parseInt(hotelId),\n      id_group: initialData.id_group || '',\n      id_day: initialData.id_day || '',\n      start_date: checkIn || null,\n      end_date: checkOut || null,\n      pax: paxVal,\n      currency,\n      total_to_pay: parseFloat(totalToPay),\n      comment,\n      rooming_list: roomingList,\n      pro_forma: proForma,\n      payment_date: paymentDate || null,\n      payment_done_date: paymentDoneDate || null,\n      payed_by: null,\n      factura,\n      iga,\n      updated_by: ''\n    };\n    console.log('Payload a enviar (add another):', payload);\n    return onSave(payload).then(() => {\n      // Actualizamos el acumulado de PAX asignados\n      setLocalAssignedPax(prev => {\n        const newVal = prev + paxVal;\n        console.log('Nuevo localAssignedPax:', newVal);\n        return newVal;\n      });\n      onHide();\n      return true;\n    }).catch(error => {\n      if (error && error.detail) {\n        setValidationMsg(error.detail);\n      } else {\n        setValidationMsg('Error al agregar la asignación.');\n      }\n      console.error('Error en onSave:', error);\n      return false;\n    });\n  };\n\n  // Función para manejar el clic en \"Agregar otro hotel para este día\"\n  const handleAddAnotherClick = () => {\n    handleSubmit().then(saved => {\n      if (saved && onAddAnother) {\n        onAddAnother({\n          city,\n          date,\n          paxAssigned,\n          id_day: initialData.id_day || ''\n        });\n      }\n    });\n  };\n\n  // Carga de divisas (simulada)\n  const [allCurrencies, setAllCurrencies] = useState([]);\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      const currencies = ['EUR', 'USD', 'CHF', 'GBP', 'ARS', 'JPY', 'CNY', 'INR', 'BRL', 'CAD'];\n      setAllCurrencies(currencies);\n    };\n    fetchCurrencies();\n  }, []);\n  const favoriteCurrencies = ['EUR', 'USD', 'CHF', 'GBP'];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    size: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Agregar otro hotel para este d\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Ciudad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: city,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: date,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formHotel\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: hotelId,\n            onChange: e => setHotelId(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), hotelsList.map(hotel => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: hotel.id_hotel,\n              children: hotel.hotel_name\n            }, hotel.id_hotel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCheckIn\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkIn,\n                onChange: e => setCheckIn(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCheckOut\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkOut,\n                onChange: e => setCheckOut(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formRoomingList\",\n              label: \"Rooming List Enviado\",\n              checked: roomingList,\n              onChange: e => setRoomingList(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formProForma\",\n              label: \"Pro Forma Enviado\",\n              checked: proForma,\n              onChange: e => setProForma(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCurrency\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Divisa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: currency,\n                onChange: e => setCurrency(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                  label: \"Favoritas\",\n                  children: favoriteCurrencies.map(favCurrency => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: favCurrency,\n                    children: favCurrency\n                  }, favCurrency, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                  label: \"Todas las divisas\",\n                  children: allCurrencies.filter(curr => !favoriteCurrencies.includes(curr)).map(curr => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: curr,\n                    children: curr\n                  }, curr, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formTotalToPay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Total a Pagar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: totalToPay,\n                onChange: e => setTotalToPay(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPAX\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"PAX Asignados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: paxAssigned,\n                onChange: e => setPaxAssigned(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                muted: true,\n                children: [\"Disponible para asignar: \", availablePax, \" (Total grupo: \", groupPax, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPaymentDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha de Pago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: paymentDate,\n                onChange: e => setPaymentDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPaymentDoneDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha de Pago Realizado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: paymentDoneDate,\n                onChange: e => setPaymentDoneDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formFactura\",\n              label: \"Factura Emitida\",\n              checked: factura,\n              onChange: e => setFactura(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formIGA\",\n              label: \"IGA Gestionado\",\n              checked: iga,\n              onChange: e => setIga(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formComments\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comentarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            placeholder: \"Escribe un comentario para esta asignaci\\xF3n...\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), validationMsg && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: validationMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onHide,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: parseInt(paxAssigned, 10) === 0 || parseInt(paxAssigned, 10) > availablePax,\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: handleAddAnotherClick,\n          disabled: parseInt(paxAssigned, 10) === 0 || parseInt(paxAssigned, 10) >= availablePax,\n          children: \"Agregar otro hotel para este d\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelAddAnotherModal, \"/MYaSYZMDS8+YBCou136xwsKioY=\");\n_c = HotelAddAnotherModal;\nHotelAddAnotherModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  initialData: PropTypes.object,\n  onSave: PropTypes.func.isRequired,\n  groupPax: PropTypes.number.isRequired,\n  assignedPaxTotal: PropTypes.number,\n  onAddAnother: PropTypes.func\n};\nexport default HotelAddAnotherModal;\nvar _c;\n$RefreshReg$(_c, \"HotelAddAnotherModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Modal","Button","Form","Row","Col","Alert","jsxDEV","_jsxDEV","getYearFromDate","dateStr","parts","includes","split","length","formatDateForInput","dateString","defaultYear","dateObj","Date","isNaN","getTime","toISOString","HotelAddAnotherModal","show","onHide","initialData","onSave","groupPax","assignedPaxTotal","onAddAnother","_s","city","setCity","date","setDate","hotelId","setHotelId","hotelsList","setHotelsList","checkIn","setCheckIn","checkOut","setCheckOut","roomingList","setRoomingList","proForma","setProForma","currency","setCurrency","totalToPay","setTotalToPay","paymentDate","setPaymentDate","paymentDoneDate","setPaymentDoneDate","factura","setFactura","iga","setIga","paxAssigned","setPaxAssigned","comment","setComment","validationMsg","setValidationMsg","localAssignedPax","setLocalAssignedPax","Number","groupPaxNum","parseInt","availablePax","console","log","fetch","process","env","REACT_APP_API_URL","encodeURIComponent","then","res","json","data","catch","err","error","dt","getDate","computedCheckOut","handleSubmit","paxVal","payload","id_hotel","id_group","id_day","start_date","end_date","pax","total_to_pay","parseFloat","rooming_list","pro_forma","payment_date","payment_done_date","payed_by","updated_by","prev","newVal","detail","handleAddAnotherClick","saved","allCurrencies","setAllCurrencies","fetchCurrencies","currencies","favoriteCurrencies","centered","size","children","onSubmit","e","preventDefault","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","md","Group","controlId","Label","Control","type","value","readOnly","Select","onChange","target","required","map","hotel","hotel_name","Check","id","label","checked","favCurrency","filter","curr","Text","muted","as","rows","placeholder","variant","Footer","onClick","disabled","_c","propTypes","bool","isRequired","func","object","number","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/GroupDetail/modals/HotelAddAnotherModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\n\r\n/**\r\n * Extrae el año de una fecha en formato \"DD/MM/YYYY\" o \"DD-MM-YYYY\".\r\n */\r\nconst getYearFromDate = (dateStr) => {\r\n  if (!dateStr) return '';\r\n  const parts = dateStr.includes('/') ? dateStr.split('/') : dateStr.split('-');\r\n  return parts.length === 3 ? parts[2] : '';\r\n};\r\n\r\n/**\r\n * Función auxiliar para formatear una fecha al formato \"YYYY-MM-DD\".\r\n * Soporta:\r\n * - \"DD/MM/YYYY\" o \"DD-MM-YYYY\"\r\n * - \"DD/MM\" o \"DD-MM\", usando defaultYear si se proporciona.\r\n * - Cadenas en formato ISO u otro, usando Date.\r\n */\r\nconst formatDateForInput = (dateString, defaultYear = '') => {\r\n  if (!dateString) return '';\r\n  \r\n  if (dateString.includes('/')) {\r\n    const parts = dateString.split('/');\r\n    if (parts.length === 3) {\r\n      return `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n    }\r\n    if (parts.length === 2 && defaultYear) {\r\n      return `${defaultYear}-${parts[1]}-${parts[0]}`;\r\n    }\r\n  }\r\n  if (dateString.includes('-')) {\r\n    const parts = dateString.split('-');\r\n    if (parts.length === 3 && parts[0].length === 2) {\r\n      return `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n    }\r\n    if (parts.length === 2 && defaultYear) {\r\n      return `${defaultYear}-${parts[1]}-${parts[0]}`;\r\n    }\r\n  }\r\n  const dateObj = new Date(dateString);\r\n  if (isNaN(dateObj.getTime())) return '';\r\n  return dateObj.toISOString().split('T')[0];\r\n};\r\n\r\n/**\r\n * HotelAddAnotherModal permite agregar una nueva asignación de hotel para el mismo día.\r\n *\r\n * Props:\r\n * - show: Booleano que indica si el modal se muestra.\r\n * - onHide: Callback para ocultar el modal.\r\n * - initialData: Objeto que debe contener al menos { city, date, id_group, paxAssigned }.\r\n *                (La ciudad, fecha y PAX asignados se muestran en solo lectura.)\r\n * - onSave: Callback que recibe el payload con los datos ingresados; el componente padre se encargará\r\n *           de llamar al endpoint POST /asign_hotel_same_day. Debe retornar una promesa.\r\n * - groupPax: Número total de pasajeros del grupo (para validar el número de PAX asignados).\r\n * - assignedPaxTotal: Número total de PAX ya asignados.\r\n * - onAddAnother: Callback para abrir el flujo de agregar otro hotel.\r\n */\r\nconst HotelAddAnotherModal = ({\r\n  show,\r\n  onHide,\r\n  initialData = {},\r\n  onSave,\r\n  groupPax,\r\n  assignedPaxTotal = 0,\r\n  onAddAnother,\r\n}) => {\r\n  // Estados para campos editables y mostrados\r\n  const [city, setCity] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [hotelId, setHotelId] = useState('');\r\n  const [hotelsList, setHotelsList] = useState([]);\r\n  const [checkIn, setCheckIn] = useState('');\r\n  const [checkOut, setCheckOut] = useState('');\r\n  const [roomingList, setRoomingList] = useState(false);\r\n  const [proForma, setProForma] = useState(false);\r\n  const [currency, setCurrency] = useState('EUR');\r\n  const [totalToPay, setTotalToPay] = useState(0);\r\n  const [paymentDate, setPaymentDate] = useState('');\r\n  const [paymentDoneDate, setPaymentDoneDate] = useState('');\r\n  const [factura, setFactura] = useState(false);\r\n  const [iga, setIga] = useState(false);\r\n  const [paxAssigned, setPaxAssigned] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n\r\n  // Estado local para acumular los PAX ya asignados en esta sesión\r\n  const [localAssignedPax, setLocalAssignedPax] = useState(() => Number(assignedPaxTotal) || 0);\r\n\r\n  const groupPaxNum = parseInt(groupPax, 10) || 0;\r\n  const availablePax = groupPaxNum - localAssignedPax;\r\n  useEffect(() => {\r\n    console.log('groupPax:', groupPaxNum, 'localAssignedPax:', localAssignedPax, 'availablePax:', availablePax);\r\n  }, [groupPaxNum, localAssignedPax, availablePax]);\r\n\r\n  // Extraer el año de la fecha principal para usar en el formateo\r\n  const defaultYear = getYearFromDate(initialData.date);\r\n\r\n  // Cuando cambia initialData, actualizamos los estados correspondientes (sin reiniciar city ni date)\r\n  useEffect(() => {\r\n    setCity(initialData.city || '');\r\n    setDate(formatDateForInput(initialData.date, defaultYear));\r\n    setPaxAssigned(initialData.paxAssigned || 0);\r\n    // Reiniciamos campos que deben estar vacíos al iniciar una nueva asignación\r\n    setHotelId('');\r\n    setHotelsList([]);\r\n    setCheckIn('');\r\n    setCheckOut('');\r\n    setRoomingList(false);\r\n    setProForma(false);\r\n    setCurrency('EUR');\r\n    setTotalToPay(0);\r\n    setPaymentDate('');\r\n    setPaymentDoneDate('');\r\n    setFactura(false);\r\n    setIga(false);\r\n    setComment('');\r\n    setValidationMsg('');\r\n    // Reinicializamos localAssignedPax a partir de la prop actual\r\n    setLocalAssignedPax(Number(assignedPaxTotal) || 0);\r\n  }, [initialData, assignedPaxTotal, defaultYear]);\r\n\r\n  // Al abrir el modal, reiniciamos solo los campos editables (sin tocar city, date ni localAssignedPax)\r\n  useEffect(() => {\r\n    if (show) {\r\n      setHotelId('');\r\n      setHotelsList([]);\r\n      setCheckIn('');\r\n      setCheckOut('');\r\n      setRoomingList(false);\r\n      setProForma(false);\r\n      setTotalToPay(0);\r\n      setPaymentDate('');\r\n      setPaymentDoneDate('');\r\n      setFactura(false);\r\n      setIga(false);\r\n      setComment('');\r\n      setValidationMsg('');\r\n      // Forzamos recargar la lista de hoteles si hay ciudad definida\r\n      if (city) {\r\n        fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(city)}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setHotelsList(data);\r\n            console.log('Recargados hoteles para', city, data);\r\n          })\r\n          .catch((err) => console.error('Error al obtener hoteles:', err));\r\n      }\r\n    }\r\n  }, [show, city]);\r\n\r\n  // Cuando la fecha esté disponible, calcular checkIn y checkOut automáticamente\r\n  useEffect(() => {\r\n    if (date) {\r\n      setCheckIn(date);\r\n      const dt = new Date(date);\r\n      dt.setDate(dt.getDate() + 1);\r\n      const computedCheckOut = dt.toISOString().split('T')[0];\r\n      setCheckOut(computedCheckOut);\r\n      console.log('Calculado checkIn:', date, 'checkOut:', computedCheckOut);\r\n    }\r\n  }, [date]);\r\n\r\n  // Al tener la ciudad y si el modal está abierto, hacemos GET para obtener la lista de hoteles disponibles\r\n  useEffect(() => {\r\n    if (city && show) {\r\n      fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(city)}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setHotelsList(data);\r\n          console.log('Hoteles disponibles para', city, data);\r\n        })\r\n        .catch((err) => console.error('Error al obtener hoteles:', err));\r\n    }\r\n  }, [city, show]);\r\n\r\n  // Función para manejar el envío del formulario (guardado)\r\n  const handleSubmit = () => {\r\n    const paxVal = parseInt(paxAssigned, 10);\r\n    console.log('handleSubmit: paxAssigned:', paxAssigned, 'paxVal:', paxVal, 'availablePax:', availablePax);\r\n    if (paxVal === 0) {\r\n      setValidationMsg('El número de PAX asignados debe ser mayor que 0.');\r\n      return;\r\n    }\r\n    if (paxVal > availablePax) {\r\n      setValidationMsg(`El número de PAX asignados no puede superar los disponibles (${availablePax}).`);\r\n      return;\r\n    }\r\n    // Construir el payload\r\n    const payload = {\r\n      id_hotel: parseInt(hotelId),\r\n      id_group: initialData.id_group || '',\r\n      id_day: initialData.id_day || '',\r\n      start_date: checkIn || null,\r\n      end_date: checkOut || null,\r\n      pax: paxVal,\r\n      currency,\r\n      total_to_pay: parseFloat(totalToPay),\r\n      comment,\r\n      rooming_list: roomingList,\r\n      pro_forma: proForma,\r\n      payment_date: paymentDate || null,\r\n      payment_done_date: paymentDoneDate || null,\r\n      payed_by: null,\r\n      factura,\r\n      iga,\r\n      updated_by: '',\r\n    };\r\n    console.log('Payload a enviar (add another):', payload);\r\n    return onSave(payload)\r\n      .then(() => {\r\n        // Actualizamos el acumulado de PAX asignados\r\n        setLocalAssignedPax((prev) => {\r\n          const newVal = prev + paxVal;\r\n          console.log('Nuevo localAssignedPax:', newVal);\r\n          return newVal;\r\n        });\r\n        onHide();\r\n        return true;\r\n      })\r\n      .catch((error) => {\r\n        if (error && error.detail) {\r\n          setValidationMsg(error.detail);\r\n        } else {\r\n          setValidationMsg('Error al agregar la asignación.');\r\n        }\r\n        console.error('Error en onSave:', error);\r\n        return false;\r\n      });\r\n  };\r\n\r\n  // Función para manejar el clic en \"Agregar otro hotel para este día\"\r\n  const handleAddAnotherClick = () => {\r\n    handleSubmit().then((saved) => {\r\n      if (saved && onAddAnother) {\r\n        onAddAnother({\r\n          city,\r\n          date,\r\n          paxAssigned,\r\n          id_day: initialData.id_day || '',\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Carga de divisas (simulada)\r\n  const [allCurrencies, setAllCurrencies] = useState([]);\r\n  useEffect(() => {\r\n    const fetchCurrencies = async () => {\r\n      const currencies = ['EUR', 'USD', 'CHF', 'GBP', 'ARS', 'JPY', 'CNY', 'INR', 'BRL', 'CAD'];\r\n      setAllCurrencies(currencies);\r\n    };\r\n    fetchCurrencies();\r\n  }, []);\r\n  const favoriteCurrencies = ['EUR', 'USD', 'CHF', 'GBP'];\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered size=\"lg\">\r\n      <Form onSubmit={(e) => { e.preventDefault(); handleSubmit(); }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Agregar otro hotel para este día</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Row 1: Ciudad y Fecha (solo lectura) */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCity\">\r\n                <Form.Label>Ciudad</Form.Label>\r\n                <Form.Control type=\"text\" value={city} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formDate\">\r\n                <Form.Label>Fecha</Form.Label>\r\n                <Form.Control type=\"date\" value={date} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Row 2: Selección de Hotel */}\r\n          <Form.Group controlId=\"formHotel\">\r\n            <Form.Label>Hotel</Form.Label>\r\n            <Form.Select value={hotelId} onChange={(e) => setHotelId(e.target.value)} required>\r\n              <option value=\"\">Seleccione un hotel</option>\r\n              {hotelsList.map((hotel) => (\r\n                <option key={hotel.id_hotel} value={hotel.id_hotel}>\r\n                  {hotel.hotel_name}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          {/* Row 3: Check-in y Check-out */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCheckIn\">\r\n                <Form.Label>Check-in</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={checkIn}\r\n                  onChange={(e) => setCheckIn(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCheckOut\">\r\n                <Form.Label>Check-out</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={checkOut}\r\n                  onChange={(e) => setCheckOut(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Row 4: Switches para Rooming List y Pro Forma */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formRoomingList\"\r\n                label=\"Rooming List Enviado\"\r\n                checked={roomingList}\r\n                onChange={(e) => setRoomingList(e.target.checked)}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formProForma\"\r\n                label=\"Pro Forma Enviado\"\r\n                checked={proForma}\r\n                onChange={(e) => setProForma(e.target.checked)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {/* Row 5: Moneda, Total a Pagar y PAX Asignados */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formCurrency\">\r\n                <Form.Label>Divisa</Form.Label>\r\n                <Form.Select value={currency} onChange={(e) => setCurrency(e.target.value)}>\r\n                  <optgroup label=\"Favoritas\">\r\n                    {favoriteCurrencies.map((favCurrency) => (\r\n                      <option key={favCurrency} value={favCurrency}>\r\n                        {favCurrency}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                  <optgroup label=\"Todas las divisas\">\r\n                    {allCurrencies\r\n                      .filter((curr) => !favoriteCurrencies.includes(curr))\r\n                      .map((curr) => (\r\n                        <option key={curr} value={curr}>\r\n                          {curr}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formTotalToPay\">\r\n                <Form.Label>Total a Pagar</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={totalToPay}\r\n                  onChange={(e) => setTotalToPay(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formPAX\">\r\n                <Form.Label>PAX Asignados</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={paxAssigned}\r\n                  onChange={(e) => setPaxAssigned(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Text muted>\r\n                  Disponible para asignar: {availablePax} (Total grupo: {groupPax})\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Row 6: Fechas de Pago */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formPaymentDate\">\r\n                <Form.Label>Fecha de Pago</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={paymentDate}\r\n                  onChange={(e) => setPaymentDate(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formPaymentDoneDate\">\r\n                <Form.Label>Fecha de Pago Realizado</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={paymentDoneDate}\r\n                  onChange={(e) => setPaymentDoneDate(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Row 7: Factura e IGA */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formFactura\"\r\n                label=\"Factura Emitida\"\r\n                checked={factura}\r\n                onChange={(e) => setFactura(e.target.checked)}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formIGA\"\r\n                label=\"IGA Gestionado\"\r\n                checked={iga}\r\n                onChange={(e) => setIga(e.target.checked)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {/* Row 8: Comentarios */}\r\n          <Form.Group controlId=\"formComments\" className=\"mb-3\">\r\n            <Form.Label>Comentarios</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"Escribe un comentario para esta asignación...\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {validationMsg && <Alert variant=\"danger\">{validationMsg}</Alert>}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"d-flex justify-content-between\">\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Cancelar\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            disabled={parseInt(paxAssigned, 10) === 0 || parseInt(paxAssigned, 10) > availablePax}\r\n          >\r\n            Guardar Cambios\r\n          </Button>\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            onClick={handleAddAnotherClick}\r\n            disabled={parseInt(paxAssigned, 10) === 0 || parseInt(paxAssigned, 10) >= availablePax}\r\n          >\r\n            Agregar otro hotel para este día\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nHotelAddAnotherModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  initialData: PropTypes.object,\r\n  onSave: PropTypes.func.isRequired,\r\n  groupPax: PropTypes.number.isRequired,\r\n  assignedPaxTotal: PropTypes.number,\r\n  onAddAnother: PropTypes.func,\r\n};\r\n\r\nexport default HotelAddAnotherModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;;AAEtE;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,eAAe,GAAIC,OAAO,IAAK;EACnC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;EACvB,MAAMC,KAAK,GAAGD,OAAO,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,GAAGH,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;EAC7E,OAAOF,KAAK,CAACG,MAAM,KAAK,CAAC,GAAGH,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;AAC3C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,WAAW,GAAG,EAAE,KAAK;EAC3D,IAAI,CAACD,UAAU,EAAE,OAAO,EAAE;EAE1B,IAAIA,UAAU,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC5B,MAAMD,KAAK,GAAGK,UAAU,CAACH,KAAK,CAAC,GAAG,CAAC;IACnC,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;MACtB,OAAO,GAAGH,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IAC9C;IACA,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIG,WAAW,EAAE;MACrC,OAAO,GAAGA,WAAW,IAAIN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACjD;EACF;EACA,IAAIK,UAAU,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC5B,MAAMD,KAAK,GAAGK,UAAU,CAACH,KAAK,CAAC,GAAG,CAAC;IACnC,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIH,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;MAC/C,OAAO,GAAGH,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IAC9C;IACA,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIG,WAAW,EAAE;MACrC,OAAO,GAAGA,WAAW,IAAIN,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACjD;EACF;EACA,MAAMO,OAAO,GAAG,IAAIC,IAAI,CAACH,UAAU,CAAC;EACpC,IAAII,KAAK,CAACF,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE;EACvC,OAAOH,OAAO,CAACI,WAAW,CAAC,CAAC,CAACT,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMU,oBAAoB,GAAGA,CAAC;EAC5BC,IAAI;EACJC,MAAM;EACNC,WAAW,GAAG,CAAC,CAAC;EAChBC,MAAM;EACNC,QAAQ;EACRC,gBAAgB,GAAG,CAAC;EACpBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoC,IAAI,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsC,OAAO,EAAEC,UAAU,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC0C,OAAO,EAAEC,UAAU,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4C,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgD,QAAQ,EAAEC,WAAW,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkD,QAAQ,EAAEC,WAAW,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwD,eAAe,EAAEC,kBAAkB,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0D,OAAO,EAAEC,UAAU,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4D,GAAG,EAAEC,MAAM,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgE,OAAO,EAAEC,UAAU,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkE,aAAa,EAAEC,gBAAgB,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACoE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrE,QAAQ,CAAC,MAAMsE,MAAM,CAACvC,gBAAgB,CAAC,IAAI,CAAC,CAAC;EAE7F,MAAMwC,WAAW,GAAGC,QAAQ,CAAC1C,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC;EAC/C,MAAM2C,YAAY,GAAGF,WAAW,GAAGH,gBAAgB;EACnDnE,SAAS,CAAC,MAAM;IACdyE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,WAAW,EAAE,mBAAmB,EAAEH,gBAAgB,EAAE,eAAe,EAAEK,YAAY,CAAC;EAC7G,CAAC,EAAE,CAACF,WAAW,EAAEH,gBAAgB,EAAEK,YAAY,CAAC,CAAC;;EAEjD;EACA,MAAMtD,WAAW,GAAGR,eAAe,CAACiB,WAAW,CAACQ,IAAI,CAAC;;EAErD;EACAnC,SAAS,CAAC,MAAM;IACdkC,OAAO,CAACP,WAAW,CAACM,IAAI,IAAI,EAAE,CAAC;IAC/BG,OAAO,CAACpB,kBAAkB,CAACW,WAAW,CAACQ,IAAI,EAAEjB,WAAW,CAAC,CAAC;IAC1D4C,cAAc,CAACnC,WAAW,CAACkC,WAAW,IAAI,CAAC,CAAC;IAC5C;IACAvB,UAAU,CAAC,EAAE,CAAC;IACdE,aAAa,CAAC,EAAE,CAAC;IACjBE,UAAU,CAAC,EAAE,CAAC;IACdE,WAAW,CAAC,EAAE,CAAC;IACfE,cAAc,CAAC,KAAK,CAAC;IACrBE,WAAW,CAAC,KAAK,CAAC;IAClBE,WAAW,CAAC,KAAK,CAAC;IAClBE,aAAa,CAAC,CAAC,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;IAClBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,UAAU,CAAC,KAAK,CAAC;IACjBE,MAAM,CAAC,KAAK,CAAC;IACbI,UAAU,CAAC,EAAE,CAAC;IACdE,gBAAgB,CAAC,EAAE,CAAC;IACpB;IACAE,mBAAmB,CAACC,MAAM,CAACvC,gBAAgB,CAAC,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,CAACH,WAAW,EAAEG,gBAAgB,EAAEZ,WAAW,CAAC,CAAC;;EAEhD;EACAlB,SAAS,CAAC,MAAM;IACd,IAAIyB,IAAI,EAAE;MACRa,UAAU,CAAC,EAAE,CAAC;MACdE,aAAa,CAAC,EAAE,CAAC;MACjBE,UAAU,CAAC,EAAE,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC;MACfE,cAAc,CAAC,KAAK,CAAC;MACrBE,WAAW,CAAC,KAAK,CAAC;MAClBI,aAAa,CAAC,CAAC,CAAC;MAChBE,cAAc,CAAC,EAAE,CAAC;MAClBE,kBAAkB,CAAC,EAAE,CAAC;MACtBE,UAAU,CAAC,KAAK,CAAC;MACjBE,MAAM,CAAC,KAAK,CAAC;MACbI,UAAU,CAAC,EAAE,CAAC;MACdE,gBAAgB,CAAC,EAAE,CAAC;MACpB;MACA,IAAIjC,IAAI,EAAE;QACR0C,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,kCAAkCC,kBAAkB,CAAC9C,IAAI,CAAC,EAAE,CAAC,CAChG+C,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;UACd3C,aAAa,CAAC2C,IAAI,CAAC;UACnBV,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEzC,IAAI,EAAEkD,IAAI,CAAC;QACpD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKZ,OAAO,CAACa,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC,CAAC;MACpE;IACF;EACF,CAAC,EAAE,CAAC5D,IAAI,EAAEQ,IAAI,CAAC,CAAC;;EAEhB;EACAjC,SAAS,CAAC,MAAM;IACd,IAAImC,IAAI,EAAE;MACRO,UAAU,CAACP,IAAI,CAAC;MAChB,MAAMoD,EAAE,GAAG,IAAInE,IAAI,CAACe,IAAI,CAAC;MACzBoD,EAAE,CAACnD,OAAO,CAACmD,EAAE,CAACC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC5B,MAAMC,gBAAgB,GAAGF,EAAE,CAAChE,WAAW,CAAC,CAAC,CAACT,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvD8B,WAAW,CAAC6C,gBAAgB,CAAC;MAC7BhB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEvC,IAAI,EAAE,WAAW,EAAEsD,gBAAgB,CAAC;IACxE;EACF,CAAC,EAAE,CAACtD,IAAI,CAAC,CAAC;;EAEV;EACAnC,SAAS,CAAC,MAAM;IACd,IAAIiC,IAAI,IAAIR,IAAI,EAAE;MAChBkD,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,kCAAkCC,kBAAkB,CAAC9C,IAAI,CAAC,EAAE,CAAC,CAChG+C,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACd3C,aAAa,CAAC2C,IAAI,CAAC;QACnBV,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEzC,IAAI,EAAEkD,IAAI,CAAC;MACrD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKZ,OAAO,CAACa,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC,CAAC;IACpE;EACF,CAAC,EAAE,CAACpD,IAAI,EAAER,IAAI,CAAC,CAAC;;EAEhB;EACA,MAAMiE,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAGpB,QAAQ,CAACV,WAAW,EAAE,EAAE,CAAC;IACxCY,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEb,WAAW,EAAE,SAAS,EAAE8B,MAAM,EAAE,eAAe,EAAEnB,YAAY,CAAC;IACxG,IAAImB,MAAM,KAAK,CAAC,EAAE;MAChBzB,gBAAgB,CAAC,kDAAkD,CAAC;MACpE;IACF;IACA,IAAIyB,MAAM,GAAGnB,YAAY,EAAE;MACzBN,gBAAgB,CAAC,gEAAgEM,YAAY,IAAI,CAAC;MAClG;IACF;IACA;IACA,MAAMoB,OAAO,GAAG;MACdC,QAAQ,EAAEtB,QAAQ,CAAClC,OAAO,CAAC;MAC3ByD,QAAQ,EAAEnE,WAAW,CAACmE,QAAQ,IAAI,EAAE;MACpCC,MAAM,EAAEpE,WAAW,CAACoE,MAAM,IAAI,EAAE;MAChCC,UAAU,EAAEvD,OAAO,IAAI,IAAI;MAC3BwD,QAAQ,EAAEtD,QAAQ,IAAI,IAAI;MAC1BuD,GAAG,EAAEP,MAAM;MACX1C,QAAQ;MACRkD,YAAY,EAAEC,UAAU,CAACjD,UAAU,CAAC;MACpCY,OAAO;MACPsC,YAAY,EAAExD,WAAW;MACzByD,SAAS,EAAEvD,QAAQ;MACnBwD,YAAY,EAAElD,WAAW,IAAI,IAAI;MACjCmD,iBAAiB,EAAEjD,eAAe,IAAI,IAAI;MAC1CkD,QAAQ,EAAE,IAAI;MACdhD,OAAO;MACPE,GAAG;MACH+C,UAAU,EAAE;IACd,CAAC;IACDjC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEkB,OAAO,CAAC;IACvD,OAAOhE,MAAM,CAACgE,OAAO,CAAC,CACnBZ,IAAI,CAAC,MAAM;MACV;MACAZ,mBAAmB,CAAEuC,IAAI,IAAK;QAC5B,MAAMC,MAAM,GAAGD,IAAI,GAAGhB,MAAM;QAC5BlB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEkC,MAAM,CAAC;QAC9C,OAAOA,MAAM;MACf,CAAC,CAAC;MACFlF,MAAM,CAAC,CAAC;MACR,OAAO,IAAI;IACb,CAAC,CAAC,CACD0D,KAAK,CAAEE,KAAK,IAAK;MAChB,IAAIA,KAAK,IAAIA,KAAK,CAACuB,MAAM,EAAE;QACzB3C,gBAAgB,CAACoB,KAAK,CAACuB,MAAM,CAAC;MAChC,CAAC,MAAM;QACL3C,gBAAgB,CAAC,iCAAiC,CAAC;MACrD;MACAO,OAAO,CAACa,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,OAAO,KAAK;IACd,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMwB,qBAAqB,GAAGA,CAAA,KAAM;IAClCpB,YAAY,CAAC,CAAC,CAACV,IAAI,CAAE+B,KAAK,IAAK;MAC7B,IAAIA,KAAK,IAAIhF,YAAY,EAAE;QACzBA,YAAY,CAAC;UACXE,IAAI;UACJE,IAAI;UACJ0B,WAAW;UACXkC,MAAM,EAAEpE,WAAW,CAACoE,MAAM,IAAI;QAChC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlH,QAAQ,CAAC,EAAE,CAAC;EACtDC,SAAS,CAAC,MAAM;IACd,MAAMkH,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACzFF,gBAAgB,CAACE,UAAU,CAAC;IAC9B,CAAC;IACDD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,kBAAkB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAEvD,oBACE3G,OAAA,CAACP,KAAK;IAACuB,IAAI,EAAEA,IAAK;IAACC,MAAM,EAAEA,MAAO;IAAC2F,QAAQ;IAACC,IAAI,EAAC,IAAI;IAAAC,QAAA,eACnD9G,OAAA,CAACL,IAAI;MAACoH,QAAQ,EAAGC,CAAC,IAAK;QAAEA,CAAC,CAACC,cAAc,CAAC,CAAC;QAAEhC,YAAY,CAAC,CAAC;MAAE,CAAE;MAAA6B,QAAA,gBAC7D9G,OAAA,CAACP,KAAK,CAACyH,MAAM;QAACC,WAAW;QAAAL,QAAA,eACvB9G,OAAA,CAACP,KAAK,CAAC2H,KAAK;UAAAN,QAAA,EAAC;QAAgC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACfxH,OAAA,CAACP,KAAK,CAACgI,IAAI;QAAAX,QAAA,gBAET9G,OAAA,CAACJ,GAAG;UAAC8H,SAAS,EAAC,MAAM;UAAAZ,QAAA,gBACnB9G,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,UAAU;cAAAf,QAAA,gBAC9B9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAM;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/BxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBAACC,IAAI,EAAC,MAAM;gBAACC,KAAK,EAAEzG,IAAK;gBAAC0G,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNxH,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,UAAU;cAAAf,QAAA,gBAC9B9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAK;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC9BxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBAACC,IAAI,EAAC,MAAM;gBAACC,KAAK,EAAEvG,IAAK;gBAACwG,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxH,OAAA,CAACL,IAAI,CAACiI,KAAK;UAACC,SAAS,EAAC,WAAW;UAAAf,QAAA,gBAC/B9G,OAAA,CAACL,IAAI,CAACmI,KAAK;YAAAhB,QAAA,EAAC;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9BxH,OAAA,CAACL,IAAI,CAACwI,MAAM;YAACF,KAAK,EAAErG,OAAQ;YAACwG,QAAQ,EAAGpB,CAAC,IAAKnF,UAAU,CAACmF,CAAC,CAACqB,MAAM,CAACJ,KAAK,CAAE;YAACK,QAAQ;YAAAxB,QAAA,gBAChF9G,OAAA;cAAQiI,KAAK,EAAC,EAAE;cAAAnB,QAAA,EAAC;YAAmB;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC5C1F,UAAU,CAACyG,GAAG,CAAEC,KAAK,iBACpBxI,OAAA;cAA6BiI,KAAK,EAAEO,KAAK,CAACpD,QAAS;cAAA0B,QAAA,EAChD0B,KAAK,CAACC;YAAU,GADND,KAAK,CAACpD,QAAQ;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEnB,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEbxH,OAAA,CAACJ,GAAG;UAAC8H,SAAS,EAAC,MAAM;UAAAZ,QAAA,gBACnB9G,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,aAAa;cAAAf,QAAA,gBACjC9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAQ;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjCxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEjG,OAAQ;gBACfoG,QAAQ,EAAGpB,CAAC,IAAK/E,UAAU,CAAC+E,CAAC,CAACqB,MAAM,CAACJ,KAAK,CAAE;gBAC5CK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNxH,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,cAAc;cAAAf,QAAA,gBAClC9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAS;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAClCxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAE/F,QAAS;gBAChBkG,QAAQ,EAAGpB,CAAC,IAAK7E,WAAW,CAAC6E,CAAC,CAACqB,MAAM,CAACJ,KAAK,CAAE;gBAC7CK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxH,OAAA,CAACJ,GAAG;UAAC8H,SAAS,EAAC,MAAM;UAAAZ,QAAA,gBACnB9G,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAAC+I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbW,EAAE,EAAC,iBAAiB;cACpBC,KAAK,EAAC,sBAAsB;cAC5BC,OAAO,EAAEzG,WAAY;cACrBgG,QAAQ,EAAGpB,CAAC,IAAK3E,cAAc,CAAC2E,CAAC,CAACqB,MAAM,CAACQ,OAAO;YAAE;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNxH,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAAC+I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbW,EAAE,EAAC,cAAc;cACjBC,KAAK,EAAC,mBAAmB;cACzBC,OAAO,EAAEvG,QAAS;cAClB8F,QAAQ,EAAGpB,CAAC,IAAKzE,WAAW,CAACyE,CAAC,CAACqB,MAAM,CAACQ,OAAO;YAAE;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxH,OAAA,CAACJ,GAAG;UAAC8H,SAAS,EAAC,MAAM;UAAAZ,QAAA,gBACnB9G,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,cAAc;cAAAf,QAAA,gBAClC9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAM;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/BxH,OAAA,CAACL,IAAI,CAACwI,MAAM;gBAACF,KAAK,EAAEzF,QAAS;gBAAC4F,QAAQ,EAAGpB,CAAC,IAAKvE,WAAW,CAACuE,CAAC,CAACqB,MAAM,CAACJ,KAAK,CAAE;gBAAAnB,QAAA,gBACzE9G,OAAA;kBAAU4I,KAAK,EAAC,WAAW;kBAAA9B,QAAA,EACxBH,kBAAkB,CAAC4B,GAAG,CAAEO,WAAW,iBAClC9I,OAAA;oBAA0BiI,KAAK,EAAEa,WAAY;oBAAAhC,QAAA,EAC1CgC;kBAAW,GADDA,WAAW;oBAAAzB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEhB,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACM,CAAC,eACXxH,OAAA;kBAAU4I,KAAK,EAAC,mBAAmB;kBAAA9B,QAAA,EAChCP,aAAa,CACXwC,MAAM,CAAEC,IAAI,IAAK,CAACrC,kBAAkB,CAACvG,QAAQ,CAAC4I,IAAI,CAAC,CAAC,CACpDT,GAAG,CAAES,IAAI,iBACRhJ,OAAA;oBAAmBiI,KAAK,EAAEe,IAAK;oBAAAlC,QAAA,EAC5BkC;kBAAI,GADMA,IAAI;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAET,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNxH,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,gBAAgB;cAAAf,QAAA,gBACpC9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAa;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBACXC,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEvF,UAAW;gBAClB0F,QAAQ,EAAGpB,CAAC,IAAKrE,aAAa,CAACqE,CAAC,CAACqB,MAAM,CAACJ,KAAK,CAAE;gBAC/CK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNxH,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,SAAS;cAAAf,QAAA,gBAC7B9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAa;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBACXC,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAE7E,WAAY;gBACnBgF,QAAQ,EAAGpB,CAAC,IAAK3D,cAAc,CAAC2D,CAAC,CAACqB,MAAM,CAACJ,KAAK,CAAE;gBAChDK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACFxH,OAAA,CAACL,IAAI,CAACsJ,IAAI;gBAACC,KAAK;gBAAApC,QAAA,GAAC,2BACU,EAAC/C,YAAY,EAAC,iBAAe,EAAC3C,QAAQ,EAAC,GAClE;cAAA;gBAAAiG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxH,OAAA,CAACJ,GAAG;UAAC8H,SAAS,EAAC,MAAM;UAAAZ,QAAA,gBACnB9G,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,iBAAiB;cAAAf,QAAA,gBACrC9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAa;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAErF,WAAY;gBACnBwF,QAAQ,EAAGpB,CAAC,IAAKnE,cAAc,CAACmE,CAAC,CAACqB,MAAM,CAACJ,KAAK;cAAE;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNxH,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAACiI,KAAK;cAACC,SAAS,EAAC,qBAAqB;cAAAf,QAAA,gBACzC9G,OAAA,CAACL,IAAI,CAACmI,KAAK;gBAAAhB,QAAA,EAAC;cAAuB;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAChDxH,OAAA,CAACL,IAAI,CAACoI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEnF,eAAgB;gBACvBsF,QAAQ,EAAGpB,CAAC,IAAKjE,kBAAkB,CAACiE,CAAC,CAACqB,MAAM,CAACJ,KAAK;cAAE;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxH,OAAA,CAACJ,GAAG;UAAC8H,SAAS,EAAC,MAAM;UAAAZ,QAAA,gBACnB9G,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAAC+I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbW,EAAE,EAAC,aAAa;cAChBC,KAAK,EAAC,iBAAiB;cACvBC,OAAO,EAAE7F,OAAQ;cACjBoF,QAAQ,EAAGpB,CAAC,IAAK/D,UAAU,CAAC+D,CAAC,CAACqB,MAAM,CAACQ,OAAO;YAAE;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNxH,OAAA,CAACH,GAAG;YAAC8H,EAAE,EAAE,CAAE;YAAAb,QAAA,eACT9G,OAAA,CAACL,IAAI,CAAC+I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbW,EAAE,EAAC,SAAS;cACZC,KAAK,EAAC,gBAAgB;cACtBC,OAAO,EAAE3F,GAAI;cACbkF,QAAQ,EAAGpB,CAAC,IAAK7D,MAAM,CAAC6D,CAAC,CAACqB,MAAM,CAACQ,OAAO;YAAE;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxH,OAAA,CAACL,IAAI,CAACiI,KAAK;UAACC,SAAS,EAAC,cAAc;UAACH,SAAS,EAAC,MAAM;UAAAZ,QAAA,gBACnD9G,OAAA,CAACL,IAAI,CAACmI,KAAK;YAAAhB,QAAA,EAAC;UAAW;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpCxH,OAAA,CAACL,IAAI,CAACoI,OAAO;YACXoB,EAAE,EAAC,UAAU;YACbC,IAAI,EAAE,CAAE;YACRC,WAAW,EAAC,kDAA+C;YAC3DpB,KAAK,EAAE3E,OAAQ;YACf8E,QAAQ,EAAGpB,CAAC,IAAKzD,UAAU,CAACyD,CAAC,CAACqB,MAAM,CAACJ,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,EACZhE,aAAa,iBAAIxD,OAAA,CAACF,KAAK;UAACwJ,OAAO,EAAC,QAAQ;UAAAxC,QAAA,EAAEtD;QAAa;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACbxH,OAAA,CAACP,KAAK,CAAC8J,MAAM;QAAC7B,SAAS,EAAC,gCAAgC;QAAAZ,QAAA,gBACtD9G,OAAA,CAACN,MAAM;UAAC4J,OAAO,EAAC,WAAW;UAACE,OAAO,EAAEvI,MAAO;UAAA6F,QAAA,EAAC;QAE7C;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxH,OAAA,CAACN,MAAM;UACL4J,OAAO,EAAC,SAAS;UACjBtB,IAAI,EAAC,QAAQ;UACbyB,QAAQ,EAAE3F,QAAQ,CAACV,WAAW,EAAE,EAAE,CAAC,KAAK,CAAC,IAAIU,QAAQ,CAACV,WAAW,EAAE,EAAE,CAAC,GAAGW,YAAa;UAAA+C,QAAA,EACvF;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxH,OAAA,CAACN,MAAM;UACL4J,OAAO,EAAC,iBAAiB;UACzBE,OAAO,EAAEnD,qBAAsB;UAC/BoD,QAAQ,EAAE3F,QAAQ,CAACV,WAAW,EAAE,EAAE,CAAC,KAAK,CAAC,IAAIU,QAAQ,CAACV,WAAW,EAAE,EAAE,CAAC,IAAIW,YAAa;UAAA+C,QAAA,EACxF;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACjG,EAAA,CAxZIR,oBAAoB;AAAA2I,EAAA,GAApB3I,oBAAoB;AA0Z1BA,oBAAoB,CAAC4I,SAAS,GAAG;EAC/B3I,IAAI,EAAExB,SAAS,CAACoK,IAAI,CAACC,UAAU;EAC/B5I,MAAM,EAAEzB,SAAS,CAACsK,IAAI,CAACD,UAAU;EACjC3I,WAAW,EAAE1B,SAAS,CAACuK,MAAM;EAC7B5I,MAAM,EAAE3B,SAAS,CAACsK,IAAI,CAACD,UAAU;EACjCzI,QAAQ,EAAE5B,SAAS,CAACwK,MAAM,CAACH,UAAU;EACrCxI,gBAAgB,EAAE7B,SAAS,CAACwK,MAAM;EAClC1I,YAAY,EAAE9B,SAAS,CAACsK;AAC1B,CAAC;AAED,eAAe/I,oBAAoB;AAAC,IAAA2I,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}