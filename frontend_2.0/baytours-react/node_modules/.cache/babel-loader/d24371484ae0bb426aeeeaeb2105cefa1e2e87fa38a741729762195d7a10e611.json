{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\OptionalsSection.jsx\";\nimport React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport OptionalRow from './OptionalRow';\nimport '../styles/_grupo_detalle.scss'; // Asegúrate de importar los estilos necesarios\n\n/**\r\n * OptionalsSection recibe:\r\n *  - data: array de clientes con opcionales (table_data)\r\n *  - itinerary: información del itinerario (con ciudades y días)\r\n *  - idGroup: ID del grupo (para acciones, etc.)\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionalsSection = ({\n  data,\n  itinerary = [],\n  idGroup,\n  currentDate = Date.now()\n}) => {\n  // total_days se calcula sumando la cantidad de días de cada ciudad\n  const totalDays = 10; //itinerary.reduce((acc, city) => acc + city.days, 0);\n\n  // Para el header, generamos una lista de columnas a partir de itinerary\n  const headerColumns = [];\n  itinerary.forEach(cityInfo => {\n    itinerary.days.forEach(day => {\n      // Determinar la clase según la fecha\n      let dayClass = '';\n      const dayDate = new Date(day.date.split('-').reverse().join('-')); // Asumiendo formato \"dd-mm-yyyy\"\n      const current = new Date(currentDate);\n      if (dayDate.toDateString() === current.toDateString()) {\n        dayClass = 'current-city';\n      } else if (dayDate < current) {\n        dayClass = 'past-city';\n      }\n      headerColumns.push({\n        city: itinerary.city,\n        date: day.date,\n        dayId: day.id,\n        className: dayClass\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      hover: true,\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-custom\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Nombre Completo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Edad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Sexo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), headerColumns.map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: col.className,\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: [col.city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: col.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              backgroundColor: '#BDD8F1'\n            },\n            children: \"Total Opcionales\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data && data.length > 0 ? data.map((client, index) => /*#__PURE__*/_jsxDEV(OptionalRow, {\n          client: client,\n          itinerary: itinerary,\n          idGroup: idGroup,\n          currentDate: currentDate\n        }, client.id_clients, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 3 + headerColumns.length + 1,\n            children: \"No se encontraron opcionales.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = OptionalsSection;\nexport default OptionalsSection;\nvar _c;\n$RefreshReg$(_c, \"OptionalsSection\");","map":{"version":3,"names":["React","useState","Table","OptionalRow","jsxDEV","_jsxDEV","OptionalsSection","data","itinerary","idGroup","currentDate","Date","now","totalDays","headerColumns","forEach","cityInfo","days","day","dayClass","dayDate","date","split","reverse","join","current","toDateString","push","city","dayId","id","className","children","responsive","hover","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","map","col","idx","length","client","index","id_clients","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/OptionalsSection.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport OptionalRow from './OptionalRow';\r\nimport '../styles/_grupo_detalle.scss'; // Asegúrate de importar los estilos necesarios\r\n\r\n/**\r\n * OptionalsSection recibe:\r\n *  - data: array de clientes con opcionales (table_data)\r\n *  - itinerary: información del itinerario (con ciudades y días)\r\n *  - idGroup: ID del grupo (para acciones, etc.)\r\n */\r\nconst OptionalsSection = ({ data, itinerary= [], idGroup, currentDate=Date.now() }) => {\r\n  // total_days se calcula sumando la cantidad de días de cada ciudad\r\n  const totalDays = 10//itinerary.reduce((acc, city) => acc + city.days, 0);\r\n\r\n  // Para el header, generamos una lista de columnas a partir de itinerary\r\n  const headerColumns = [];\r\n  itinerary.forEach(cityInfo => {\r\n    itinerary.days.forEach(day => {\r\n      // Determinar la clase según la fecha\r\n      let dayClass = '';\r\n      const dayDate = new Date(day.date.split('-').reverse().join('-')); // Asumiendo formato \"dd-mm-yyyy\"\r\n      const current = new Date(currentDate);\r\n      if (dayDate.toDateString() === current.toDateString()) {\r\n        dayClass = 'current-city';\r\n      } else if (dayDate < current) {\r\n        dayClass = 'past-city';\r\n      }\r\n      headerColumns.push({\r\n        city: itinerary.city,\r\n        date: day.date,\r\n        dayId: day.id,\r\n        className: dayClass,\r\n      });\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Table responsive hover className=\"table\">\r\n        <thead className=\"thead-custom\">\r\n          <tr>\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Nombre Completo</th>\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Edad</th>\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Sexo</th>\r\n            {headerColumns.map((col, idx) => (\r\n              <th key={idx} className={col.className} style={{ backgroundColor: '#BDD8F1' }}>\r\n                {col.city}\r\n                <br />\r\n                <small>{col.date}</small>\r\n              </th>\r\n            ))}\r\n            <th style={{ backgroundColor: '#BDD8F1' }}>Total Opcionales</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data && data.length > 0 ? (\r\n            data.map((client, index) => (\r\n              <OptionalRow\r\n                key={client.id_clients}\r\n                client={client}\r\n                itinerary={itinerary}\r\n                idGroup={idGroup}\r\n                currentDate={currentDate}\r\n              />\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={3 + headerColumns.length + 1}>No se encontraron opcionales.</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        <tfoot>\r\n          {/* Puedes agregar un pie de tabla para totales globales */}\r\n        </tfoot>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionalsSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}