{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\HotelModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\n\n// Función auxiliar para formatear una fecha al formato \"YYYY-MM-DD\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDateForInput = dateString => {\n  if (!dateString) return '';\n  // Si el string contiene guiones y la primera parte tiene 2 dígitos, asumimos formato \"DD-MM-YYYY\"\n  const parts = dateString.split('/cd ');\n  if (parts.length === 3 && parts[0].length === 2) {\n    // Reordenar a \"YYYY-MM-DD\"\n    return `${parts[2]}-${parts[1]}-${parts[0]}`;\n  }\n  // Si ya está en formato ISO, intentamos convertirlo\n  const dateObj = new Date(dateString);\n  if (isNaN(dateObj.getTime())) return '';\n  return dateObj.toISOString().split('T')[0];\n};\n\n/**\r\n * HotelModal permite agregar o editar una asignación de hotel.\r\n *\r\n * Props:\r\n * - show: Booleano para mostrar/ocultar el modal.\r\n * - onHide: Callback para ocultar el modal.\r\n * - initialData: Datos iniciales de la asignación (modo edición) o {} en modo agregar.\r\n * - onSave: Callback que se invoca con el payload cuando se envía el formulario.\r\n * - onAddAnother: Callback para agregar otra asignación para el mismo día.\r\n * - groupPax: Número total de pasajeros del grupo (para validar si se pueden asignar más).\r\n */\nconst HotelModal = ({\n  show,\n  onHide,\n  initialData = {},\n  onSave,\n  onAddAnother,\n  groupPax\n}) => {\n  _s();\n  console.log('initialData modal:', initialData);\n  // Determinamos si estamos en modo edición\n  const isEditing = Boolean(initialData.assignment_id);\n\n  // Estados para cada campo. Los campos Ciudad y Fecha se muestran en modo solo lectura.\n  const [city, setCity] = useState(initialData.city || '');\n  const [id_day, setIdDay] = useState(initialData.id_day || '');\n  const [assigned_pax, setAssignedPax] = useState(initialData.assigned_pax || '');\n  const [date, setDate] = useState(formatDateForInput(initialData.date));\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\n  const [hotelsList, setHotelsList] = useState([]);\n  // Usamos tipo \"date\" para checkIn y checkOut (si solo se requiere fecha)\n  const [checkIn, setCheckIn] = useState(initialData.check_in ? formatDateForInput(initialData.check_in) : '');\n  const [checkOut, setCheckOut] = useState(initialData.check_out ? formatDateForInput(initialData.check_out) : '');\n  const [roomingList, setRoomingList] = useState(typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false);\n  const [proForma, setProForma] = useState(typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false);\n  // Moneda por defecto EUR\n  //const [currency, setCurrency] = useState(initialData.currency || 'EUR');\n  const [totalToPay, setTotalToPay] = useState(initialData.total_to_pay != null ? initialData.total_to_pay : 0);\n  const [paymentDate, setPaymentDate] = useState(formatDateForInput(initialData.payment_date));\n  const [paymentDoneDate, setPaymentDoneDate] = useState(formatDateForInput(initialData.payment_done_date));\n  const [factura, setFactura] = useState(typeof initialData.factura === 'boolean' ? initialData.factura : false);\n  const [iga, setIga] = useState(typeof initialData.iga === 'boolean' ? initialData.iga : false);\n  // PAX asignados para esta asignación (debe ser > 0)\n  const [paxAssigned, setPaxAssigned] = useState(initialData.pax || 0);\n  // Nuevo comentario que se va a agregar; en edición, se inicia en blanco.\n  const [comment, setComment] = useState('');\n  // Mensaje de validación\n  const [validationMsg, setValidationMsg] = useState('');\n\n  // Para modo edición, calculamos el máximo permitido para esta asignación:\n  // availableForEditing = groupPax - (assigned_pax - initialData.pax)\n  const availableForEditing = isEditing ? parseInt(groupPax, 10) - (parseInt(assigned_pax, 10) - parseInt(initialData.pax, 10)) : parseInt(groupPax, 10);\n  const new_pax = parseInt(assigned_pax, 10) - initialData.pax + paxAssigned;\n  console.log('PAX disponibles assigned_pax org:', assigned_pax);\n  console.log('initialData.pax org:', initialData.pax);\n  console.log('new_pax org:', new_pax);\n  console.log('groupPax org:', groupPax);\n\n  // Actualizar estados cuando initialData cambie\n  useEffect(() => {\n    setCity(initialData.city || '');\n    setDate(formatDateForInput(initialData.date));\n    setHotelId(initialData.id_hotel || '');\n    setIdDay(initialData.id_day || '');\n    setAssignedPax(initialData.assigned_pax || 0);\n    // Realizamos GET de hoteles disponibles según la ciudad\n    if (initialData.city) {\n      fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(initialData.city)}`).then(res => res.json()).then(data => {\n        setHotelsList(data);\n      }).catch(err => console.error('Error al obtener hoteles:', err));\n    }\n    setCheckIn(initialData.check_in ? formatDateForInput(initialData.check_in) : '');\n    setCheckOut(initialData.check_out ? formatDateForInput(initialData.check_out) : '');\n    setPaxAssigned(initialData.pax || 0);\n    setRoomingList(typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false);\n    setProForma(typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false);\n    setCurrency(initialData.currency || 'EUR');\n    setTotalToPay(initialData.total_to_pay != null ? initialData.total_to_pay : 0);\n    setPaymentDate(formatDateForInput(initialData.payment_date));\n    setPaymentDoneDate(formatDateForInput(initialData.payment_done_date));\n    setFactura(typeof initialData.factura === 'boolean' ? initialData.factura : false);\n    setIga(typeof initialData.iga === 'boolean' ? initialData.iga : false);\n    // No precargamos el comentario para que inicie en blanco\n    setComment('');\n    setValidationMsg('');\n  }, [initialData]);\n\n  // Efecto para actualizar checkIn y checkOut cuando cambia la fecha (solo si no hay valor en initialData)\n  useEffect(() => {\n    if (date && !initialData.check_in) {\n      setCheckIn(date);\n      const dt = new Date(date);\n      dt.setDate(dt.getDate() + 1);\n      setCheckOut(dt.toISOString().split('T')[0]);\n    }\n  }, [date, initialData.check_in]);\n\n  // Maneja el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Validamos que el número de PAX asignados sea mayor a 0\n    const paxVal = parseInt(paxAssigned, 10);\n    if (paxVal === 0) {\n      setValidationMsg('El número de PAX asignados debe ser mayor que 0.');\n      return;\n    }\n    if (paxVal > availableForEditing) {\n      setValidationMsg(`El número de PAX asignados no puede superar los disponibles para esta asignación (${availableForEditing}).`);\n      return;\n    }\n    const payload = {\n      id: initialData.assignment_id || '',\n      // Si es edición, se envía el id\n      id_hotel: parseInt(hotelId, 10),\n      id_group: initialData.id_group || '',\n      start_date: checkIn,\n      // Se usa la fecha para ambas (asignación por día)\n      end_date: checkOut,\n      pax: parseInt(paxAssigned, 10),\n      currency,\n      total_to_pay: parseFloat(totalToPay),\n      comment,\n      // Comentario nuevo\n      rooming_list: roomingList,\n      pro_forma: proForma,\n      payment_date: paymentDate || null,\n      payment_done_date: paymentDoneDate || null,\n      payed_by: null,\n      factura,\n      iga\n    };\n    console.log('Payload a enviar:', payload);\n    try {\n      // Se asume que onSave retorna una promesa\n      await onSave(payload);\n      onHide(); // Cierra el modal si se guarda exitosamente\n      return true;\n    } catch (error) {\n      console.error('Error en onSave:', error);\n      return false;\n    }\n  };\n\n  // Función para manejar \"Agregar otro hotel para este día\"\n  const handleAddAnotherClick = async () => {\n    // Primero se ejecuta onSave para guardar la asignación actual\n    const saved = await handleSubmit(new Event('submit'));\n    const new_pax = assigned_pax - initialData.pax + paxAssigned;\n    console.log('new_pax', new_pax);\n\n    // Luego se llama al callback onAddAnother para abrir el flujo de agregar otro hotel.\n    if (saved && onAddAnother) {\n      onAddAnother({\n        city,\n        date,\n        new_pax,\n        id_day\n        // puedes pasar otros campos que consideres necesarios\n      });\n      ;\n    }\n  };\n  const [currency, setCurrency] = useState('EUR');\n  const [allCurrencies, setAllCurrencies] = useState([]);\n  useEffect(() => {\n    // Simula la carga de todas las divisas desde una API o una lista estática\n    const fetchCurrencies = async () => {\n      const currencies = ['EUR', 'USD', 'CHF', 'GBP', 'ARS', 'JPY', 'CNY', 'INR', 'BRL', 'CAD'];\n      setAllCurrencies(currencies);\n    };\n    fetchCurrencies();\n  }, []);\n  const favoriteCurrencies = ['EUR', 'USD', 'CHF', 'GBP'];\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    size: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: initialData.assignment_id ? 'Editar Asignación de Hotel' : 'Agregar Asignación de Hotel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Ciudad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: city,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: date,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formHotel\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: hotelId,\n            onChange: e => setHotelId(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), hotelsList.map(hotel => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: hotel.id_hotel,\n              children: hotel.hotel_name\n            }, hotel.id_hotel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCheckIn\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkIn,\n                onChange: e => setCheckIn(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCheckOut\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkOut,\n                onChange: e => setCheckOut(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formRoomingList\",\n              label: \"Rooming List Enviado\",\n              checked: roomingList,\n              onChange: e => setRoomingList(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formProForma\",\n              label: \"Pro Forma Enviado\",\n              checked: proForma,\n              onChange: e => setProForma(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCurrency\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Divisa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: currency,\n                onChange: e => setCurrency(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"optgroup\", {\n                  label: \"Favoritas\",\n                  children: favoriteCurrencies.map(favCurrency => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: favCurrency,\n                    children: favCurrency\n                  }, favCurrency, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                  label: \"Todas las divisas\",\n                  children: allCurrencies.filter(curr => !favoriteCurrencies.includes(curr)).map(curr => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: curr,\n                    children: curr\n                  }, curr, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formTotalToPay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Total a Pagar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: totalToPay,\n                onChange: e => setTotalToPay(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPAX\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"PAX Asignados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: paxAssigned,\n                onChange: e => setPaxAssigned(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                muted: true,\n                children: [\"Disponible para esta asignaci\\xF3n: \", availableForEditing, \" (Total grupo: \", groupPax, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPaymentDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha A Pagar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: paymentDate,\n                onChange: e => setPaymentDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPaymentDoneDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha de Pago Realizado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: paymentDoneDate,\n                onChange: e => setPaymentDoneDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formFactura\",\n              label: \"Factura Emitida\",\n              checked: factura,\n              onChange: e => setFactura(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formIGA\",\n              label: \"IGA Gestionado\",\n              checked: iga,\n              onChange: e => setIga(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNotes\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comentarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            placeholder: \"Escribe un nuevo comentario. Los anteriores quedar\\xE1n registrados.\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), validationMsg && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: validationMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onHide,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"ms-2\",\n            disabled: parseInt(paxAssigned, 10) === 0 || parseInt(paxAssigned, 10) > availableForEditing,\n            children: \"Guardar Cambios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: handleAddAnotherClick,\n          disabled: parseInt(paxAssigned, 10) === 0 || parseInt(paxAssigned, 10) >= availableForEditing,\n          children: \"Agregar otro hotel para este d\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelModal, \"OCiPgnz1F4aN3gZqP/TevT/kGqU=\");\n_c = HotelModal;\nexport default HotelModal;\nvar _c;\n$RefreshReg$(_c, \"HotelModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Row","Col","Alert","jsxDEV","_jsxDEV","formatDateForInput","dateString","parts","split","length","dateObj","Date","isNaN","getTime","toISOString","HotelModal","show","onHide","initialData","onSave","onAddAnother","groupPax","_s","console","log","isEditing","Boolean","assignment_id","city","setCity","id_day","setIdDay","assigned_pax","setAssignedPax","date","setDate","hotelId","setHotelId","id_hotel","hotelsList","setHotelsList","checkIn","setCheckIn","check_in","checkOut","setCheckOut","check_out","roomingList","setRoomingList","rooming_list","proForma","setProForma","pro_forma","totalToPay","setTotalToPay","total_to_pay","paymentDate","setPaymentDate","payment_date","paymentDoneDate","setPaymentDoneDate","payment_done_date","factura","setFactura","iga","setIga","paxAssigned","setPaxAssigned","pax","comment","setComment","validationMsg","setValidationMsg","availableForEditing","parseInt","new_pax","fetch","process","env","REACT_APP_API_URL","encodeURIComponent","then","res","json","data","catch","err","error","setCurrency","currency","dt","getDate","handleSubmit","e","preventDefault","paxVal","payload","id","id_group","start_date","end_date","parseFloat","payed_by","handleAddAnotherClick","saved","Event","allCurrencies","setAllCurrencies","fetchCurrencies","currencies","favoriteCurrencies","centered","size","children","onSubmit","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","md","Group","controlId","Label","Control","type","value","readOnly","Select","onChange","target","required","map","hotel","hotel_name","Check","label","checked","favCurrency","filter","curr","includes","Text","muted","as","rows","placeholder","variant","Footer","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/HotelModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\n\r\n// Función auxiliar para formatear una fecha al formato \"YYYY-MM-DD\"\r\nconst formatDateForInput = (dateString) => {\r\n  if (!dateString) return '';\r\n  // Si el string contiene guiones y la primera parte tiene 2 dígitos, asumimos formato \"DD-MM-YYYY\"\r\n  const parts = dateString.split('/cd ');\r\n  if (parts.length === 3 && parts[0].length === 2) {\r\n    // Reordenar a \"YYYY-MM-DD\"\r\n    return `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n  }\r\n  // Si ya está en formato ISO, intentamos convertirlo\r\n  const dateObj = new Date(dateString);\r\n  if (isNaN(dateObj.getTime())) return '';\r\n  return dateObj.toISOString().split('T')[0];\r\n};\r\n\r\n/**\r\n * HotelModal permite agregar o editar una asignación de hotel.\r\n *\r\n * Props:\r\n * - show: Booleano para mostrar/ocultar el modal.\r\n * - onHide: Callback para ocultar el modal.\r\n * - initialData: Datos iniciales de la asignación (modo edición) o {} en modo agregar.\r\n * - onSave: Callback que se invoca con el payload cuando se envía el formulario.\r\n * - onAddAnother: Callback para agregar otra asignación para el mismo día.\r\n * - groupPax: Número total de pasajeros del grupo (para validar si se pueden asignar más).\r\n */\r\nconst HotelModal = ({\r\n  show,\r\n  onHide,\r\n  initialData = {},\r\n  onSave,\r\n  onAddAnother,\r\n  groupPax,\r\n}) => {\r\n\r\n  console.log('initialData modal:', initialData);\r\n  // Determinamos si estamos en modo edición\r\n  const isEditing = Boolean(initialData.assignment_id);\r\n\r\n  // Estados para cada campo. Los campos Ciudad y Fecha se muestran en modo solo lectura.\r\n  const [city, setCity] = useState(initialData.city || '');\r\n  const [id_day, setIdDay] = useState(initialData.id_day || '');\r\n  const [assigned_pax, setAssignedPax] = useState(initialData.assigned_pax || '');\r\n  const [date, setDate] = useState(formatDateForInput(initialData.date));\r\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\r\n  const [hotelsList, setHotelsList] = useState([]);\r\n  // Usamos tipo \"date\" para checkIn y checkOut (si solo se requiere fecha)\r\n  const [checkIn, setCheckIn] = useState(initialData.check_in ? formatDateForInput(initialData.check_in) : '');\r\n  const [checkOut, setCheckOut] = useState(initialData.check_out ? formatDateForInput(initialData.check_out) : '');\r\n\r\n  const [roomingList, setRoomingList] = useState(\r\n    typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false\r\n  );\r\n  const [proForma, setProForma] = useState(\r\n    typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false\r\n  );\r\n  // Moneda por defecto EUR\r\n  //const [currency, setCurrency] = useState(initialData.currency || 'EUR');\r\n  const [totalToPay, setTotalToPay] = useState(\r\n    initialData.total_to_pay != null ? initialData.total_to_pay : 0\r\n  );\r\n  const [paymentDate, setPaymentDate] = useState(formatDateForInput(initialData.payment_date));\r\n  const [paymentDoneDate, setPaymentDoneDate] = useState(formatDateForInput(initialData.payment_done_date));\r\n  const [factura, setFactura] = useState(\r\n    typeof initialData.factura === 'boolean' ? initialData.factura : false\r\n  );\r\n  const [iga, setIga] = useState(\r\n    typeof initialData.iga === 'boolean' ? initialData.iga : false\r\n  );\r\n  // PAX asignados para esta asignación (debe ser > 0)\r\n  const [paxAssigned, setPaxAssigned] = useState(initialData.pax || 0);\r\n  // Nuevo comentario que se va a agregar; en edición, se inicia en blanco.\r\n  const [comment, setComment] = useState('');\r\n  // Mensaje de validación\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n\r\n  // Para modo edición, calculamos el máximo permitido para esta asignación:\r\n  // availableForEditing = groupPax - (assigned_pax - initialData.pax)\r\n  const availableForEditing = isEditing\r\n    ? parseInt(groupPax, 10) - (parseInt(assigned_pax, 10) - parseInt(initialData.pax, 10))\r\n    : parseInt(groupPax, 10);\r\n\r\n  const new_pax = parseInt(assigned_pax,10) - initialData.pax + paxAssigned\r\n\r\n  console.log('PAX disponibles assigned_pax org:', assigned_pax);\r\n  console.log('initialData.pax org:', initialData.pax);\r\n  console.log('new_pax org:', new_pax);\r\n  console.log('groupPax org:', groupPax);\r\n\r\n  // Actualizar estados cuando initialData cambie\r\n  useEffect(() => {\r\n    setCity(initialData.city || '');\r\n    setDate(formatDateForInput(initialData.date));\r\n    setHotelId(initialData.id_hotel || '');\r\n    setIdDay(initialData.id_day || '');\r\n    setAssignedPax(initialData.assigned_pax || 0);\r\n    // Realizamos GET de hoteles disponibles según la ciudad\r\n    if (initialData.city) {\r\n      fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(initialData.city)}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setHotelsList(data);\r\n        })\r\n        .catch(err => console.error('Error al obtener hoteles:', err));\r\n    }\r\n    setCheckIn(initialData.check_in ? formatDateForInput(initialData.check_in) : '');\r\n    setCheckOut(initialData.check_out ? formatDateForInput(initialData.check_out) : '');\r\n    setPaxAssigned(initialData.pax || 0);\r\n    setRoomingList(typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false);\r\n    setProForma(typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false);\r\n    setCurrency(initialData.currency || 'EUR');\r\n    setTotalToPay(initialData.total_to_pay != null ? initialData.total_to_pay : 0);\r\n    setPaymentDate(formatDateForInput(initialData.payment_date));\r\n    setPaymentDoneDate(formatDateForInput(initialData.payment_done_date));\r\n    setFactura(typeof initialData.factura === 'boolean' ? initialData.factura : false);\r\n    setIga(typeof initialData.iga === 'boolean' ? initialData.iga : false);\r\n    // No precargamos el comentario para que inicie en blanco\r\n    setComment('');\r\n    setValidationMsg('');\r\n  }, [initialData]);\r\n\r\n  // Efecto para actualizar checkIn y checkOut cuando cambia la fecha (solo si no hay valor en initialData)\r\n  useEffect(() => {\r\n    if (date && !initialData.check_in) {\r\n      setCheckIn(date);\r\n      const dt = new Date(date);\r\n      dt.setDate(dt.getDate() + 1);\r\n      setCheckOut(dt.toISOString().split('T')[0]);\r\n    }\r\n  }, [date, initialData.check_in]);\r\n\r\n\r\n  // Maneja el envío del formulario\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Validamos que el número de PAX asignados sea mayor a 0\r\n    const paxVal = parseInt(paxAssigned, 10);\r\n    if (paxVal === 0) {\r\n      setValidationMsg('El número de PAX asignados debe ser mayor que 0.');\r\n      return;\r\n    }\r\n    if (paxVal > availableForEditing) {\r\n      setValidationMsg(\r\n        `El número de PAX asignados no puede superar los disponibles para esta asignación (${availableForEditing}).`\r\n      );\r\n      return;\r\n    }\r\n    const payload = {\r\n      id: initialData.assignment_id || '', // Si es edición, se envía el id\r\n      id_hotel: parseInt(hotelId, 10),\r\n      id_group: initialData.id_group || '',\r\n      start_date: checkIn, // Se usa la fecha para ambas (asignación por día)\r\n      end_date: checkOut,\r\n      pax: parseInt(paxAssigned, 10),\r\n      currency,\r\n      total_to_pay: parseFloat(totalToPay),\r\n      comment, // Comentario nuevo\r\n      rooming_list: roomingList,\r\n      pro_forma: proForma,\r\n      payment_date: paymentDate || null,\r\n      payment_done_date: paymentDoneDate || null,\r\n      payed_by: null,\r\n      factura,\r\n      iga,\r\n    };\r\n    console.log('Payload a enviar:', payload);\r\n    try {\r\n      // Se asume que onSave retorna una promesa\r\n      await onSave(payload);\r\n      onHide(); // Cierra el modal si se guarda exitosamente\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error en onSave:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Función para manejar \"Agregar otro hotel para este día\"\r\n  const handleAddAnotherClick = async () => {\r\n    // Primero se ejecuta onSave para guardar la asignación actual\r\n    const saved = await handleSubmit(new Event('submit'));\r\n\r\n    const new_pax = assigned_pax - initialData.pax + paxAssigned\r\n    console.log('new_pax', new_pax);\r\n\r\n    // Luego se llama al callback onAddAnother para abrir el flujo de agregar otro hotel.\r\n    if (saved && onAddAnother) {\r\n      onAddAnother({\r\n        city,\r\n        date,\r\n        new_pax,\r\n        id_day,\r\n        // puedes pasar otros campos que consideres necesarios\r\n      });;\r\n    }\r\n  };\r\n\r\n  const [currency, setCurrency] = useState('EUR');\r\n  const [allCurrencies, setAllCurrencies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simula la carga de todas las divisas desde una API o una lista estática\r\n    const fetchCurrencies = async () => {\r\n      const currencies = ['EUR', 'USD', 'CHF', 'GBP', 'ARS', 'JPY', 'CNY', 'INR', 'BRL', 'CAD'];\r\n      setAllCurrencies(currencies);\r\n    };\r\n\r\n    fetchCurrencies();\r\n  }, []);\r\n\r\n  const favoriteCurrencies = ['EUR', 'USD', 'CHF', 'GBP'];\r\n\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered size=\"lg\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {initialData.assignment_id ? 'Editar Asignación de Hotel' : 'Agregar Asignación de Hotel'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Fila 1: Ciudad y Fecha (solo lectura) */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCity\">\r\n                <Form.Label>Ciudad</Form.Label>\r\n                <Form.Control type=\"text\" value={city} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formDate\">\r\n                <Form.Label>Fecha</Form.Label>\r\n                <Form.Control type=\"date\" value={date} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 2: Selección de Hotel */}\r\n          <Form.Group controlId=\"formHotel\">\r\n            <Form.Label>Hotel</Form.Label>\r\n            <Form.Select value={hotelId} onChange={(e) => setHotelId(e.target.value)} required>\r\n              <option value=\"\">Seleccione un hotel</option>\r\n              {hotelsList.map((hotel) => (\r\n                <option key={hotel.id_hotel} value={hotel.id_hotel}>\r\n                  {hotel.hotel_name}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          {/* Fila 3: Check-in y Check-out */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCheckIn\">\r\n                <Form.Label>Check-in</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={checkIn}\r\n                  onChange={(e) => setCheckIn(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCheckOut\">\r\n                <Form.Label>Check-out</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={checkOut}\r\n                  onChange={(e) => setCheckOut(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 4: Switches para Rooming List y Pro Forma */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formRoomingList\"\r\n                label=\"Rooming List Enviado\"\r\n                checked={roomingList}\r\n                onChange={(e) => setRoomingList(e.target.checked)}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formProForma\"\r\n                label=\"Pro Forma Enviado\"\r\n                checked={proForma}\r\n                onChange={(e) => setProForma(e.target.checked)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 5: Moneda, Total a Pagar y PAX Asignados */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formCurrency\">\r\n                <Form.Label>Divisa</Form.Label>\r\n                <Form.Select value={currency} onChange={(e) => setCurrency(e.target.value)}>\r\n                <optgroup label=\"Favoritas\">\r\n                    {favoriteCurrencies.map((favCurrency) => (\r\n                      <option key={favCurrency} value={favCurrency}>\r\n                        {favCurrency}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                  <optgroup label=\"Todas las divisas\">\r\n                    {allCurrencies\r\n                      .filter((curr) => !favoriteCurrencies.includes(curr))\r\n                      .map((curr) => (\r\n                        <option key={curr} value={curr}>\r\n                          {curr}\r\n                        </option>\r\n                      ))}\r\n                  </optgroup>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formTotalToPay\">\r\n                <Form.Label>Total a Pagar</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={totalToPay}\r\n                  onChange={(e) => setTotalToPay(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formPAX\">\r\n                <Form.Label>PAX Asignados</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={paxAssigned}\r\n                  onChange={(e) => setPaxAssigned(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Text muted>\r\n                  Disponible para esta asignación: {availableForEditing} (Total grupo: {groupPax})\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 6: Fechas de Pago */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formPaymentDate\">\r\n                <Form.Label>Fecha A Pagar</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={paymentDate}\r\n                  onChange={(e) => setPaymentDate(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formPaymentDoneDate\">\r\n                <Form.Label>Fecha de Pago Realizado</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={paymentDoneDate}\r\n                  onChange={(e) => setPaymentDoneDate(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 7: Factura e IGA */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formFactura\"\r\n                label=\"Factura Emitida\"\r\n                checked={factura}\r\n                onChange={(e) => setFactura(e.target.checked)}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formIGA\"\r\n                label=\"IGA Gestionado\"\r\n                checked={iga}\r\n                onChange={(e) => setIga(e.target.checked)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 8: Comentarios (para agregar un nuevo comentario; los previos ya quedan guardados en la lista) */}\r\n          <Form.Group controlId=\"formNotes\" className=\"mb-3\">\r\n            <Form.Label>Comentarios</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"Escribe un nuevo comentario. Los anteriores quedarán registrados.\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {validationMsg && <Alert variant=\"danger\">{validationMsg}</Alert>}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"d-flex justify-content-between\">\r\n        <div>\r\n            <Button variant=\"secondary\" onClick={onHide}>\r\n              Cancelar\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"ms-2\"\r\n              disabled={\r\n                parseInt(paxAssigned, 10) === 0 ||\r\n                parseInt(paxAssigned, 10) > availableForEditing\r\n              }\r\n            >\r\n              Guardar Cambios\r\n            </Button>\r\n          </div>\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            onClick={handleAddAnotherClick}\r\n            disabled={parseInt(paxAssigned, 10) === 0 ||\r\n              parseInt(paxAssigned, 10) >= availableForEditing} \r\n          >\r\n            Agregar otro hotel para este día\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default HotelModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;EACzC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;EAC1B;EACA,MAAMC,KAAK,GAAGD,UAAU,CAACE,KAAK,CAAC,MAAM,CAAC;EACtC,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,IAAIF,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,KAAK,CAAC,EAAE;IAC/C;IACA,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;EAC9C;EACA;EACA,MAAMG,OAAO,GAAG,IAAIC,IAAI,CAACL,UAAU,CAAC;EACpC,IAAIM,KAAK,CAACF,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE;EACvC,OAAOH,OAAO,CAACI,WAAW,CAAC,CAAC,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMO,UAAU,GAAGA,CAAC;EAClBC,IAAI;EACJC,MAAM;EACNC,WAAW,GAAG,CAAC,CAAC;EAChBC,MAAM;EACNC,YAAY;EACZC;AACF,CAAC,KAAK;EAAAC,EAAA;EAEJC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,WAAW,CAAC;EAC9C;EACA,MAAMO,SAAS,GAAGC,OAAO,CAACR,WAAW,CAACS,aAAa,CAAC;;EAEpD;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlC,QAAQ,CAACuB,WAAW,CAACU,IAAI,IAAI,EAAE,CAAC;EACxD,MAAM,CAACE,MAAM,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAACuB,WAAW,CAACY,MAAM,IAAI,EAAE,CAAC;EAC7D,MAAM,CAACE,YAAY,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAACuB,WAAW,CAACc,YAAY,IAAI,EAAE,CAAC;EAC/E,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAACU,kBAAkB,CAACa,WAAW,CAACgB,IAAI,CAAC,CAAC;EACtE,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAACuB,WAAW,CAACoB,QAAQ,IAAI,EAAE,CAAC;EAClE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAACuB,WAAW,CAACyB,QAAQ,GAAGtC,kBAAkB,CAACa,WAAW,CAACyB,QAAQ,CAAC,GAAG,EAAE,CAAC;EAC5G,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlD,QAAQ,CAACuB,WAAW,CAAC4B,SAAS,GAAGzC,kBAAkB,CAACa,WAAW,CAAC4B,SAAS,CAAC,GAAG,EAAE,CAAC;EAEhH,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAC5C,OAAOuB,WAAW,CAAC+B,YAAY,KAAK,SAAS,GAAG/B,WAAW,CAAC+B,YAAY,GAAG,KAC7E,CAAC;EACD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxD,QAAQ,CACtC,OAAOuB,WAAW,CAACkC,SAAS,KAAK,SAAS,GAAGlC,WAAW,CAACkC,SAAS,GAAG,KACvE,CAAC;EACD;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG3D,QAAQ,CAC1CuB,WAAW,CAACqC,YAAY,IAAI,IAAI,GAAGrC,WAAW,CAACqC,YAAY,GAAG,CAChE,CAAC;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9D,QAAQ,CAACU,kBAAkB,CAACa,WAAW,CAACwC,YAAY,CAAC,CAAC;EAC5F,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjE,QAAQ,CAACU,kBAAkB,CAACa,WAAW,CAAC2C,iBAAiB,CAAC,CAAC;EACzG,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpE,QAAQ,CACpC,OAAOuB,WAAW,CAAC4C,OAAO,KAAK,SAAS,GAAG5C,WAAW,CAAC4C,OAAO,GAAG,KACnE,CAAC;EACD,MAAM,CAACE,GAAG,EAAEC,MAAM,CAAC,GAAGtE,QAAQ,CAC5B,OAAOuB,WAAW,CAAC8C,GAAG,KAAK,SAAS,GAAG9C,WAAW,CAAC8C,GAAG,GAAG,KAC3D,CAAC;EACD;EACA,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGxE,QAAQ,CAACuB,WAAW,CAACkD,GAAG,IAAI,CAAC,CAAC;EACpE;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG3E,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAM,CAAC4E,aAAa,EAAEC,gBAAgB,CAAC,GAAG7E,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA;EACA,MAAM8E,mBAAmB,GAAGhD,SAAS,GACjCiD,QAAQ,CAACrD,QAAQ,EAAE,EAAE,CAAC,IAAIqD,QAAQ,CAAC1C,YAAY,EAAE,EAAE,CAAC,GAAG0C,QAAQ,CAACxD,WAAW,CAACkD,GAAG,EAAE,EAAE,CAAC,CAAC,GACrFM,QAAQ,CAACrD,QAAQ,EAAE,EAAE,CAAC;EAE1B,MAAMsD,OAAO,GAAGD,QAAQ,CAAC1C,YAAY,EAAC,EAAE,CAAC,GAAGd,WAAW,CAACkD,GAAG,GAAGF,WAAW;EAEzE3C,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEQ,YAAY,CAAC;EAC9DT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEN,WAAW,CAACkD,GAAG,CAAC;EACpD7C,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEmD,OAAO,CAAC;EACpCpD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAAC;;EAEtC;EACAzB,SAAS,CAAC,MAAM;IACdiC,OAAO,CAACX,WAAW,CAACU,IAAI,IAAI,EAAE,CAAC;IAC/BO,OAAO,CAAC9B,kBAAkB,CAACa,WAAW,CAACgB,IAAI,CAAC,CAAC;IAC7CG,UAAU,CAACnB,WAAW,CAACoB,QAAQ,IAAI,EAAE,CAAC;IACtCP,QAAQ,CAACb,WAAW,CAACY,MAAM,IAAI,EAAE,CAAC;IAClCG,cAAc,CAACf,WAAW,CAACc,YAAY,IAAI,CAAC,CAAC;IAC7C;IACA,IAAId,WAAW,CAACU,IAAI,EAAE;MACpBgD,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,kCAAkCC,kBAAkB,CAAC9D,WAAW,CAACU,IAAI,CAAC,EAAE,CAAC,CAC5GqD,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACZ5C,aAAa,CAAC4C,IAAI,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI/D,OAAO,CAACgE,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC,CAAC;IAClE;IACA5C,UAAU,CAACxB,WAAW,CAACyB,QAAQ,GAAGtC,kBAAkB,CAACa,WAAW,CAACyB,QAAQ,CAAC,GAAG,EAAE,CAAC;IAChFE,WAAW,CAAC3B,WAAW,CAAC4B,SAAS,GAAGzC,kBAAkB,CAACa,WAAW,CAAC4B,SAAS,CAAC,GAAG,EAAE,CAAC;IACnFqB,cAAc,CAACjD,WAAW,CAACkD,GAAG,IAAI,CAAC,CAAC;IACpCpB,cAAc,CAAC,OAAO9B,WAAW,CAAC+B,YAAY,KAAK,SAAS,GAAG/B,WAAW,CAAC+B,YAAY,GAAG,KAAK,CAAC;IAChGE,WAAW,CAAC,OAAOjC,WAAW,CAACkC,SAAS,KAAK,SAAS,GAAGlC,WAAW,CAACkC,SAAS,GAAG,KAAK,CAAC;IACvFoC,WAAW,CAACtE,WAAW,CAACuE,QAAQ,IAAI,KAAK,CAAC;IAC1CnC,aAAa,CAACpC,WAAW,CAACqC,YAAY,IAAI,IAAI,GAAGrC,WAAW,CAACqC,YAAY,GAAG,CAAC,CAAC;IAC9EE,cAAc,CAACpD,kBAAkB,CAACa,WAAW,CAACwC,YAAY,CAAC,CAAC;IAC5DE,kBAAkB,CAACvD,kBAAkB,CAACa,WAAW,CAAC2C,iBAAiB,CAAC,CAAC;IACrEE,UAAU,CAAC,OAAO7C,WAAW,CAAC4C,OAAO,KAAK,SAAS,GAAG5C,WAAW,CAAC4C,OAAO,GAAG,KAAK,CAAC;IAClFG,MAAM,CAAC,OAAO/C,WAAW,CAAC8C,GAAG,KAAK,SAAS,GAAG9C,WAAW,CAAC8C,GAAG,GAAG,KAAK,CAAC;IACtE;IACAM,UAAU,CAAC,EAAE,CAAC;IACdE,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,CAACtD,WAAW,CAAC,CAAC;;EAEjB;EACAtB,SAAS,CAAC,MAAM;IACd,IAAIsC,IAAI,IAAI,CAAChB,WAAW,CAACyB,QAAQ,EAAE;MACjCD,UAAU,CAACR,IAAI,CAAC;MAChB,MAAMwD,EAAE,GAAG,IAAI/E,IAAI,CAACuB,IAAI,CAAC;MACzBwD,EAAE,CAACvD,OAAO,CAACuD,EAAE,CAACC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC5B9C,WAAW,CAAC6C,EAAE,CAAC5E,WAAW,CAAC,CAAC,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C;EACF,CAAC,EAAE,CAAC0B,IAAI,EAAEhB,WAAW,CAACyB,QAAQ,CAAC,CAAC;;EAGhC;EACA,MAAMiD,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,MAAM,GAAGrB,QAAQ,CAACR,WAAW,EAAE,EAAE,CAAC;IACxC,IAAI6B,MAAM,KAAK,CAAC,EAAE;MAChBvB,gBAAgB,CAAC,kDAAkD,CAAC;MACpE;IACF;IACA,IAAIuB,MAAM,GAAGtB,mBAAmB,EAAE;MAChCD,gBAAgB,CACd,qFAAqFC,mBAAmB,IAC1G,CAAC;MACD;IACF;IACA,MAAMuB,OAAO,GAAG;MACdC,EAAE,EAAE/E,WAAW,CAACS,aAAa,IAAI,EAAE;MAAE;MACrCW,QAAQ,EAAEoC,QAAQ,CAACtC,OAAO,EAAE,EAAE,CAAC;MAC/B8D,QAAQ,EAAEhF,WAAW,CAACgF,QAAQ,IAAI,EAAE;MACpCC,UAAU,EAAE1D,OAAO;MAAE;MACrB2D,QAAQ,EAAExD,QAAQ;MAClBwB,GAAG,EAAEM,QAAQ,CAACR,WAAW,EAAE,EAAE,CAAC;MAC9BuB,QAAQ;MACRlC,YAAY,EAAE8C,UAAU,CAAChD,UAAU,CAAC;MACpCgB,OAAO;MAAE;MACTpB,YAAY,EAAEF,WAAW;MACzBK,SAAS,EAAEF,QAAQ;MACnBQ,YAAY,EAAEF,WAAW,IAAI,IAAI;MACjCK,iBAAiB,EAAEF,eAAe,IAAI,IAAI;MAC1C2C,QAAQ,EAAE,IAAI;MACdxC,OAAO;MACPE;IACF,CAAC;IACDzC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEwE,OAAO,CAAC;IACzC,IAAI;MACF;MACA,MAAM7E,MAAM,CAAC6E,OAAO,CAAC;MACrB/E,MAAM,CAAC,CAAC,CAAC,CAAC;MACV,OAAO,IAAI;IACb,CAAC,CAAC,OAAOsE,KAAK,EAAE;MACdhE,OAAO,CAACgE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,OAAO,KAAK;IACd;EACF,CAAC;;EAED;EACA,MAAMgB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC;IACA,MAAMC,KAAK,GAAG,MAAMZ,YAAY,CAAC,IAAIa,KAAK,CAAC,QAAQ,CAAC,CAAC;IAErD,MAAM9B,OAAO,GAAG3C,YAAY,GAAGd,WAAW,CAACkD,GAAG,GAAGF,WAAW;IAC5D3C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmD,OAAO,CAAC;;IAE/B;IACA,IAAI6B,KAAK,IAAIpF,YAAY,EAAE;MACzBA,YAAY,CAAC;QACXQ,IAAI;QACJM,IAAI;QACJyC,OAAO;QACP7C;QACA;MACF,CAAC,CAAC;MAAC;IACL;EACF,CAAC;EAED,MAAM,CAAC2D,QAAQ,EAAED,WAAW,CAAC,GAAG7F,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC+G,aAAa,EAAEC,gBAAgB,CAAC,GAAGhH,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgH,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACzFF,gBAAgB,CAACE,UAAU,CAAC;IAC9B,CAAC;IAEDD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,kBAAkB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAGvD,oBACE1G,OAAA,CAACP,KAAK;IAACmB,IAAI,EAAEA,IAAK;IAACC,MAAM,EAAEA,MAAO;IAAC8F,QAAQ;IAACC,IAAI,EAAC,IAAI;IAAAC,QAAA,eACnD7G,OAAA,CAACL,IAAI;MAACmH,QAAQ,EAAEtB,YAAa;MAAAqB,QAAA,gBAC3B7G,OAAA,CAACP,KAAK,CAACsH,MAAM;QAACC,WAAW;QAAAH,QAAA,eACvB7G,OAAA,CAACP,KAAK,CAACwH,KAAK;UAAAJ,QAAA,EACT/F,WAAW,CAACS,aAAa,GAAG,4BAA4B,GAAG;QAA6B;UAAA2F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACfrH,OAAA,CAACP,KAAK,CAAC6H,IAAI;QAAAT,QAAA,gBAET7G,OAAA,CAACJ,GAAG;UAAC2H,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACnB7G,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,UAAU;cAAAb,QAAA,gBAC9B7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/BrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBAACC,IAAI,EAAC,MAAM;gBAACC,KAAK,EAAEtG,IAAK;gBAACuG,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNrH,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,UAAU;cAAAb,QAAA,gBAC9B7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC9BrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBAACC,IAAI,EAAC,MAAM;gBAACC,KAAK,EAAEhG,IAAK;gBAACiG,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrH,OAAA,CAACL,IAAI,CAAC8H,KAAK;UAACC,SAAS,EAAC,WAAW;UAAAb,QAAA,gBAC/B7G,OAAA,CAACL,IAAI,CAACgI,KAAK;YAAAd,QAAA,EAAC;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9BrH,OAAA,CAACL,IAAI,CAACqI,MAAM;YAACF,KAAK,EAAE9F,OAAQ;YAACiG,QAAQ,EAAGxC,CAAC,IAAKxD,UAAU,CAACwD,CAAC,CAACyC,MAAM,CAACJ,KAAK,CAAE;YAACK,QAAQ;YAAAtB,QAAA,gBAChF7G,OAAA;cAAQ8H,KAAK,EAAC,EAAE;cAAAjB,QAAA,EAAC;YAAmB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC5ClF,UAAU,CAACiG,GAAG,CAAEC,KAAK,iBACpBrI,OAAA;cAA6B8H,KAAK,EAAEO,KAAK,CAACnG,QAAS;cAAA2E,QAAA,EAChDwB,KAAK,CAACC;YAAU,GADND,KAAK,CAACnG,QAAQ;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEnB,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEbrH,OAAA,CAACJ,GAAG;UAAC2H,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACnB7G,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,aAAa;cAAAb,QAAA,gBACjC7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAQ;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjCrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEzF,OAAQ;gBACf4F,QAAQ,EAAGxC,CAAC,IAAKnD,UAAU,CAACmD,CAAC,CAACyC,MAAM,CAACJ,KAAK,CAAE;gBAC5CK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNrH,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,cAAc;cAAAb,QAAA,gBAClC7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAS;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAClCrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEtF,QAAS;gBAChByF,QAAQ,EAAGxC,CAAC,IAAKhD,WAAW,CAACgD,CAAC,CAACyC,MAAM,CAACJ,KAAK,CAAE;gBAC7CK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrH,OAAA,CAACJ,GAAG;UAAC2H,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACnB7G,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC4I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbhC,EAAE,EAAC,iBAAiB;cACpB2C,KAAK,EAAC,sBAAsB;cAC5BC,OAAO,EAAE9F,WAAY;cACrBsF,QAAQ,EAAGxC,CAAC,IAAK7C,cAAc,CAAC6C,CAAC,CAACyC,MAAM,CAACO,OAAO;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNrH,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC4I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbhC,EAAE,EAAC,cAAc;cACjB2C,KAAK,EAAC,mBAAmB;cACzBC,OAAO,EAAE3F,QAAS;cAClBmF,QAAQ,EAAGxC,CAAC,IAAK1C,WAAW,CAAC0C,CAAC,CAACyC,MAAM,CAACO,OAAO;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrH,OAAA,CAACJ,GAAG;UAAC2H,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACnB7G,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,cAAc;cAAAb,QAAA,gBAClC7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/BrH,OAAA,CAACL,IAAI,CAACqI,MAAM;gBAACF,KAAK,EAAEzC,QAAS;gBAAC4C,QAAQ,EAAGxC,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACyC,MAAM,CAACJ,KAAK,CAAE;gBAAAjB,QAAA,gBAC3E7G,OAAA;kBAAUwI,KAAK,EAAC,WAAW;kBAAA3B,QAAA,EACtBH,kBAAkB,CAAC0B,GAAG,CAAEM,WAAW,iBAClC1I,OAAA;oBAA0B8H,KAAK,EAAEY,WAAY;oBAAA7B,QAAA,EAC1C6B;kBAAW,GADDA,WAAW;oBAAAxB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEhB,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACM,CAAC,eACXrH,OAAA;kBAAUwI,KAAK,EAAC,mBAAmB;kBAAA3B,QAAA,EAChCP,aAAa,CACXqC,MAAM,CAAEC,IAAI,IAAK,CAAClC,kBAAkB,CAACmC,QAAQ,CAACD,IAAI,CAAC,CAAC,CACpDR,GAAG,CAAEQ,IAAI,iBACR5I,OAAA;oBAAmB8H,KAAK,EAAEc,IAAK;oBAAA/B,QAAA,EAC5B+B;kBAAI,GADMA,IAAI;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAET,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNrH,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,gBAAgB;cAAAb,QAAA,gBACpC7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAa;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBACXC,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAE7E,UAAW;gBAClBgF,QAAQ,EAAGxC,CAAC,IAAKvC,aAAa,CAACuC,CAAC,CAACyC,MAAM,CAACJ,KAAK,CAAE;gBAC/CK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNrH,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,SAAS;cAAAb,QAAA,gBAC7B7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAa;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBACXC,IAAI,EAAC,QAAQ;gBACbC,KAAK,EAAEhE,WAAY;gBACnBmE,QAAQ,EAAGxC,CAAC,IAAK1B,cAAc,CAAC0B,CAAC,CAACyC,MAAM,CAACJ,KAAK,CAAE;gBAChDK,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACFrH,OAAA,CAACL,IAAI,CAACmJ,IAAI;gBAACC,KAAK;gBAAAlC,QAAA,GAAC,sCACkB,EAACxC,mBAAmB,EAAC,iBAAe,EAACpD,QAAQ,EAAC,GACjF;cAAA;gBAAAiG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrH,OAAA,CAACJ,GAAG;UAAC2H,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACnB7G,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,iBAAiB;cAAAb,QAAA,gBACrC7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAa;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAE1E,WAAY;gBACnB6E,QAAQ,EAAGxC,CAAC,IAAKpC,cAAc,CAACoC,CAAC,CAACyC,MAAM,CAACJ,KAAK;cAAE;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACNrH,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC8H,KAAK;cAACC,SAAS,EAAC,qBAAqB;cAAAb,QAAA,gBACzC7G,OAAA,CAACL,IAAI,CAACgI,KAAK;gBAAAd,QAAA,EAAC;cAAuB;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAChDrH,OAAA,CAACL,IAAI,CAACiI,OAAO;gBACXC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAEvE,eAAgB;gBACvB0E,QAAQ,EAAGxC,CAAC,IAAKjC,kBAAkB,CAACiC,CAAC,CAACyC,MAAM,CAACJ,KAAK;cAAE;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrH,OAAA,CAACJ,GAAG;UAAC2H,SAAS,EAAC,MAAM;UAAAV,QAAA,gBACnB7G,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC4I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbhC,EAAE,EAAC,aAAa;cAChB2C,KAAK,EAAC,iBAAiB;cACvBC,OAAO,EAAE/E,OAAQ;cACjBuE,QAAQ,EAAGxC,CAAC,IAAK9B,UAAU,CAAC8B,CAAC,CAACyC,MAAM,CAACO,OAAO;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNrH,OAAA,CAACH,GAAG;YAAC2H,EAAE,EAAE,CAAE;YAAAX,QAAA,eACT7G,OAAA,CAACL,IAAI,CAAC4I,KAAK;cACTV,IAAI,EAAC,QAAQ;cACbhC,EAAE,EAAC,SAAS;cACZ2C,KAAK,EAAC,gBAAgB;cACtBC,OAAO,EAAE7E,GAAI;cACbqE,QAAQ,EAAGxC,CAAC,IAAK5B,MAAM,CAAC4B,CAAC,CAACyC,MAAM,CAACO,OAAO;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENrH,OAAA,CAACL,IAAI,CAAC8H,KAAK;UAACC,SAAS,EAAC,WAAW;UAACH,SAAS,EAAC,MAAM;UAAAV,QAAA,gBAChD7G,OAAA,CAACL,IAAI,CAACgI,KAAK;YAAAd,QAAA,EAAC;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACpCrH,OAAA,CAACL,IAAI,CAACiI,OAAO;YACXoB,EAAE,EAAC,UAAU;YACbC,IAAI,EAAE,CAAE;YACRC,WAAW,EAAC,sEAAmE;YAC/EpB,KAAK,EAAE7D,OAAQ;YACfgE,QAAQ,EAAGxC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACyC,MAAM,CAACJ,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,EACZlD,aAAa,iBAAInE,OAAA,CAACF,KAAK;UAACqJ,OAAO,EAAC,QAAQ;UAAAtC,QAAA,EAAE1C;QAAa;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACbrH,OAAA,CAACP,KAAK,CAAC2J,MAAM;QAAC7B,SAAS,EAAC,gCAAgC;QAAAV,QAAA,gBACxD7G,OAAA;UAAA6G,QAAA,gBACI7G,OAAA,CAACN,MAAM;YAACyJ,OAAO,EAAC,WAAW;YAACE,OAAO,EAAExI,MAAO;YAAAgG,QAAA,EAAC;UAE7C;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrH,OAAA,CAACN,MAAM;YACLyJ,OAAO,EAAC,SAAS;YACjBtB,IAAI,EAAC,QAAQ;YACbN,SAAS,EAAC,MAAM;YAChB+B,QAAQ,EACNhF,QAAQ,CAACR,WAAW,EAAE,EAAE,CAAC,KAAK,CAAC,IAC/BQ,QAAQ,CAACR,WAAW,EAAE,EAAE,CAAC,GAAGO,mBAC7B;YAAAwC,QAAA,EACF;UAED;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNrH,OAAA,CAACN,MAAM;UACLyJ,OAAO,EAAC,iBAAiB;UACzBE,OAAO,EAAElD,qBAAsB;UAC/BmD,QAAQ,EAAEhF,QAAQ,CAACR,WAAW,EAAE,EAAE,CAAC,KAAK,CAAC,IACvCQ,QAAQ,CAACR,WAAW,EAAE,EAAE,CAAC,IAAIO,mBAAoB;UAAAwC,QAAA,EACpD;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACnG,EAAA,CAtZIP,UAAU;AAAA4I,EAAA,GAAV5I,UAAU;AAwZhB,eAAeA,UAAU;AAAC,IAAA4I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}