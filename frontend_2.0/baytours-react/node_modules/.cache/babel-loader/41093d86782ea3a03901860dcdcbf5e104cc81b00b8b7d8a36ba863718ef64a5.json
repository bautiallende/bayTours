{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\GroupDetail\\\\modals\\\\RoomAssignmentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\n\n// Función para calcular la edad a partir de la fecha de nacimiento\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateAge = birthDate => {\n  if (!birthDate) return '';\n  const birth = new Date(birthDate);\n  const diff = Date.now() - birth.getTime();\n  const ageDate = new Date(diff);\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n};\nconst parseDateString = dateStr => {\n  if (!dateStr) return '';\n  // Si la fecha viene en formato dd/mm/aaaa\n  if (dateStr.includes('/')) {\n    const parts = dateStr.split('/');\n    // Retornamos en formato ISO: aaaa-mm-dd\n    return `${parts[2]}-${parts[1]}-${parts[0]}`;\n  }\n  return dateStr; // Si ya está en formato ISO, lo dejamos igual.\n};\nconst RoomAssignmentModal = ({\n  show,\n  onHide,\n  initialData,\n  onSave,\n  availableHotels\n}) => {\n  _s();\n  console.log(`RoomAssignmentModal: initialData =`, initialData);\n  console.log(`RoomAssignmentModal: availableHotels =`, availableHotels);\n  // Campos editables\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\n  const [roomType, setRoomType] = useState(initialData.type || '');\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\n  const [notes, setNotes] = useState('');\n  const [validationMsg, setValidationMsg] = useState('');\n\n  // Opciones para tipos de habitación y datos asociados (precio, currency)\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\n  const [selectedRoomInfo, setSelectedRoomInfo] = useState(null);\n  const [selectedRoomId, setSelectedRoomId] = useState(null);\n\n  // Estados para suplementos\n  const [supplement, setSupplement] = useState('');\n  const [supplementCurrency, setSupplementCurrency] = useState('');\n\n  // Estados para los datos de check-in y check-out\n  const [city, setCity] = useState(initialData.city || '');\n  // Si existen datos en initialData, se separan; de lo contrario quedan vacíos (o se pueden asignar valores por defecto)\n  const [checkInDate, setCheckInDate] = useState(initialData.start_date ? parseDateString(initialData.start_date) : '');\n  const [checkInTime, setCheckInTime] = useState('15:00');\n  const [checkOutDate, setCheckOutDate] = useState(initialData.end_date ? parseDateString(initialData.end_date) : '');\n  const [checkOutTime, setCheckOutTime] = useState('11:00');\n\n  // Effect para limpiar los campos editables cada vez que se abre el modal\n  useEffect(() => {\n    if (show) {\n      if (initialData && Object.keys(initialData).length > 0) {\n        // Cargamos los valores de edición\n        setHotelId(initialData.id_hotel || '');\n        setRoomType(initialData.type || '');\n        setRoomNumber(initialData.room_number || '');\n        setNotes(initialData.comments || '');\n        // Si initialData tiene precio y currency, los agrupamos en un objeto\n        if (initialData.price != null || initialData.currency) {\n          setSelectedRoomInfo({\n            price: initialData.price,\n            currency: initialData.currency\n          });\n        } else {\n          setSelectedRoomInfo(null);\n        }\n        setSupplement(initialData.supplements || '');\n        setSupplementCurrency(initialData.supplements_currency || 'EUR');\n        setCity(initialData.city || '');\n        setCheckInDate(initialData.start_date ? initialData.start_date.split('T')[0] : '');\n        setCheckInTime(initialData.start_date ? initialData.start_date.split('T')[1].slice(0, 5) : '15:00');\n        setCheckOutDate(initialData.end_date ? initialData.end_date.split('T')[0] : '');\n        setCheckOutTime(initialData.end_date ? initialData.end_date.split('T')[1].slice(0, 5) : '11:00');\n      } else {\n        // Nuevo registro: limpiamos todos los campos\n        setHotelId('');\n        setRoomType('');\n        setRoomNumber('');\n        setNotes('');\n        setValidationMsg('');\n        setRoomTypeOptions([]);\n        setSelectedRoomInfo(null);\n        setSelectedRoomId(null);\n        setSupplement('');\n        setSupplementCurrency('EUR');\n        setCity('');\n        setCheckInDate('');\n        setCheckInTime('15:00');\n        setCheckOutDate('');\n        setCheckOutTime('11:00');\n      }\n    }\n  }, [show, initialData]);\n\n  // Cuando se selecciona un hotel, actualizar las opciones de habitación y los datos de ciudad, check-in y check-out\n  useEffect(() => {\n    if (hotelId) {\n      // Llamada al endpoint para obtener tipos de habitación para el hotel seleccionado\n      fetch(`${process.env.REACT_APP_API_URL}/hotels_room/hotels_room?id_hotel=${hotelId}`).then(res => res.json()).then(data => {\n        if (data.status === 'success' && Array.isArray(data.data)) {\n          setRoomTypeOptions(data.data);\n        } else {\n          setRoomTypeOptions([]);\n        }\n      }).catch(err => {\n        console.error('Error al obtener tipos de habitación:', err);\n        setRoomTypeOptions([]);\n      });\n\n      // Buscar en availableHotels los datos del hotel seleccionado\n      const selectedHotel = availableHotels.find(h => h.id_hotel.toString() === hotelId);\n      setNotes(\"\");\n      if (selectedHotel) {\n        setCity(selectedHotel.city || '');\n        // Actualizar las fechas: separamos la fecha y la hora (si existen), o usamos valores por defecto.\n        if (selectedHotel.start_date) {\n          const parts = selectedHotel.start_date.split('T');\n          setCheckInDate(parts[0]);\n          setCheckInTime(parts[1] ? parts[1].slice(0, 5) : '15:00');\n        } else {\n          setCheckInDate('');\n          setCheckInTime('15:00');\n        }\n        if (selectedHotel.end_date) {\n          const parts = selectedHotel.end_date.split('T');\n          setCheckOutDate(parts[0]);\n          setCheckOutTime(parts[1] ? parts[1].slice(0, 5) : '11:00');\n        } else {\n          setCheckOutDate('');\n          setCheckOutTime('11:00');\n        }\n      }\n    } else {\n      setRoomTypeOptions([]);\n      setSelectedRoomInfo(null);\n      setSelectedRoomId(null);\n    }\n  }, [hotelId, availableHotels]);\n\n  // Al seleccionar un tipo de habitación, actualizar automáticamente precio y divisa\n  const handleRoomTypeChange = e => {\n    const selectedType = e.target.value;\n    setRoomType(selectedType);\n    const selectedOption = roomTypeOptions.find(rt => rt.type === selectedType);\n    setSelectedRoomInfo(selectedOption || null);\n    setSelectedRoomId(selectedOption ? selectedOption.id_room : null);\n  };\n\n  // Función para combinar fecha y hora en formato ISO (sin zona horaria)\n  const combineDateAndTime = (dateStr, timeStr) => {\n    if (!dateStr || !timeStr) return null;\n    // Asumimos que la zona horaria se manejará en el backend\n    return `${dateStr}T${timeStr}:00Z`;\n  };\n\n  // Función para guardar la asignación\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!hotelId) {\n      setValidationMsg('Debe seleccionar un hotel.');\n      return;\n    }\n    if (!roomType) {\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\n      return;\n    }\n    const checkInCombined = combineDateAndTime(checkInDate, checkInTime);\n    const checkOutCombined = combineDateAndTime(checkOutDate, checkOutTime);\n    const payload = {\n      id: initialData.id,\n      // supondremos que viene en initialData\n      id_hotel_reservation: hotelId || 0,\n      client_id: initialData.id_clients,\n      id_room: selectedRoomId,\n      room_number: roomNumber,\n      check_in_date: checkInCombined,\n      departure_date: checkOutCombined,\n      price: selectedRoomInfo ? selectedRoomInfo.price : null,\n      currency: selectedRoomInfo ? selectedRoomInfo.currency : null,\n      complement: supplement ? Number(supplement) : 0,\n      complement_currency: supplementCurrency,\n      status: \"New\",\n      // valor fijo o variable según el flujo\n      comments: notes\n    };\n    onSave(payload).then(() => {\n      onHide();\n    }).catch(err => {\n      setValidationMsg(err.message || 'Error al guardar la asignación.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    size: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cliente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), \" \", `${initialData.first_name || ''} ${initialData.second_name || ''} ${initialData.paternal_surname || ''} ${initialData.mother_surname || ''}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Edad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), \" \", calculateAge(initialData.birth_date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sexo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), \" \", initialData.sex || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pasaporte:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), \" \", initialData.passport || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), \" \", initialData.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editHotel\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: hotelId,\n            onChange: e => setHotelId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), availableHotels.map(h => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: h.id_hotel,\n              children: h.hotel_name\n            }, h.id_hotel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Ciudad Actualizada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: city,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckInDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Check-in (Fecha)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkInDate,\n                onChange: e => setCheckInDate(e.target.value),\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            className: \"text-end\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckInTime\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-in (Hora)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"time\",\n                value: checkInTime,\n                onChange: e => setCheckInTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3 justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckOutDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Check-out (Fecha)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkOutDate,\n                onChange: e => setCheckOutDate(e.target.value),\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            className: \"text-end\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckOutTime\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-out (Hora)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"time\",\n                value: checkOutTime,\n                onChange: e => setCheckOutTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"editRoomType\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tipo de Habitaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: roomType,\n                onChange: handleRoomTypeChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Seleccione un tipo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this), roomTypeOptions.map(rt => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: rt.type,\n                  children: rt.type\n                }, rt.id_room, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayPrice\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Precio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: selectedRoomInfo ? selectedRoomInfo.price : '',\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCurrency\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Divisa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: selectedRoomInfo ? selectedRoomInfo.currency : '',\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"editSupplement\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Suplemento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: supplement,\n                onChange: e => setSupplement(e.target.value),\n                placeholder: \"Ingrese suplemento (opcional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"editSupplementCurrency\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Divisa Suplemento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: supplementCurrency,\n                onChange: e => setSupplementCurrency(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"EUR\",\n                  children: \"EUR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"USD\",\n                  children: \"USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"GBP\",\n                  children: \"GBP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editRoomNumber\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"N\\xFAmero de Habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: roomNumber,\n            onChange: e => setRoomNumber(e.target.value),\n            placeholder: \"Ingrese el n\\xFAmero de habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editNotes\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Notas / Comentarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: notes,\n            onChange: e => setNotes(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), validationMsg && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: validationMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onHide,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomAssignmentModal, \"gaQv5DcGa6k5lU/v+MyDeo7cJsY=\");\n_c = RoomAssignmentModal;\nRoomAssignmentModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  initialData: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  availableHotels: PropTypes.array.isRequired\n};\nexport default RoomAssignmentModal;\nvar _c;\n$RefreshReg$(_c, \"RoomAssignmentModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Modal","Button","Form","Row","Col","Alert","jsxDEV","_jsxDEV","calculateAge","birthDate","birth","Date","diff","now","getTime","ageDate","Math","abs","getUTCFullYear","parseDateString","dateStr","includes","parts","split","RoomAssignmentModal","show","onHide","initialData","onSave","availableHotels","_s","console","log","hotelId","setHotelId","id_hotel","roomType","setRoomType","type","roomNumber","setRoomNumber","room_number","notes","setNotes","validationMsg","setValidationMsg","roomTypeOptions","setRoomTypeOptions","selectedRoomInfo","setSelectedRoomInfo","selectedRoomId","setSelectedRoomId","supplement","setSupplement","supplementCurrency","setSupplementCurrency","city","setCity","checkInDate","setCheckInDate","start_date","checkInTime","setCheckInTime","checkOutDate","setCheckOutDate","end_date","checkOutTime","setCheckOutTime","Object","keys","length","comments","price","currency","supplements","supplements_currency","slice","fetch","process","env","REACT_APP_API_URL","then","res","json","data","status","Array","isArray","catch","err","error","selectedHotel","find","h","toString","handleRoomTypeChange","e","selectedType","target","value","selectedOption","rt","id_room","combineDateAndTime","timeStr","handleSubmit","preventDefault","checkInCombined","checkOutCombined","payload","id","id_hotel_reservation","client_id","id_clients","check_in_date","departure_date","complement","Number","complement_currency","message","centered","size","children","onSubmit","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","first_name","second_name","paternal_surname","mother_surname","md","birth_date","sex","passport","date","Group","controlId","Label","Select","onChange","map","hotel_name","Control","readOnly","placeholder","as","rows","variant","Footer","onClick","_c","propTypes","bool","isRequired","func","object","array","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/GroupDetail/modals/RoomAssignmentModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\n\r\n// Función para calcular la edad a partir de la fecha de nacimiento\r\nconst calculateAge = (birthDate) => {\r\n  if (!birthDate) return '';\r\n  const birth = new Date(birthDate);\r\n  const diff = Date.now() - birth.getTime();\r\n  const ageDate = new Date(diff);\r\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n};\r\n\r\nconst parseDateString = (dateStr) => {\r\n  if (!dateStr) return '';\r\n  // Si la fecha viene en formato dd/mm/aaaa\r\n  if (dateStr.includes('/')) {\r\n    const parts = dateStr.split('/');\r\n    // Retornamos en formato ISO: aaaa-mm-dd\r\n    return `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n  }\r\n  return dateStr; // Si ya está en formato ISO, lo dejamos igual.\r\n};\r\n\r\nconst RoomAssignmentModal = ({ show, onHide, initialData, onSave, availableHotels }) => {\r\n  console.log(`RoomAssignmentModal: initialData =`, initialData);\r\n  console.log(`RoomAssignmentModal: availableHotels =`, availableHotels);\r\n  // Campos editables\r\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\r\n  const [roomType, setRoomType] = useState(initialData.type || '');\r\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\r\n  const [notes, setNotes] = useState('');\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n\r\n  // Opciones para tipos de habitación y datos asociados (precio, currency)\r\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\r\n  const [selectedRoomInfo, setSelectedRoomInfo] = useState(null);\r\n  const [selectedRoomId, setSelectedRoomId] = useState(null);\r\n\r\n  // Estados para suplementos\r\n  const [supplement, setSupplement] = useState('');\r\n  const [supplementCurrency, setSupplementCurrency] = useState('');\r\n\r\n  // Estados para los datos de check-in y check-out\r\n  const [city, setCity] = useState(initialData.city || '');\r\n  // Si existen datos en initialData, se separan; de lo contrario quedan vacíos (o se pueden asignar valores por defecto)\r\n  const [checkInDate, setCheckInDate] = useState(\r\n    initialData.start_date ? parseDateString(initialData.start_date) : ''\r\n  );\r\n  const [checkInTime, setCheckInTime] = useState('15:00');\r\n  const [checkOutDate, setCheckOutDate] = useState(\r\n    initialData.end_date ? parseDateString(initialData.end_date) : ''\r\n  );\r\n  const [checkOutTime, setCheckOutTime] = useState('11:00');\r\n\r\n    // Effect para limpiar los campos editables cada vez que se abre el modal\r\n    useEffect(() => {\r\n      if (show) {\r\n        if (initialData && Object.keys(initialData).length > 0) {\r\n          // Cargamos los valores de edición\r\n          setHotelId(initialData.id_hotel || '');\r\n          setRoomType(initialData.type || '');\r\n          setRoomNumber(initialData.room_number || '');\r\n          setNotes(initialData.comments || '');\r\n          // Si initialData tiene precio y currency, los agrupamos en un objeto\r\n          if (initialData.price != null || initialData.currency) {\r\n            setSelectedRoomInfo({\r\n              price: initialData.price,\r\n              currency: initialData.currency,\r\n            });\r\n          } else {\r\n            setSelectedRoomInfo(null);\r\n          }\r\n          setSupplement(initialData.supplements || '');\r\n          setSupplementCurrency(initialData.supplements_currency || 'EUR');\r\n          setCity(initialData.city || '');\r\n          setCheckInDate(initialData.start_date ? initialData.start_date.split('T')[0] : '');\r\n          setCheckInTime(initialData.start_date ? initialData.start_date.split('T')[1].slice(0,5) : '15:00');\r\n          setCheckOutDate(initialData.end_date ? initialData.end_date.split('T')[0] : '');\r\n          setCheckOutTime(initialData.end_date ? initialData.end_date.split('T')[1].slice(0,5) : '11:00');\r\n        } else {\r\n          // Nuevo registro: limpiamos todos los campos\r\n          setHotelId('');\r\n          setRoomType('');\r\n          setRoomNumber('');\r\n          setNotes('');\r\n          setValidationMsg('');\r\n          setRoomTypeOptions([]);\r\n          setSelectedRoomInfo(null);\r\n          setSelectedRoomId(null);\r\n          setSupplement('');\r\n          setSupplementCurrency('EUR');\r\n          setCity('');\r\n          setCheckInDate('');\r\n          setCheckInTime('15:00');\r\n          setCheckOutDate('');\r\n          setCheckOutTime('11:00');\r\n        }\r\n      }\r\n    }, [show, initialData]);\r\n\r\n  // Cuando se selecciona un hotel, actualizar las opciones de habitación y los datos de ciudad, check-in y check-out\r\n  useEffect(() => {\r\n    if (hotelId) {\r\n      // Llamada al endpoint para obtener tipos de habitación para el hotel seleccionado\r\n      fetch(`${process.env.REACT_APP_API_URL}/hotels_room/hotels_room?id_hotel=${hotelId}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.status === 'success' && Array.isArray(data.data)) {\r\n            setRoomTypeOptions(data.data);\r\n          } else {\r\n            setRoomTypeOptions([]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error('Error al obtener tipos de habitación:', err);\r\n          setRoomTypeOptions([]);\r\n        });\r\n      \r\n      // Buscar en availableHotels los datos del hotel seleccionado\r\n      const selectedHotel = availableHotels.find(h => h.id_hotel.toString() === hotelId);\r\n      setNotes(\"\");\r\n      if (selectedHotel) {\r\n        setCity(selectedHotel.city || '');\r\n        // Actualizar las fechas: separamos la fecha y la hora (si existen), o usamos valores por defecto.\r\n        if (selectedHotel.start_date) {\r\n          const parts = selectedHotel.start_date.split('T');\r\n          setCheckInDate(parts[0]);\r\n          setCheckInTime(parts[1] ? parts[1].slice(0,5) : '15:00');\r\n        } else {\r\n          setCheckInDate('');\r\n          setCheckInTime('15:00');\r\n        }\r\n        if (selectedHotel.end_date) {\r\n          const parts = selectedHotel.end_date.split('T');\r\n          setCheckOutDate(parts[0]);\r\n          setCheckOutTime(parts[1] ? parts[1].slice(0,5) : '11:00');\r\n        } else {\r\n          setCheckOutDate('');\r\n          setCheckOutTime('11:00');\r\n        }\r\n      }\r\n    } else {\r\n      setRoomTypeOptions([]);\r\n      setSelectedRoomInfo(null);\r\n      setSelectedRoomId(null);\r\n    }\r\n  }, [hotelId, availableHotels]);\r\n\r\n  // Al seleccionar un tipo de habitación, actualizar automáticamente precio y divisa\r\n  const handleRoomTypeChange = (e) => {\r\n    const selectedType = e.target.value;\r\n    setRoomType(selectedType);\r\n    const selectedOption = roomTypeOptions.find(rt => rt.type === selectedType);\r\n    setSelectedRoomInfo(selectedOption || null);\r\n    setSelectedRoomId(selectedOption ? selectedOption.id_room : null);\r\n  };\r\n\r\n  // Función para combinar fecha y hora en formato ISO (sin zona horaria)\r\n  const combineDateAndTime = (dateStr, timeStr) => {\r\n    if (!dateStr || !timeStr) return null;\r\n    // Asumimos que la zona horaria se manejará en el backend\r\n    return `${dateStr}T${timeStr}:00Z`;\r\n  };\r\n\r\n  // Función para guardar la asignación\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!hotelId) {\r\n      setValidationMsg('Debe seleccionar un hotel.');\r\n      return;\r\n    }\r\n    if (!roomType) {\r\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\r\n      return;\r\n    }\r\n    const checkInCombined = combineDateAndTime(checkInDate, checkInTime);\r\n    const checkOutCombined = combineDateAndTime(checkOutDate, checkOutTime);\r\n    const payload = {\r\n      id: initialData.id, // supondremos que viene en initialData\r\n      id_hotel_reservation: hotelId || 0,\r\n      client_id: initialData.id_clients,\r\n      id_room: selectedRoomId,\r\n      room_number: roomNumber,\r\n      check_in_date: checkInCombined,\r\n      departure_date: checkOutCombined,\r\n      price: selectedRoomInfo ? selectedRoomInfo.price : null,\r\n      currency: selectedRoomInfo ? selectedRoomInfo.currency : null,\r\n      complement: supplement ? Number(supplement) : 0,\r\n      complement_currency: supplementCurrency,\r\n      status: \"New\", // valor fijo o variable según el flujo\r\n      comments: notes,\r\n    };\r\n    onSave(payload)\r\n      .then(() => {\r\n        onHide();\r\n      })\r\n      .catch((err) => {\r\n        setValidationMsg(err.message || 'Error al guardar la asignación.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered size=\"xl\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Fila 1: Información del Cliente */}\r\n          <Row className=\"mb-2\">\r\n            <Col>\r\n              <strong>Cliente:</strong> {`${initialData.first_name || ''} ${initialData.second_name || ''} ${initialData.paternal_surname || ''} ${initialData.mother_surname || ''}`}\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 2: Datos Personales */}\r\n          <Row className=\"mb-2\">\r\n            <Col md={4}>\r\n              <strong>Edad:</strong> {calculateAge(initialData.birth_date)}\r\n            </Col>\r\n            <Col md={4}>\r\n              <strong>Sexo:</strong> {initialData.sex || '-'}\r\n            </Col>\r\n            <Col md={4}>\r\n              <strong>Pasaporte:</strong> {initialData.passport || '-'}\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 3: Fecha y Ciudad Original */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <strong>Fecha:</strong> {initialData.date}\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 4: Selección de Hotel */}\r\n          <Form.Group controlId=\"editHotel\" className=\"mb-3\">\r\n            <Form.Label>Hotel</Form.Label>\r\n            <Form.Select value={hotelId} onChange={(e) => setHotelId(e.target.value)}>\r\n              <option value=\"\">Seleccione un hotel</option>\r\n              {availableHotels.map((h) => (\r\n                <option key={h.id_hotel} value={h.id_hotel}>\r\n                  {h.hotel_name}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          {/* Fila 5: Mostrar Ciudad y Fechas Actualizadas (solo lectura) */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCity\">\r\n                <Form.Label className=\"fw-bold\">Ciudad Actualizada</Form.Label>\r\n                <Form.Control type=\"text\" value={city} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCheckInDate\">\r\n                <Form.Label className=\"fw-bold\">Check-in (Fecha)</Form.Label>\r\n                <Form.Control type=\"date\" value={checkInDate} onChange={(e) => setCheckInDate(e.target.value)} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"text-end\">\r\n              <Form.Group controlId=\"displayCheckInTime\">\r\n                <Form.Label>Check-in (Hora)</Form.Label>\r\n                <Form.Control type=\"time\" value={checkInTime} onChange={(e) => setCheckInTime(e.target.value)} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3 justify-content-end\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCheckOutDate\">\r\n                <Form.Label className=\"fw-bold\">Check-out (Fecha)</Form.Label>\r\n                <Form.Control type=\"date\" value={checkOutDate} onChange={(e) => setCheckOutDate(e.target.value)} readOnly/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"text-end\">\r\n              <Form.Group controlId=\"displayCheckOutTime\">\r\n                <Form.Label>Check-out (Hora)</Form.Label>\r\n                <Form.Control type=\"time\" value={checkOutTime} onChange={(e) => setCheckOutTime(e.target.value)} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 6: Selección de Tipo de Habitación y visualización de Precio y Divisa */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={5}>\r\n              <Form.Group controlId=\"editRoomType\">\r\n                <Form.Label>Tipo de Habitación</Form.Label>\r\n                <Form.Select value={roomType} onChange={handleRoomTypeChange}>\r\n                  <option value=\"\">Seleccione un tipo</option>\r\n                  {roomTypeOptions.map((rt) => (\r\n                    <option key={rt.id_room} value={rt.type}>\r\n                      {rt.type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Form.Group controlId=\"displayPrice\">\r\n                <Form.Label className=\"fw-bold\">Precio</Form.Label>\r\n                <Form.Control type=\"number\" value={selectedRoomInfo ? selectedRoomInfo.price : ''} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCurrency\">\r\n                <Form.Label className=\"fw-bold\">Divisa</Form.Label>\r\n                <Form.Control type=\"text\" value={selectedRoomInfo ? selectedRoomInfo.currency : ''} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 7: Suplemento y Divisa de Suplemento */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"editSupplement\">\r\n                <Form.Label>Suplemento</Form.Label>\r\n                <Form.Control type=\"number\" value={supplement} onChange={(e) => setSupplement(e.target.value)} placeholder=\"Ingrese suplemento (opcional)\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"editSupplementCurrency\">\r\n                <Form.Label>Divisa Suplemento</Form.Label>\r\n                <Form.Select value={supplementCurrency} onChange={(e) => setSupplementCurrency(e.target.value)}>\r\n                  <option value=\"EUR\">EUR</option>\r\n                  <option value=\"USD\">USD</option>\r\n                  <option value=\"GBP\">GBP</option>\r\n                  {/* Más opciones si es necesario */}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 8: Número de Habitación */}\r\n          <Form.Group controlId=\"editRoomNumber\" className=\"mb-3\">\r\n            <Form.Label>Número de Habitación</Form.Label>\r\n            <Form.Control type=\"text\" value={roomNumber} onChange={(e) => setRoomNumber(e.target.value)} placeholder=\"Ingrese el número de habitación\" />\r\n          </Form.Group>\r\n          {/* Fila 9: Notas / Comentarios */}\r\n          <Form.Group controlId=\"editNotes\" className=\"mb-3\">\r\n            <Form.Label>Notas / Comentarios</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} value={notes} onChange={(e) => setNotes(e.target.value)} />\r\n          </Form.Group>\r\n          {validationMsg && <Alert variant=\"danger\">{validationMsg}</Alert>}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onHide}>Cancelar</Button>\r\n          <Button variant=\"primary\" type=\"submit\">Guardar Cambios</Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nRoomAssignmentModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  initialData: PropTypes.object.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  availableHotels: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default RoomAssignmentModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}