{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\GroupDetail\\\\modals\\\\RoomAssignmentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomAssignmentModal = ({\n  show,\n  onHide,\n  initialData,\n  onSave,\n  availableHotels\n}) => {\n  _s();\n  // Los campos fijos vienen en initialData: nombre, edad, etc.\n  // Los campos editables son: hotel, room type, room number, notas.\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\n  const [roomType, setRoomType] = useState(initialData.type || '');\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\n  const [notes, setNotes] = useState(initialData.comments || '');\n  const [validationMsg, setValidationMsg] = useState('');\n\n  // Opciones para tipo de habitación se actualizarán al seleccionar un hotel.\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\n  // Opciones para el número de habitación, obtenidas del endpoint pendiente.\n  const [roomNumberOptions, setRoomNumberOptions] = useState([]);\n\n  // Cuando se selecciona un hotel, se debe actualizar el desplegable de tipos.\n  useEffect(() => {\n    if (hotelId) {\n      // Llamar al endpoint (o usar datos ya disponibles) para obtener los tipos de habitación\n      // Por ahora, simulamos:\n      const simulatedTypes = hotelId === '5' ? ['Doble', 'Individual'] : ['Doble'];\n      setRoomTypeOptions(simulatedTypes);\n      // También se puede obtener la lista de habitaciones disponibles para llenar roomNumberOptions.\n      // Simulamos con un arreglo:\n      const simulatedRooms = hotelId === '5' ? ['101', '102', '103'] : ['201', '202'];\n      setRoomNumberOptions(simulatedRooms);\n    }\n  }, [hotelId]);\n\n  // Función para guardar la asignación\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Validar que se seleccione un hotel y que los campos obligatorios estén completos.\n    if (!hotelId) {\n      setValidationMsg('Debe seleccionar un hotel.');\n      return;\n    }\n    if (!roomType) {\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\n      return;\n    }\n    if (!roomNumber) {\n      setValidationMsg('Debe seleccionar o ingresar el número de habitación.');\n      return;\n    }\n    // Construir el payload a enviar\n    const payload = {\n      id: initialData.id,\n      // id de la asignación, si es edición\n      id_group: initialData.id_group,\n      client_id: initialData.id_clients,\n      // id del cliente\n      date: initialData.date,\n      // La fecha de asignación no se modifica\n      city: initialData.city,\n      hotel_id: parseInt(hotelId, 10),\n      room_type: roomType,\n      room_number: roomNumber,\n      comments: notes\n      // Otros campos fijos no se modifican.\n    };\n    onSave(payload).then(() => {\n      onHide();\n    }).catch(err => {\n      setValidationMsg(err.message || 'Error al guardar la asignación.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cliente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), \" \", `${initialData.first_name} ${initialData.second_name} ${initialData.paternal_surname} ${initialData.mother_surname}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Edad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), \" \", initialData.age || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sexo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), \" \", initialData.sex || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pasaporte:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), \" \", initialData.passport || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), \" \", initialData.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ciudad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), \" \", initialData.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editHotel\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: hotelId,\n            onChange: e => setHotelId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), availableHotels.map(h => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: h.id_hotel,\n              children: h.hotel_name\n            }, h.id_hotel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editRoomType\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Tipo de Habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: roomType,\n            onChange: e => setRoomType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un tipo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), roomTypeOptions.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editRoomNumber\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"N\\xFAmero de Habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: roomNumber,\n            onChange: e => setRoomNumber(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione una habitaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), roomNumberOptions.map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editNotes\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Notas / Comentarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: notes,\n            onChange: e => setNotes(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), validationMsg && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: validationMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onHide,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomAssignmentModal, \"F43VfueKuQ0k3HMemQJ0JN66wZo=\");\n_c = RoomAssignmentModal;\nRoomAssignmentModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  initialData: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  availableHotels: PropTypes.array.isRequired\n};\nexport default RoomAssignmentModal;\nvar _c;\n$RefreshReg$(_c, \"RoomAssignmentModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Modal","Button","Form","Row","Col","Alert","jsxDEV","_jsxDEV","RoomAssignmentModal","show","onHide","initialData","onSave","availableHotels","_s","hotelId","setHotelId","id_hotel","roomType","setRoomType","type","roomNumber","setRoomNumber","room_number","notes","setNotes","comments","validationMsg","setValidationMsg","roomTypeOptions","setRoomTypeOptions","roomNumberOptions","setRoomNumberOptions","simulatedTypes","simulatedRooms","handleSubmit","e","preventDefault","payload","id","id_group","client_id","id_clients","date","city","hotel_id","parseInt","room_type","then","catch","err","message","centered","children","onSubmit","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","first_name","second_name","paternal_surname","mother_surname","age","sex","passport","Group","controlId","Label","Select","value","onChange","target","map","h","hotel_name","num","Control","as","rows","variant","Footer","onClick","_c","propTypes","bool","isRequired","func","object","array","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/GroupDetail/modals/RoomAssignmentModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\n\r\nconst RoomAssignmentModal = ({ show, onHide, initialData, onSave, availableHotels }) => {\r\n  // Los campos fijos vienen en initialData: nombre, edad, etc.\r\n  // Los campos editables son: hotel, room type, room number, notas.\r\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\r\n  const [roomType, setRoomType] = useState(initialData.type || '');\r\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\r\n  const [notes, setNotes] = useState(initialData.comments || '');\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n\r\n  // Opciones para tipo de habitación se actualizarán al seleccionar un hotel.\r\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\r\n  // Opciones para el número de habitación, obtenidas del endpoint pendiente.\r\n  const [roomNumberOptions, setRoomNumberOptions] = useState([]);\r\n\r\n  // Cuando se selecciona un hotel, se debe actualizar el desplegable de tipos.\r\n  useEffect(() => {\r\n    if (hotelId) {\r\n      // Llamar al endpoint (o usar datos ya disponibles) para obtener los tipos de habitación\r\n      // Por ahora, simulamos:\r\n      const simulatedTypes = hotelId === '5'\r\n        ? ['Doble', 'Individual']\r\n        : ['Doble'];\r\n      setRoomTypeOptions(simulatedTypes);\r\n      // También se puede obtener la lista de habitaciones disponibles para llenar roomNumberOptions.\r\n      // Simulamos con un arreglo:\r\n      const simulatedRooms = hotelId === '5' ? ['101', '102', '103'] : ['201', '202'];\r\n      setRoomNumberOptions(simulatedRooms);\r\n    }\r\n  }, [hotelId]);\r\n\r\n  // Función para guardar la asignación\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validar que se seleccione un hotel y que los campos obligatorios estén completos.\r\n    if (!hotelId) {\r\n      setValidationMsg('Debe seleccionar un hotel.');\r\n      return;\r\n    }\r\n    if (!roomType) {\r\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\r\n      return;\r\n    }\r\n    if (!roomNumber) {\r\n      setValidationMsg('Debe seleccionar o ingresar el número de habitación.');\r\n      return;\r\n    }\r\n    // Construir el payload a enviar\r\n    const payload = {\r\n      id: initialData.id, // id de la asignación, si es edición\r\n      id_group: initialData.id_group,\r\n      client_id: initialData.id_clients, // id del cliente\r\n      date: initialData.date, // La fecha de asignación no se modifica\r\n      city: initialData.city,\r\n      hotel_id: parseInt(hotelId, 10),\r\n      room_type: roomType,\r\n      room_number: roomNumber,\r\n      comments: notes,\r\n      // Otros campos fijos no se modifican.\r\n    };\r\n    onSave(payload)\r\n      .then(() => {\r\n        onHide();\r\n      })\r\n      .catch((err) => {\r\n        setValidationMsg(err.message || 'Error al guardar la asignación.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Información no editable (por ejemplo, datos del cliente) */}\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <strong>Cliente:</strong> {`${initialData.first_name} ${initialData.second_name} ${initialData.paternal_surname} ${initialData.mother_surname}`}\r\n            </Col>\r\n            <Col>\r\n              <strong>Edad:</strong> {initialData.age || '-'}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <strong>Sexo:</strong> {initialData.sex || '-'}\r\n            </Col>\r\n            <Col>\r\n              <strong>Pasaporte:</strong> {initialData.passport || '-'}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Col>\r\n              <strong>Fecha:</strong> {initialData.date}\r\n            </Col>\r\n            <Col>\r\n              <strong>Ciudad:</strong> {initialData.city}\r\n            </Col>\r\n          </Row>\r\n          {/* Campos editables */}\r\n          <Form.Group controlId=\"editHotel\" className=\"mb-3\">\r\n            <Form.Label>Hotel</Form.Label>\r\n            <Form.Select value={hotelId} onChange={(e) => setHotelId(e.target.value)}>\r\n              <option value=\"\">Seleccione un hotel</option>\r\n              {availableHotels.map((h) => (\r\n                <option key={h.id_hotel} value={h.id_hotel}>{h.hotel_name}</option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"editRoomType\" className=\"mb-3\">\r\n            <Form.Label>Tipo de Habitación</Form.Label>\r\n            <Form.Select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\r\n              <option value=\"\">Seleccione un tipo</option>\r\n              {roomTypeOptions.map((type) => (\r\n                <option key={type} value={type}>{type}</option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"editRoomNumber\" className=\"mb-3\">\r\n            <Form.Label>Número de Habitación</Form.Label>\r\n            {/* Podría ser un input o un select, dependiendo de si tenemos datos de disponibilidad */}\r\n            <Form.Select value={roomNumber} onChange={(e) => setRoomNumber(e.target.value)}>\r\n              <option value=\"\">Seleccione una habitación</option>\r\n              {roomNumberOptions.map((num) => (\r\n                <option key={num} value={num}>{num}</option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"editNotes\" className=\"mb-3\">\r\n            <Form.Label>Notas / Comentarios</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              value={notes}\r\n              onChange={(e) => setNotes(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {validationMsg && <Alert variant=\"danger\">{validationMsg}</Alert>}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onHide}>Cancelar</Button>\r\n          <Button variant=\"primary\" type=\"submit\">Guardar Cambios</Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nRoomAssignmentModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  initialData: PropTypes.object.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  availableHotels: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default RoomAssignmentModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}