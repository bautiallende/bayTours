{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\HotelModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\n\n// Función auxiliar para formatear una fecha al formato \"YYYY-MM-DD\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDateForInput = dateString => {\n  if (!dateString) return '';\n  const dateObj = new Date(dateString);\n  if (isNaN(dateObj.getTime())) return '';\n  return dateObj.toISOString().split('T')[0];\n};\n\n/**\r\n * HotelModal permite agregar o editar una asignación de hotel.\r\n * \r\n * Props:\r\n * - show: Booleano para mostrar/ocultar el modal.\r\n * - onHide: Función para ocultar el modal.\r\n * - initialData: Datos iniciales de la asignación (modo edición). En modo agregar, suele ser {}.\r\n * - onSave: Callback que se invoca al enviar el formulario, pasando el payload para actualizar (PUT).\r\n * - onAddAnother: Callback que se invoca cuando se quiere agregar otro hotel para el mismo día.\r\n * - groupPax: Número total de pasajeros del grupo (para validar si se pueden agregar más asignaciones).\r\n * - availableHotels: (Opcional) Lista de hoteles disponibles para la ciudad.\r\n *   Si no se pasa, se hará el GET al endpoint.\r\n */\nconst HotelModal = ({\n  show,\n  onHide,\n  initialData = {},\n  onSave,\n  onAddAnother,\n  groupPax,\n  availableHotels: propAvailableHotels\n}) => {\n  _s();\n  // Estados para cada campo; en modo edición se pre-cargan desde initialData.\n  // Los campos \"city\" y \"date\" se muestran pero se bloquean (readOnly) para que no se modifiquen.\n  const [city, setCity] = useState(initialData.city || '');\n  const [date, setDate] = useState(formatDateForInput(initialData.date));\n  // En lugar de hotelName, usaremos un dropdown para seleccionar un hotel.\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || ''); // se espera que sea un número o cadena\n  const [hotelsList, setHotelsList] = useState(propAvailableHotels || []);\n  const [checkIn, setCheckIn] = useState(initialData.check_in || '');\n  const [checkOut, setCheckOut] = useState(initialData.check_out || '');\n  const [roomingList, setRoomingList] = useState(typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false);\n  const [proForma, setProForma] = useState(typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false);\n  const [currency, setCurrency] = useState(initialData.currency || 'USD');\n  const [totalToPay, setTotalToPay] = useState(initialData.total_to_pay != null ? initialData.total_to_pay : 0);\n  const [paymentDate, setPaymentDate] = useState(formatDateForInput(initialData.payment_date));\n  const [paymentDoneDate, setPaymentDoneDate] = useState(formatDateForInput(initialData.payment_done_date));\n  const [factura, setFactura] = useState(typeof initialData.factura === 'boolean' ? initialData.factura : false);\n  const [iga, setIga] = useState(typeof initialData.iga === 'boolean' ? initialData.iga : false);\n  // El campo para comentarios ahora se llamará \"comment\" y, por el workflow, se inicia vacío\n  const [comment, setComment] = useState('');\n\n  // Estado para el número de pasajeros asignados en esta asignación.\n  // Se asume que en initialData viene el campo \"pax\" o \"total_assigned\"\n  const [paxAssigned, setPaxAssigned] = useState(initialData.pax || 0);\n\n  // Estado para mostrar mensajes de validación\n  const [validationMsg, setValidationMsg] = useState('');\n\n  // Cada vez que initialData cambie, actualizamos los estados (menos el comentario, que se inicia vacío).\n  useEffect(() => {\n    setCity(initialData.city || '');\n    setDate(formatDateForInput(initialData.date));\n    // Para el hotel, si en edición ya existe un id, se usa; de lo contrario, se deja vacío.\n    setHotelId(initialData.id_hotel || '');\n    // Si el prop de hoteles disponibles no viene, hacemos el GET a /hotels/get_hotel_by_city?city=\n    if (!propAvailableHotels && initialData.city) {\n      fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(initialData.city)}`).then(res => res.json()).then(data => {\n        // Se espera que data sea un array de hoteles: [{ id: 1, name: 'Hotel X' }, ...]\n        setHotelsList(data);\n      }).catch(err => console.error('Error al obtener hoteles:', err));\n    }\n    setCheckIn(initialData.check_in || '');\n    setCheckOut(initialData.check_out || '');\n    setPaxAssigned(initialData.pax || 0);\n    setRoomingList(typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false);\n    setProForma(typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false);\n    setCurrency(initialData.currency || 'USD');\n    setTotalToPay(initialData.total_to_pay != null ? initialData.total_to_pay : 0);\n    setPaymentDate(formatDateForInput(initialData.payment_date));\n    setPaymentDoneDate(formatDateForInput(initialData.payment_done_date));\n    setFactura(typeof initialData.factura === 'boolean' ? initialData.factura : false);\n    setIga(typeof initialData.iga === 'boolean' ? initialData.iga : false);\n    // No se precarga \"comment\" para que siempre inicie en blanco.\n  }, [initialData, propAvailableHotels]);\n\n  // Maneja el envío del formulario.\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Preparamos el payload de acuerdo al modelo HotelReservationUpdate.\n    const payload = {\n      id: initialData.assignment_id || '',\n      // Se envía si es edición.\n      id_hotel: parseInt(hotelId, 10),\n      // Convertir a número\n      id_group: initialData.id_group || '',\n      // Se espera que esté en initialData o se extraiga de otro lugar\n      start_date: date,\n      // Asumimos que el backend acepta fecha en formato \"YYYY-MM-DD\"\n      end_date: date,\n      // Si la asignación es por día, se usa la misma fecha en start y end.\n      pax: parseInt(paxAssigned, 10),\n      currency,\n      total_to_pay: parseFloat(totalToPay),\n      comment,\n      // El nuevo comentario ingresado.\n      rooming_list: roomingList,\n      pro_forma: proForma,\n      payment_date: paymentDate,\n      payment_done_date: paymentDoneDate,\n      payed_by: null,\n      // O el valor que corresponda si se requiere.\n      factura,\n      iga\n    };\n    onSave(payload);\n  };\n\n  // Determina si se puede agregar otro hotel (si los pasajeros asignados son menores que el total del grupo)\n  const canAddAnother = paxAssigned < groupPax;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    size: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: initialData.assignment_id ? 'Editar Asignación de Hotel' : 'Agregar Asignación de Hotel'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Ciudad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: city,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: date,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formHotel\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: hotelId,\n            onChange: e => setHotelId(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), hotelsList.map(hotel => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: hotel.id_hotel,\n              children: hotel.hotel_name\n            }, hotel.id_hotel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCheckIn\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"datetime-local\",\n                value: checkIn,\n                onChange: e => setCheckIn(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCheckOut\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"datetime-local\",\n                value: checkOut,\n                onChange: e => setCheckOut(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formRoomingList\",\n              label: \"Rooming List Enviado\",\n              checked: roomingList,\n              onChange: e => setRoomingList(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formProForma\",\n              label: \"Pro Forma Enviado\",\n              checked: proForma,\n              onChange: e => setProForma(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formCurrency\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Moneda\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: currency,\n                onChange: e => setCurrency(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"USD\",\n                  children: \"USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"EUR\",\n                  children: \"EUR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ARS\",\n                  children: \"ARS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formTotalToPay\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Total a Pagar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: totalToPay,\n                onChange: e => setTotalToPay(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPAX\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"PAX Asignados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: paxAssigned,\n                onChange: e => setPaxAssigned(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPaymentDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha de Pago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: paymentDate,\n                onChange: e => setPaymentDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formPaymentDoneDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fecha de Pago Realizado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: paymentDoneDate,\n                onChange: e => setPaymentDoneDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formFactura\",\n              label: \"Factura Emitida\",\n              checked: factura,\n              onChange: e => setFactura(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"switch\",\n              id: \"formIGA\",\n              label: \"IGA Gestionado\",\n              checked: iga,\n              onChange: e => setIga(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNotes\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comentarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            placeholder: \"Escribe aqu\\xED un nuevo comentario. Los comentarios anteriores no se podr\\xE1n modificar.\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: onHide,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"ms-2\",\n            children: \"Guardar Cambios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), canAddAnother && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          onClick: () => {\n            // Primero se guarda la asignación actual\n            handleSubmit(new Event('submit'));\n            // Luego se llama al callback para agregar otra asignación para el mismo día.\n            if (onAddAnother) onAddAnother();\n          },\n          children: \"Agregar otro hotel para este d\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelModal, \"s1myhtwsBh3bNeBmiDMz7MdSfrw=\");\n_c = HotelModal;\nexport default HotelModal;\nvar _c;\n$RefreshReg$(_c, \"HotelModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Row","Col","Alert","jsxDEV","_jsxDEV","formatDateForInput","dateString","dateObj","Date","isNaN","getTime","toISOString","split","HotelModal","show","onHide","initialData","onSave","onAddAnother","groupPax","availableHotels","propAvailableHotels","_s","city","setCity","date","setDate","hotelId","setHotelId","id_hotel","hotelsList","setHotelsList","checkIn","setCheckIn","check_in","checkOut","setCheckOut","check_out","roomingList","setRoomingList","rooming_list","proForma","setProForma","pro_forma","currency","setCurrency","totalToPay","setTotalToPay","total_to_pay","paymentDate","setPaymentDate","payment_date","paymentDoneDate","setPaymentDoneDate","payment_done_date","factura","setFactura","iga","setIga","comment","setComment","paxAssigned","setPaxAssigned","pax","validationMsg","setValidationMsg","fetch","process","env","REACT_APP_API_URL","encodeURIComponent","then","res","json","data","catch","err","console","error","handleSubmit","e","preventDefault","payload","id","assignment_id","parseInt","id_group","start_date","end_date","parseFloat","payed_by","canAddAnother","centered","size","children","onSubmit","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","md","Group","controlId","Label","Control","type","value","readOnly","Select","onChange","target","required","map","hotel","hotel_name","Check","label","checked","as","rows","placeholder","Footer","variant","onClick","Event","_c","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/HotelModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\n\r\n// Función auxiliar para formatear una fecha al formato \"YYYY-MM-DD\"\r\nconst formatDateForInput = (dateString) => {\r\n  if (!dateString) return '';\r\n  const dateObj = new Date(dateString);\r\n  if (isNaN(dateObj.getTime())) return '';\r\n  return dateObj.toISOString().split('T')[0];\r\n};\r\n\r\n/**\r\n * HotelModal permite agregar o editar una asignación de hotel.\r\n * \r\n * Props:\r\n * - show: Booleano para mostrar/ocultar el modal.\r\n * - onHide: Función para ocultar el modal.\r\n * - initialData: Datos iniciales de la asignación (modo edición). En modo agregar, suele ser {}.\r\n * - onSave: Callback que se invoca al enviar el formulario, pasando el payload para actualizar (PUT).\r\n * - onAddAnother: Callback que se invoca cuando se quiere agregar otro hotel para el mismo día.\r\n * - groupPax: Número total de pasajeros del grupo (para validar si se pueden agregar más asignaciones).\r\n * - availableHotels: (Opcional) Lista de hoteles disponibles para la ciudad.\r\n *   Si no se pasa, se hará el GET al endpoint.\r\n */\r\nconst HotelModal = ({ \r\n  show, \r\n  onHide, \r\n  initialData = {}, \r\n  onSave, \r\n  onAddAnother, \r\n  groupPax, \r\n  availableHotels: propAvailableHotels \r\n}) => {\r\n  // Estados para cada campo; en modo edición se pre-cargan desde initialData.\r\n  // Los campos \"city\" y \"date\" se muestran pero se bloquean (readOnly) para que no se modifiquen.\r\n  const [city, setCity] = useState(initialData.city || '');\r\n  const [date, setDate] = useState(formatDateForInput(initialData.date));\r\n  // En lugar de hotelName, usaremos un dropdown para seleccionar un hotel.\r\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || ''); // se espera que sea un número o cadena\r\n  const [hotelsList, setHotelsList] = useState(propAvailableHotels || []);  \r\n  const [checkIn, setCheckIn] = useState(initialData.check_in || '');\r\n  const [checkOut, setCheckOut] = useState(initialData.check_out || '');\r\n  const [roomingList, setRoomingList] = useState(\r\n    typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false\r\n  );\r\n  const [proForma, setProForma] = useState(\r\n    typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false\r\n  );\r\n  const [currency, setCurrency] = useState(initialData.currency || 'USD');\r\n  const [totalToPay, setTotalToPay] = useState(\r\n    initialData.total_to_pay != null ? initialData.total_to_pay : 0\r\n  );\r\n  const [paymentDate, setPaymentDate] = useState(formatDateForInput(initialData.payment_date));\r\n  const [paymentDoneDate, setPaymentDoneDate] = useState(formatDateForInput(initialData.payment_done_date));\r\n  const [factura, setFactura] = useState(\r\n    typeof initialData.factura === 'boolean' ? initialData.factura : false\r\n  );\r\n  const [iga, setIga] = useState(\r\n    typeof initialData.iga === 'boolean' ? initialData.iga : false\r\n  );\r\n  // El campo para comentarios ahora se llamará \"comment\" y, por el workflow, se inicia vacío\r\n  const [comment, setComment] = useState('');\r\n\r\n  // Estado para el número de pasajeros asignados en esta asignación.\r\n  // Se asume que en initialData viene el campo \"pax\" o \"total_assigned\"\r\n  const [paxAssigned, setPaxAssigned] = useState(initialData.pax || 0);\r\n\r\n  // Estado para mostrar mensajes de validación\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n\r\n  // Cada vez que initialData cambie, actualizamos los estados (menos el comentario, que se inicia vacío).\r\n  useEffect(() => {\r\n    setCity(initialData.city || '');\r\n    setDate(formatDateForInput(initialData.date));\r\n    // Para el hotel, si en edición ya existe un id, se usa; de lo contrario, se deja vacío.\r\n    setHotelId(initialData.id_hotel || '');\r\n    // Si el prop de hoteles disponibles no viene, hacemos el GET a /hotels/get_hotel_by_city?city=\r\n    if (!propAvailableHotels && initialData.city) {\r\n      fetch(`${process.env.REACT_APP_API_URL}/hotels/get_hotel_by_city?city=${encodeURIComponent(initialData.city)}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          // Se espera que data sea un array de hoteles: [{ id: 1, name: 'Hotel X' }, ...]\r\n          setHotelsList(data);\r\n        })\r\n        .catch(err => console.error('Error al obtener hoteles:', err));\r\n    }\r\n    setCheckIn(initialData.check_in || '');\r\n    setCheckOut(initialData.check_out || '');\r\n    setPaxAssigned(initialData.pax || 0);\r\n    setRoomingList(typeof initialData.rooming_list === 'boolean' ? initialData.rooming_list : false);\r\n    setProForma(typeof initialData.pro_forma === 'boolean' ? initialData.pro_forma : false);\r\n    setCurrency(initialData.currency || 'USD');\r\n    setTotalToPay(initialData.total_to_pay != null ? initialData.total_to_pay : 0);\r\n    setPaymentDate(formatDateForInput(initialData.payment_date));\r\n    setPaymentDoneDate(formatDateForInput(initialData.payment_done_date));\r\n    setFactura(typeof initialData.factura === 'boolean' ? initialData.factura : false);\r\n    setIga(typeof initialData.iga === 'boolean' ? initialData.iga : false);\r\n    // No se precarga \"comment\" para que siempre inicie en blanco.\r\n  }, [initialData, propAvailableHotels]);\r\n\r\n  // Maneja el envío del formulario.\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Preparamos el payload de acuerdo al modelo HotelReservationUpdate.\r\n    const payload = {\r\n      id: initialData.assignment_id || '', // Se envía si es edición.\r\n      id_hotel: parseInt(hotelId, 10), // Convertir a número\r\n      id_group: initialData.id_group || '', // Se espera que esté en initialData o se extraiga de otro lugar\r\n      start_date: date, // Asumimos que el backend acepta fecha en formato \"YYYY-MM-DD\"\r\n      end_date: date,   // Si la asignación es por día, se usa la misma fecha en start y end.\r\n      pax: parseInt(paxAssigned, 10),\r\n      currency,\r\n      total_to_pay: parseFloat(totalToPay),\r\n      comment, // El nuevo comentario ingresado.\r\n      rooming_list: roomingList,\r\n      pro_forma: proForma,\r\n      payment_date: paymentDate,\r\n      payment_done_date: paymentDoneDate,\r\n      payed_by: null, // O el valor que corresponda si se requiere.\r\n      factura,\r\n      iga,\r\n    };\r\n    onSave(payload);\r\n  };\r\n\r\n  // Determina si se puede agregar otro hotel (si los pasajeros asignados son menores que el total del grupo)\r\n  const canAddAnother = paxAssigned < groupPax;\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered size=\"lg\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {initialData.assignment_id ? 'Editar Asignación de Hotel' : 'Agregar Asignación de Hotel'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Fila 1: Ciudad y Fecha (no editables) */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCity\">\r\n                <Form.Label>Ciudad</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={city}\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formDate\">\r\n                <Form.Label>Fecha</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={date}\r\n                  readOnly\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 2: Selección de Hotel mediante Dropdown */}\r\n          <Form.Group controlId=\"formHotel\">\r\n            <Form.Label>Hotel</Form.Label>\r\n            <Form.Select \r\n              value={hotelId}\r\n              onChange={(e) => setHotelId(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Seleccione un hotel</option>\r\n              {hotelsList.map((hotel) => (\r\n                <option key={hotel.id_hotel} value={hotel.id_hotel}>\r\n                  {hotel.hotel_name}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          {/* Fila 3: Check-in y Check-out */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCheckIn\">\r\n                <Form.Label>Check-in</Form.Label>\r\n                <Form.Control\r\n                  type=\"datetime-local\"\r\n                  value={checkIn}\r\n                  onChange={(e) => setCheckIn(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formCheckOut\">\r\n                <Form.Label>Check-out</Form.Label>\r\n                <Form.Control\r\n                  type=\"datetime-local\"\r\n                  value={checkOut}\r\n                  onChange={(e) => setCheckOut(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 4: Switches para Rooming List y Pro Forma */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formRoomingList\"\r\n                label=\"Rooming List Enviado\"\r\n                checked={roomingList}\r\n                onChange={(e) => setRoomingList(e.target.checked)}\r\n              />\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formProForma\"\r\n                label=\"Pro Forma Enviado\"\r\n                checked={proForma}\r\n                onChange={(e) => setProForma(e.target.checked)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 5: Moneda, Total a Pagar y PAX asignados */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formCurrency\">\r\n                <Form.Label>Moneda</Form.Label>\r\n                <Form.Select value={currency} onChange={(e) => setCurrency(e.target.value)}>\r\n                  <option value=\"USD\">USD</option>\r\n                  <option value=\"EUR\">EUR</option>\r\n                  <option value=\"ARS\">ARS</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formTotalToPay\">\r\n                <Form.Label>Total a Pagar</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={totalToPay}\r\n                  onChange={(e) => setTotalToPay(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"formPAX\">\r\n                <Form.Label>PAX Asignados</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  value={paxAssigned}\r\n                  onChange={(e) => setPaxAssigned(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 6: Fechas de Pago */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formPaymentDate\">\r\n                <Form.Label>Fecha de Pago</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={paymentDate}\r\n                  onChange={(e) => setPaymentDate(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"formPaymentDoneDate\">\r\n                <Form.Label>Fecha de Pago Realizado</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={paymentDoneDate}\r\n                  onChange={(e) => setPaymentDoneDate(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 7: Factura e IGA */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formFactura\"\r\n                label=\"Factura Emitida\"\r\n                checked={factura}\r\n                onChange={(e) => setFactura(e.target.checked)}\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Check\r\n                type=\"switch\"\r\n                id=\"formIGA\"\r\n                label=\"IGA Gestionado\"\r\n                checked={iga}\r\n                onChange={(e) => setIga(e.target.checked)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 8: Comentarios */}\r\n          <Form.Group controlId=\"formNotes\" className=\"mb-3\">\r\n            <Form.Label>Comentarios</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              placeholder=\"Escribe aquí un nuevo comentario. Los comentarios anteriores no se podrán modificar.\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Button variant=\"secondary\" onClick={onHide}>\r\n              Cancelar\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\" className=\"ms-2\">\r\n              Guardar Cambios\r\n            </Button>\r\n          </div>\r\n          {/* Botón para agregar otra asignación si aún faltan pasajeros */}\r\n          {canAddAnother && (\r\n            <Button variant=\"outline-primary\" onClick={() => {\r\n              // Primero se guarda la asignación actual\r\n              handleSubmit(new Event('submit'));\r\n              // Luego se llama al callback para agregar otra asignación para el mismo día.\r\n              if (onAddAnother) onAddAnother();\r\n            }}>\r\n              Agregar otro hotel para este día\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default HotelModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}