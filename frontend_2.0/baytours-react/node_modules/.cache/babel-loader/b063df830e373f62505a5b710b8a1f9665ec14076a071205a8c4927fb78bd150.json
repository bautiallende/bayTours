{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bautista\\\\Documents\\\\Proyectos\\\\bayTours\\\\bayTours\\\\frontend_2.0\\\\baytours-react\\\\src\\\\components\\\\GroupDetail\\\\modals\\\\RoomAssignmentModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\n\n// Función para calcular la edad a partir de la fecha de nacimiento\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateAge = birthDate => {\n  if (!birthDate) return '';\n  const birth = new Date(birthDate);\n  const diff = Date.now() - birth.getTime();\n  const ageDate = new Date(diff);\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n};\nconst parseCheckDate = (dateStr, defaultTime) => {\n  console.log('parseCheckDate: dateStr =', dateStr);\n  if (!dateStr || dateStr.toLowerCase() === 'jj/mm/aaaa') {\n    return {\n      date: '',\n      time: defaultTime\n    };\n  }\n  // Suponemos que el formato es \"dd/mm hh:mm\" (con un espacio)\n  const parts = dateStr.split(' ');\n  if (parts.length === 2) {\n    console.log('parseCheckDate: date: parts[0]', parts[0]);\n    return {\n      date: parts[0],\n      time: parts[1]\n    };\n  }\n  return {\n    date: dateStr,\n    time: defaultTime\n  };\n};\nconst RoomAssignmentModal = ({\n  show,\n  onHide,\n  initialData,\n  onSave,\n  availableHotels\n}) => {\n  _s();\n  console.log(`RoomAssignmentModal: initialData =`, initialData);\n  console.log(`RoomAssignmentModal: availableHotels =`, availableHotels);\n  // Campos editables\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\n  const [roomType, setRoomType] = useState(initialData.type || '');\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\n  const [notes, setNotes] = useState('');\n  const [validationMsg, setValidationMsg] = useState('');\n\n  // Opciones para tipos de habitación y datos asociados (precio, currency)\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\n  const [selectedRoomInfo, setSelectedRoomInfo] = useState(null);\n  const [selectedRoomId, setSelectedRoomId] = useState(null);\n\n  // Estados para suplementos\n  const [supplement, setSupplement] = useState('');\n  const [supplementCurrency, setSupplementCurrency] = useState('');\n\n  // Estados para los datos de check-in y check-out\n  const [city, setCity] = useState(initialData.city || '');\n  // Si existen datos en initialData, se separan; de lo contrario quedan vacíos (o se pueden asignar valores por defecto)\n  const [checkInDate, setCheckInDate] = useState('');\n  const [checkInTime, setCheckInTime] = useState(initialData.check_in_date ? parseCheckDate(initialData.check_in_date, '15:00').time : '15:00');\n  const [checkOutDate, setCheckOutDate] = useState(initialData.departure_date ? parseCheckDate(initialData.departure_date, '11:00').date : '');\n  const [checkOutTime, setCheckOutTime] = useState(initialData.departure_date ? parseCheckDate(initialData.departure_date, '11:00').time : '11:00');\n\n  // Effect para limpiar los campos editables cada vez que se abre el modal\n  useEffect(() => {\n    if (show) {\n      if (initialData && Object.keys(initialData).length > 0) {\n        console.log('initialData.check_in_date:', initialData.check_in_date);\n        console.log('initialData.departure_date:', initialData.departure_date);\n        setHotelId(initialData.id_hotel || '');\n        setRoomType(initialData.type || '');\n        setRoomNumber(initialData.room_number || '');\n        setNotes(initialData.comments || '');\n        setSelectedRoomInfo(initialData.price != null ? {\n          price: initialData.price,\n          currency: initialData.currency\n        } : null);\n        setSupplement(initialData.supplements || '');\n        setSupplementCurrency(initialData.supplements_currency || 'EUR');\n        setCity(initialData.city || '');\n        // Usamos las propiedades correctas:\n        const checkIn = initialData.check_in_date ? parseCheckDate(initialData.check_in_date, '15:00') : {\n          date: '',\n          time: '15:00'\n        };\n        setCheckInDate(checkIn.date);\n        setCheckInTime(checkIn.time);\n        const checkOut = initialData.departure_date ? parseCheckDate(initialData.departure_date, '11:00') : {\n          date: '',\n          time: '11:00'\n        };\n        setCheckOutDate(checkOut.date);\n        setCheckOutTime(checkOut.time);\n      } else {\n        setHotelId('');\n        setRoomType('');\n        setRoomNumber('');\n        setNotes('');\n        setValidationMsg('');\n        setRoomTypeOptions([]);\n        setSelectedRoomInfo(null);\n        setSelectedRoomId(null);\n        setSupplement('');\n        setSupplementCurrency('EUR');\n        setCity('');\n        setCheckInDate('');\n        setCheckInTime('15:00');\n        setCheckOutDate('');\n        setCheckOutTime('11:00');\n      }\n    }\n  }, [show, initialData]);\n\n  // Cuando se selecciona un hotel, actualizar las opciones de habitación y los datos de ciudad, check-in y check-out\n  useEffect(() => {\n    if (hotelId) {\n      // Llamada al endpoint para obtener tipos de habitación para el hotel seleccionado\n      fetch(`${process.env.REACT_APP_API_URL}/hotels_room/hotels_room?id_hotel=${hotelId}`).then(res => res.json()).then(data => {\n        if (data.status === 'success' && Array.isArray(data.data)) {\n          setRoomTypeOptions(data.data);\n        } else {\n          setRoomTypeOptions([]);\n        }\n      }).catch(err => {\n        console.error('Error al obtener tipos de habitación:', err);\n        setRoomTypeOptions([]);\n      });\n\n      // Buscar en availableHotels los datos del hotel seleccionado\n      const selectedHotel = availableHotels.find(h => h.id_hotel.toString() === hotelId);\n      setNotes(\"\");\n      if (selectedHotel) {\n        setCity(selectedHotel.city || '');\n        // Actualizar las fechas: separamos la fecha y la hora (si existen), o usamos valores por defecto.\n        if (selectedHotel.start_date) {\n          const parts = selectedHotel.start_date.split('T');\n          setCheckInDate(parts[0]);\n          setCheckInTime(parts[1] ? parts[1].slice(0, 5) : '15:00');\n        } else {\n          setCheckInDate('');\n          setCheckInTime('15:00');\n        }\n        if (selectedHotel.end_date) {\n          const parts = selectedHotel.end_date.split('T');\n          setCheckOutDate(parts[0]);\n          setCheckOutTime(parts[1] ? parts[1].slice(0, 5) : '11:00');\n        } else {\n          setCheckOutDate('');\n          setCheckOutTime('11:00');\n        }\n      }\n    } else {\n      setRoomTypeOptions([]);\n      setSelectedRoomInfo(null);\n      setSelectedRoomId(null);\n    }\n  }, [hotelId, availableHotels]);\n\n  // Al seleccionar un tipo de habitación, actualizar automáticamente precio y divisa\n  const handleRoomTypeChange = e => {\n    const selectedType = e.target.value;\n    setRoomType(selectedType);\n    const selectedOption = roomTypeOptions.find(rt => rt.type === selectedType);\n    setSelectedRoomInfo(selectedOption || null);\n    setSelectedRoomId(selectedOption ? selectedOption.id_room : null);\n  };\n\n  // Función para combinar fecha y hora en formato ISO (sin zona horaria)\n  const combineDateAndTime = (dateStr, timeStr) => {\n    if (!dateStr || !timeStr) return null;\n    // Asumimos que la zona horaria se manejará en el backend\n    return `${dateStr}T${timeStr}:00Z`;\n  };\n\n  // Función para guardar la asignación\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!hotelId) {\n      setValidationMsg('Debe seleccionar un hotel.');\n      return;\n    }\n    if (!roomType) {\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\n      return;\n    }\n    const checkInCombined = combineDateAndTime(checkInDate, checkInTime);\n    const checkOutCombined = combineDateAndTime(checkOutDate, checkOutTime);\n    const payload = {\n      id: initialData.id,\n      // supondremos que viene en initialData\n      id_hotel_reservation: hotelId || 0,\n      client_id: initialData.id_clients,\n      id_room: selectedRoomId,\n      room_number: roomNumber,\n      check_in_date: checkInCombined,\n      departure_date: checkOutCombined,\n      price: selectedRoomInfo ? selectedRoomInfo.price : null,\n      currency: selectedRoomInfo ? selectedRoomInfo.currency : null,\n      complement: supplement ? Number(supplement) : 0,\n      complement_currency: supplementCurrency,\n      status: \"New\",\n      // valor fijo o variable según el flujo\n      comments: notes\n    };\n    onSave(payload).then(() => {\n      onHide();\n    }).catch(err => {\n      setValidationMsg(err.message || 'Error al guardar la asignación.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    size: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cliente:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), \" \", `${initialData.first_name || ''} ${initialData.second_name || ''} ${initialData.paternal_surname || ''} ${initialData.mother_surname || ''}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Edad:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), \" \", calculateAge(initialData.birth_date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sexo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), \" \", initialData.sex || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pasaporte:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), \" \", initialData.passport || '-']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fecha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), \" \", initialData.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editHotel\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Hotel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: hotelId,\n            onChange: e => setHotelId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccione un hotel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), availableHotels.map(h => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: h.id_hotel,\n              children: h.hotel_name\n            }, h.id_hotel, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Ciudad Actualizada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: city,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckInDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Check-in (Fecha)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkInDate,\n                onChange: e => setCheckInDate(e.target.value),\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            className: \"text-end\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckInTime\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-in (Hora)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"time\",\n                value: checkInTime,\n                onChange: e => setCheckInTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3 justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckOutDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Check-out (Fecha)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                value: checkOutDate,\n                onChange: e => setCheckOutDate(e.target.value),\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            className: \"text-end\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCheckOutTime\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Check-out (Hora)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"time\",\n                value: checkOutTime,\n                onChange: e => setCheckOutTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"editRoomType\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tipo de Habitaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: roomType,\n                onChange: handleRoomTypeChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Seleccione un tipo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), roomTypeOptions.map(rt => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: rt.type,\n                  children: rt.type\n                }, rt.id_room, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayPrice\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Precio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: selectedRoomInfo ? selectedRoomInfo.price : '',\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"displayCurrency\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Divisa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: selectedRoomInfo ? selectedRoomInfo.currency : '',\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"editSupplement\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Suplemento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                value: supplement,\n                onChange: e => setSupplement(e.target.value),\n                placeholder: \"Ingrese suplemento (opcional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"editSupplementCurrency\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Divisa Suplemento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                value: supplementCurrency,\n                onChange: e => setSupplementCurrency(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"EUR\",\n                  children: \"EUR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"USD\",\n                  children: \"USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"GBP\",\n                  children: \"GBP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editRoomNumber\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"N\\xFAmero de Habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: roomNumber,\n            onChange: e => setRoomNumber(e.target.value),\n            placeholder: \"Ingrese el n\\xFAmero de habitaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"editNotes\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Notas / Comentarios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: notes,\n            onChange: e => setNotes(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), validationMsg && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: validationMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: onHide,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomAssignmentModal, \"bJYyHV3SJl3WVQrV+MV2Xa4tQds=\");\n_c = RoomAssignmentModal;\nRoomAssignmentModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  initialData: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  availableHotels: PropTypes.array.isRequired\n};\nexport default RoomAssignmentModal;\nvar _c;\n$RefreshReg$(_c, \"RoomAssignmentModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Modal","Button","Form","Row","Col","Alert","jsxDEV","_jsxDEV","calculateAge","birthDate","birth","Date","diff","now","getTime","ageDate","Math","abs","getUTCFullYear","parseCheckDate","dateStr","defaultTime","console","log","toLowerCase","date","time","parts","split","length","RoomAssignmentModal","show","onHide","initialData","onSave","availableHotels","_s","hotelId","setHotelId","id_hotel","roomType","setRoomType","type","roomNumber","setRoomNumber","room_number","notes","setNotes","validationMsg","setValidationMsg","roomTypeOptions","setRoomTypeOptions","selectedRoomInfo","setSelectedRoomInfo","selectedRoomId","setSelectedRoomId","supplement","setSupplement","supplementCurrency","setSupplementCurrency","city","setCity","checkInDate","setCheckInDate","checkInTime","setCheckInTime","check_in_date","checkOutDate","setCheckOutDate","departure_date","checkOutTime","setCheckOutTime","Object","keys","comments","price","currency","supplements","supplements_currency","checkIn","checkOut","fetch","process","env","REACT_APP_API_URL","then","res","json","data","status","Array","isArray","catch","err","error","selectedHotel","find","h","toString","start_date","slice","end_date","handleRoomTypeChange","e","selectedType","target","value","selectedOption","rt","id_room","combineDateAndTime","timeStr","handleSubmit","preventDefault","checkInCombined","checkOutCombined","payload","id","id_hotel_reservation","client_id","id_clients","complement","Number","complement_currency","message","centered","size","children","onSubmit","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","first_name","second_name","paternal_surname","mother_surname","md","birth_date","sex","passport","Group","controlId","Label","Select","onChange","map","hotel_name","Control","readOnly","placeholder","as","rows","variant","Footer","onClick","_c","propTypes","bool","isRequired","func","object","array","$RefreshReg$"],"sources":["C:/Users/Bautista/Documents/Proyectos/bayTours/bayTours/frontend_2.0/baytours-react/src/components/GroupDetail/modals/RoomAssignmentModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Form, Row, Col, Alert } from 'react-bootstrap';\r\n\r\n// Función para calcular la edad a partir de la fecha de nacimiento\r\nconst calculateAge = (birthDate) => {\r\n  if (!birthDate) return '';\r\n  const birth = new Date(birthDate);\r\n  const diff = Date.now() - birth.getTime();\r\n  const ageDate = new Date(diff);\r\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n};\r\n\r\nconst parseCheckDate = (dateStr, defaultTime) => {\r\n  console.log('parseCheckDate: dateStr =', dateStr);\r\n  if (!dateStr || dateStr.toLowerCase() === 'jj/mm/aaaa') {\r\n    return { date: '', time: defaultTime };\r\n  }\r\n  // Suponemos que el formato es \"dd/mm hh:mm\" (con un espacio)\r\n  const parts = dateStr.split(' ');\r\n  if (parts.length === 2) {\r\n    console.log('parseCheckDate: date: parts[0]', parts[0])\r\n    return { date: parts[0], time: parts[1] };\r\n  }\r\n  return { date: dateStr, time: defaultTime };\r\n};\r\n\r\n\r\n\r\n\r\nconst RoomAssignmentModal = ({ show, onHide, initialData, onSave, availableHotels }) => {\r\n  console.log(`RoomAssignmentModal: initialData =`, initialData);\r\n  console.log(`RoomAssignmentModal: availableHotels =`, availableHotels);\r\n  // Campos editables\r\n  const [hotelId, setHotelId] = useState(initialData.id_hotel || '');\r\n  const [roomType, setRoomType] = useState(initialData.type || '');\r\n  const [roomNumber, setRoomNumber] = useState(initialData.room_number || '');\r\n  const [notes, setNotes] = useState('');\r\n  const [validationMsg, setValidationMsg] = useState('');\r\n\r\n  // Opciones para tipos de habitación y datos asociados (precio, currency)\r\n  const [roomTypeOptions, setRoomTypeOptions] = useState([]);\r\n  const [selectedRoomInfo, setSelectedRoomInfo] = useState(null);\r\n  const [selectedRoomId, setSelectedRoomId] = useState(null);\r\n\r\n  // Estados para suplementos\r\n  const [supplement, setSupplement] = useState('');\r\n  const [supplementCurrency, setSupplementCurrency] = useState('');\r\n\r\n  // Estados para los datos de check-in y check-out\r\n  const [city, setCity] = useState(initialData.city || '');\r\n  // Si existen datos en initialData, se separan; de lo contrario quedan vacíos (o se pueden asignar valores por defecto)\r\n  const [checkInDate, setCheckInDate] = useState(\r\n    ''\r\n  );\r\n  const [checkInTime, setCheckInTime] = useState(\r\n    initialData.check_in_date ? parseCheckDate(initialData.check_in_date, '15:00').time : '15:00'\r\n  );\r\n  const [checkOutDate, setCheckOutDate] = useState(\r\n    initialData.departure_date ? parseCheckDate(initialData.departure_date, '11:00').date : ''\r\n  );\r\n  const [checkOutTime, setCheckOutTime] = useState(\r\n    initialData.departure_date ? parseCheckDate(initialData.departure_date, '11:00').time : '11:00'\r\n  );\r\n\r\n    // Effect para limpiar los campos editables cada vez que se abre el modal\r\n    useEffect(() => {\r\n      if (show) {\r\n        if (initialData && Object.keys(initialData).length > 0) {\r\n          console.log('initialData.check_in_date:', initialData.check_in_date);\r\n          console.log('initialData.departure_date:', initialData.departure_date);\r\n          setHotelId(initialData.id_hotel || '');\r\n          setRoomType(initialData.type || '');\r\n          setRoomNumber(initialData.room_number || '');\r\n          setNotes(initialData.comments || '');\r\n          setSelectedRoomInfo(\r\n            initialData.price != null ? { price: initialData.price, currency: initialData.currency } : null\r\n          );\r\n          setSupplement(initialData.supplements || '');\r\n          setSupplementCurrency(initialData.supplements_currency || 'EUR');\r\n          setCity(initialData.city || '');\r\n          // Usamos las propiedades correctas:\r\n          const checkIn = initialData.check_in_date ? parseCheckDate(initialData.check_in_date, '15:00') : { date: '', time: '15:00' };\r\n          setCheckInDate(checkIn.date);\r\n          setCheckInTime(checkIn.time);\r\n          const checkOut = initialData.departure_date ? parseCheckDate(initialData.departure_date, '11:00') : { date: '', time: '11:00' };\r\n          setCheckOutDate(checkOut.date);\r\n          setCheckOutTime(checkOut.time);\r\n        } else {\r\n          setHotelId('');\r\n          setRoomType('');\r\n          setRoomNumber('');\r\n          setNotes('');\r\n          setValidationMsg('');\r\n          setRoomTypeOptions([]);\r\n          setSelectedRoomInfo(null);\r\n          setSelectedRoomId(null);\r\n          setSupplement('');\r\n          setSupplementCurrency('EUR');\r\n          setCity('');\r\n          setCheckInDate('');\r\n          setCheckInTime('15:00');\r\n          setCheckOutDate('');\r\n          setCheckOutTime('11:00');\r\n        }\r\n      }\r\n    }, [show, initialData]);\r\n\r\n  // Cuando se selecciona un hotel, actualizar las opciones de habitación y los datos de ciudad, check-in y check-out\r\n  useEffect(() => {\r\n    if (hotelId) {\r\n      // Llamada al endpoint para obtener tipos de habitación para el hotel seleccionado\r\n      fetch(`${process.env.REACT_APP_API_URL}/hotels_room/hotels_room?id_hotel=${hotelId}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.status === 'success' && Array.isArray(data.data)) {\r\n            setRoomTypeOptions(data.data);\r\n          } else {\r\n            setRoomTypeOptions([]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error('Error al obtener tipos de habitación:', err);\r\n          setRoomTypeOptions([]);\r\n        });\r\n      \r\n      // Buscar en availableHotels los datos del hotel seleccionado\r\n      const selectedHotel = availableHotels.find(h => h.id_hotel.toString() === hotelId);\r\n      setNotes(\"\");\r\n      if (selectedHotel) {\r\n        setCity(selectedHotel.city || '');\r\n        // Actualizar las fechas: separamos la fecha y la hora (si existen), o usamos valores por defecto.\r\n        if (selectedHotel.start_date) {\r\n          const parts = selectedHotel.start_date.split('T');\r\n          setCheckInDate(parts[0]);\r\n          setCheckInTime(parts[1] ? parts[1].slice(0,5) : '15:00');\r\n        } else {\r\n          setCheckInDate('');\r\n          setCheckInTime('15:00');\r\n        }\r\n        if (selectedHotel.end_date) {\r\n          const parts = selectedHotel.end_date.split('T');\r\n          setCheckOutDate(parts[0]);\r\n          setCheckOutTime(parts[1] ? parts[1].slice(0,5) : '11:00');\r\n        } else {\r\n          setCheckOutDate('');\r\n          setCheckOutTime('11:00');\r\n        }\r\n      }\r\n    } else {\r\n      setRoomTypeOptions([]);\r\n      setSelectedRoomInfo(null);\r\n      setSelectedRoomId(null);\r\n    }\r\n  }, [hotelId, availableHotels]);\r\n\r\n  // Al seleccionar un tipo de habitación, actualizar automáticamente precio y divisa\r\n  const handleRoomTypeChange = (e) => {\r\n    const selectedType = e.target.value;\r\n    setRoomType(selectedType);\r\n    const selectedOption = roomTypeOptions.find(rt => rt.type === selectedType);\r\n    setSelectedRoomInfo(selectedOption || null);\r\n    setSelectedRoomId(selectedOption ? selectedOption.id_room : null);\r\n  };\r\n\r\n  // Función para combinar fecha y hora en formato ISO (sin zona horaria)\r\n  const combineDateAndTime = (dateStr, timeStr) => {\r\n    if (!dateStr || !timeStr) return null;\r\n    // Asumimos que la zona horaria se manejará en el backend\r\n    return `${dateStr}T${timeStr}:00Z`;\r\n  };\r\n\r\n  // Función para guardar la asignación\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!hotelId) {\r\n      setValidationMsg('Debe seleccionar un hotel.');\r\n      return;\r\n    }\r\n    if (!roomType) {\r\n      setValidationMsg('Debe seleccionar un tipo de habitación.');\r\n      return;\r\n    }\r\n    const checkInCombined = combineDateAndTime(checkInDate, checkInTime);\r\n    const checkOutCombined = combineDateAndTime(checkOutDate, checkOutTime);\r\n    const payload = {\r\n      id: initialData.id, // supondremos que viene en initialData\r\n      id_hotel_reservation: hotelId || 0,\r\n      client_id: initialData.id_clients,\r\n      id_room: selectedRoomId,\r\n      room_number: roomNumber,\r\n      check_in_date: checkInCombined,\r\n      departure_date: checkOutCombined,\r\n      price: selectedRoomInfo ? selectedRoomInfo.price : null,\r\n      currency: selectedRoomInfo ? selectedRoomInfo.currency : null,\r\n      complement: supplement ? Number(supplement) : 0,\r\n      complement_currency: supplementCurrency,\r\n      status: \"New\", // valor fijo o variable según el flujo\r\n      comments: notes,\r\n    };\r\n    onSave(payload)\r\n      .then(() => {\r\n        onHide();\r\n      })\r\n      .catch((err) => {\r\n        setValidationMsg(err.message || 'Error al guardar la asignación.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} centered size=\"xl\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{initialData.id ? 'Editar Asignación de Cuarto' : 'Asignar Cuarto'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Fila 1: Información del Cliente */}\r\n          <Row className=\"mb-2\">\r\n            <Col>\r\n              <strong>Cliente:</strong> {`${initialData.first_name || ''} ${initialData.second_name || ''} ${initialData.paternal_surname || ''} ${initialData.mother_surname || ''}`}\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 2: Datos Personales */}\r\n          <Row className=\"mb-2\">\r\n            <Col md={4}>\r\n              <strong>Edad:</strong> {calculateAge(initialData.birth_date)}\r\n            </Col>\r\n            <Col md={4}>\r\n              <strong>Sexo:</strong> {initialData.sex || '-'}\r\n            </Col>\r\n            <Col md={4}>\r\n              <strong>Pasaporte:</strong> {initialData.passport || '-'}\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 3: Fecha y Ciudad Original */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <strong>Fecha:</strong> {initialData.date}\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 4: Selección de Hotel */}\r\n          <Form.Group controlId=\"editHotel\" className=\"mb-3\">\r\n            <Form.Label>Hotel</Form.Label>\r\n            <Form.Select value={hotelId} onChange={(e) => setHotelId(e.target.value)}>\r\n              <option value=\"\">Seleccione un hotel</option>\r\n              {availableHotels.map((h) => (\r\n                <option key={h.id_hotel} value={h.id_hotel}>\r\n                  {h.hotel_name}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n          {/* Fila 5: Mostrar Ciudad y Fechas Actualizadas (solo lectura) */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCity\">\r\n                <Form.Label className=\"fw-bold\">Ciudad Actualizada</Form.Label>\r\n                <Form.Control type=\"text\" value={city} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCheckInDate\">\r\n                <Form.Label className=\"fw-bold\">Check-in (Fecha)</Form.Label>\r\n                <Form.Control type=\"date\" value={checkInDate} onChange={(e) => setCheckInDate(e.target.value)} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"text-end\">\r\n              <Form.Group controlId=\"displayCheckInTime\">\r\n                <Form.Label>Check-in (Hora)</Form.Label>\r\n                <Form.Control type=\"time\" value={checkInTime} onChange={(e) => setCheckInTime(e.target.value)} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3 justify-content-end\">\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCheckOutDate\">\r\n                <Form.Label className=\"fw-bold\">Check-out (Fecha)</Form.Label>\r\n                <Form.Control type=\"date\" value={checkOutDate} onChange={(e) => setCheckOutDate(e.target.value)} readOnly/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4} className=\"text-end\">\r\n              <Form.Group controlId=\"displayCheckOutTime\">\r\n                <Form.Label>Check-out (Hora)</Form.Label>\r\n                <Form.Control type=\"time\" value={checkOutTime} onChange={(e) => setCheckOutTime(e.target.value)} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 6: Selección de Tipo de Habitación y visualización de Precio y Divisa */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={5}>\r\n              <Form.Group controlId=\"editRoomType\">\r\n                <Form.Label>Tipo de Habitación</Form.Label>\r\n                <Form.Select value={roomType} onChange={handleRoomTypeChange}>\r\n                  <option value=\"\">Seleccione un tipo</option>\r\n                  {roomTypeOptions.map((rt) => (\r\n                    <option key={rt.id_room} value={rt.type}>\r\n                      {rt.type}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Form.Group controlId=\"displayPrice\">\r\n                <Form.Label className=\"fw-bold\">Precio</Form.Label>\r\n                <Form.Control type=\"number\" value={selectedRoomInfo ? selectedRoomInfo.price : ''} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Form.Group controlId=\"displayCurrency\">\r\n                <Form.Label className=\"fw-bold\">Divisa</Form.Label>\r\n                <Form.Control type=\"text\" value={selectedRoomInfo ? selectedRoomInfo.currency : ''} readOnly />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 7: Suplemento y Divisa de Suplemento */}\r\n          <Row className=\"mb-3\">\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"editSupplement\">\r\n                <Form.Label>Suplemento</Form.Label>\r\n                <Form.Control type=\"number\" value={supplement} onChange={(e) => setSupplement(e.target.value)} placeholder=\"Ingrese suplemento (opcional)\" />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Form.Group controlId=\"editSupplementCurrency\">\r\n                <Form.Label>Divisa Suplemento</Form.Label>\r\n                <Form.Select value={supplementCurrency} onChange={(e) => setSupplementCurrency(e.target.value)}>\r\n                  <option value=\"EUR\">EUR</option>\r\n                  <option value=\"USD\">USD</option>\r\n                  <option value=\"GBP\">GBP</option>\r\n                  {/* Más opciones si es necesario */}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {/* Fila 8: Número de Habitación */}\r\n          <Form.Group controlId=\"editRoomNumber\" className=\"mb-3\">\r\n            <Form.Label>Número de Habitación</Form.Label>\r\n            <Form.Control type=\"text\" value={roomNumber} onChange={(e) => setRoomNumber(e.target.value)} placeholder=\"Ingrese el número de habitación\" />\r\n          </Form.Group>\r\n          {/* Fila 9: Notas / Comentarios */}\r\n          <Form.Group controlId=\"editNotes\" className=\"mb-3\">\r\n            <Form.Label>Notas / Comentarios</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} value={notes} onChange={(e) => setNotes(e.target.value)} />\r\n          </Form.Group>\r\n          {validationMsg && <Alert variant=\"danger\">{validationMsg}</Alert>}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={onHide}>Cancelar</Button>\r\n          <Button variant=\"primary\" type=\"submit\">Guardar Cambios</Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nRoomAssignmentModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  initialData: PropTypes.object.isRequired,\r\n  onSave: PropTypes.func.isRequired,\r\n  availableHotels: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default RoomAssignmentModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}